package misty1

import (
    "bytes"
    "testing"
)

var tests = []struct {
    key    []byte
    plain  []byte
    cipher []byte
}{
    // http://tools.ietf.org/search/rfc2994
    {
        []byte{0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff},
        []byte{0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef},
        []byte{0x8b, 0x1d, 0xa5, 0xf5, 0x6a, 0xb3, 0xd0, 0x7c},
    },
    {
        []byte{0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff},
        []byte{0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10},
        []byte{0x04, 0xb6, 0x82, 0x40, 0xb1, 0x3b, 0xe9, 0x5d},
    },
}

func TestMISTY1(t *testing.T) {

    for _, tst := range tests {

        c, _ := NewCipher(tst.key)

        var ct [8]byte

        c.Encrypt(ct[:], tst.plain[:])

        if !bytes.Equal(ct[:], tst.cipher) {
            t.Errorf("encrypt failed:\ngot : % 02x\nwant: % 02x", ct[:], tst.cipher)
        }

        var p [8]byte

        c.Decrypt(p[:], ct[:])

        if !bytes.Equal(p[:], tst.plain) {
            t.Errorf("decrypt failed:\ngot : % 02x\nwant: % 02x", p[:], tst.plain)
        }
    }
}
