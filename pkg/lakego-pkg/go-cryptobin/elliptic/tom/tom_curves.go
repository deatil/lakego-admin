package tom

import (
    "math/big"
    "crypto/elliptic"
)

var p256, p384 *elliptic.CurveParams

func initAll() {
    initP256()
    initP384()
}

func initP256() {
    p256 = &elliptic.CurveParams{
        P: bigFromHex("FFFFFFFF0000000100000000000000017E72B42B30E7317793135661B1C4B117"),
        N: bigFromHex("FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF"),
        B: bigFromHex("B441071B12F4A0366FB552F8E21ED4AC36B06ACEEB354224863E60F20219FC56"),
        Gx: bigFromHex("03"),
        Gy: bigFromHex("5A6DD32DF58708E64E97345CBE66600DECD9D538A351BB3C30B4954925B1F02D"),
        BitSize: 256,
        Name: "Tom-256",
    }
}

func initP384() {
    p384 = &elliptic.CurveParams{
        P: bigFromHex("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF"),
        N: bigFromHex("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973"),
        B: bigFromHex("B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF"),
        Gx: bigFromHex("AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7"),
        Gy: bigFromHex("3617DE4A96262C6F5D9E98BF9292DC29F8F41DBD289A147CE9DA3113B5F0B8C00A60B1CE1D7E819D7A431D7C90EA0E5F"),
        BitSize: 384,
        Name: "Tom-384",
    }
}

func bigFromHex(s string) (i *big.Int) {
    i = new(big.Int)
    i.SetString(s, 16)

    return
}
