// Code generated by Fiat Cryptography. DO NOT EDIT.
//
// Autogenerated: word_by_word_montgomery --lang Go --no-wide-int --cmovznz-by-mul --relax-primitive-carry-to-bitwidth 32,64 --internal-static --public-function-case camelCase --public-type-case camelCase --private-function-case camelCase --private-type-case camelCase --doc-text-before-function-name '' --doc-newline-before-package-declaration --doc-prepend-header 'Code generated by Fiat Cryptography. DO NOT EDIT.' --package-name fiat --no-prefix-fiat p512 64 '2^512 - 569' mul square add sub one from_montgomery to_montgomery selectznz to_bytes from_bytes
//
// curve description: p512
//
// machine_wordsize = 64 (from "64")
//
// requested operations: mul, square, add, sub, one, from_montgomery, to_montgomery, selectznz, to_bytes, from_bytes
//
// m = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc7 (from "2^512 - 569")
//
//
//
// NOTE: In addition to the bounds specified above each function, all
//
//   functions synthesized for this Montgomery arithmetic require the
//
//   input to be strictly less than the prime modulus (m), and also
//
//   require the input to be in the unique saturated representation.
//
//   All functions also ensure that these two properties are true of
//
//   return values.
//
//
//
// Computed values:
//
//   eval z = z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140) + (z[6] << 0x180) + (z[7] << 0x1c0)
//
//   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) + (z[32] << 256) + (z[33] << 0x108) + (z[34] << 0x110) + (z[35] << 0x118) + (z[36] << 0x120) + (z[37] << 0x128) + (z[38] << 0x130) + (z[39] << 0x138) + (z[40] << 0x140) + (z[41] << 0x148) + (z[42] << 0x150) + (z[43] << 0x158) + (z[44] << 0x160) + (z[45] << 0x168) + (z[46] << 0x170) + (z[47] << 0x178) + (z[48] << 0x180) + (z[49] << 0x188) + (z[50] << 0x190) + (z[51] << 0x198) + (z[52] << 0x1a0) + (z[53] << 0x1a8) + (z[54] << 0x1b0) + (z[55] << 0x1b8) + (z[56] << 0x1c0) + (z[57] << 0x1c8) + (z[58] << 0x1d0) + (z[59] << 0x1d8) + (z[60] << 0x1e0) + (z[61] << 0x1e8) + (z[62] << 0x1f0) + (z[63] << 0x1f8)
//
//   twos_complement_eval z = let x1 := z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140) + (z[6] << 0x180) + (z[7] << 0x1c0) in
//
//                            if x1 & (2^512-1) < 2^511 then x1 & (2^512-1) else (x1 & (2^512-1)) - 2^512

package fiat

import "math/bits"

type p512Uint1 uint64 // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927
type p512Int1 int64   // We use uint64 instead of a more narrow type for performance reasons; see https://github.com/mit-plv/fiat-crypto/pull/1006#issuecomment-892625927

// The type p512MontgomeryDomainFieldElement is a field element in the Montgomery domain.
//
// Bounds: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
type p512MontgomeryDomainFieldElement [8]uint64

// The type p512NonMontgomeryDomainFieldElement is a field element NOT in the Montgomery domain.
//
// Bounds: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
type p512NonMontgomeryDomainFieldElement [8]uint64

// p512CmovznzU64 is a single-word conditional move.
//
// Postconditions:
//
//	out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//
//	arg1: [0x0 ~> 0x1]
//	arg2: [0x0 ~> 0xffffffffffffffff]
//	arg3: [0x0 ~> 0xffffffffffffffff]
//
// Output Bounds:
//
//	out1: [0x0 ~> 0xffffffffffffffff]
func p512CmovznzU64(out1 *uint64, arg1 p512Uint1, arg2 uint64, arg3 uint64) {
    x1 := (uint64(arg1) * 0xffffffffffffffff)
    x2 := ((x1 & arg3) | ((^x1) & arg2))
    *out1 = x2
}

// p512Mul multiplies two field elements in the Montgomery domain.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//	0 ≤ eval arg2 < m
//
// Postconditions:
//
//	eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
//	0 ≤ eval out1 < m
func p512Mul(out1 *p512MontgomeryDomainFieldElement, arg1 *p512MontgomeryDomainFieldElement, arg2 *p512MontgomeryDomainFieldElement) {
    x1 := arg1[1]
    x2 := arg1[2]
    x3 := arg1[3]
    x4 := arg1[4]
    x5 := arg1[5]
    x6 := arg1[6]
    x7 := arg1[7]
    x8 := arg1[0]
    var x9 uint64
    var x10 uint64
    x10, x9 = bits.Mul64(x8, arg2[7])
    var x11 uint64
    var x12 uint64
    x12, x11 = bits.Mul64(x8, arg2[6])
    var x13 uint64
    var x14 uint64
    x14, x13 = bits.Mul64(x8, arg2[5])
    var x15 uint64
    var x16 uint64
    x16, x15 = bits.Mul64(x8, arg2[4])
    var x17 uint64
    var x18 uint64
    x18, x17 = bits.Mul64(x8, arg2[3])
    var x19 uint64
    var x20 uint64
    x20, x19 = bits.Mul64(x8, arg2[2])
    var x21 uint64
    var x22 uint64
    x22, x21 = bits.Mul64(x8, arg2[1])
    var x23 uint64
    var x24 uint64
    x24, x23 = bits.Mul64(x8, arg2[0])
    var x25 uint64
    var x26 uint64
    x25, x26 = bits.Add64(x24, x21, uint64(0x0))
    var x27 uint64
    var x28 uint64
    x27, x28 = bits.Add64(x22, x19, uint64(p512Uint1(x26)))
    var x29 uint64
    var x30 uint64
    x29, x30 = bits.Add64(x20, x17, uint64(p512Uint1(x28)))
    var x31 uint64
    var x32 uint64
    x31, x32 = bits.Add64(x18, x15, uint64(p512Uint1(x30)))
    var x33 uint64
    var x34 uint64
    x33, x34 = bits.Add64(x16, x13, uint64(p512Uint1(x32)))
    var x35 uint64
    var x36 uint64
    x35, x36 = bits.Add64(x14, x11, uint64(p512Uint1(x34)))
    var x37 uint64
    var x38 uint64
    x37, x38 = bits.Add64(x12, x9, uint64(p512Uint1(x36)))
    x39 := (uint64(p512Uint1(x38)) + x10)
    var x40 uint64
    _, x40 = bits.Mul64(x23, 0x58a1f7e6ce0f4c09)
    var x42 uint64
    var x43 uint64
    x43, x42 = bits.Mul64(x40, 0xffffffffffffffff)
    var x44 uint64
    var x45 uint64
    x45, x44 = bits.Mul64(x40, 0xffffffffffffffff)
    var x46 uint64
    var x47 uint64
    x47, x46 = bits.Mul64(x40, 0xffffffffffffffff)
    var x48 uint64
    var x49 uint64
    x49, x48 = bits.Mul64(x40, 0xffffffffffffffff)
    var x50 uint64
    var x51 uint64
    x51, x50 = bits.Mul64(x40, 0xffffffffffffffff)
    var x52 uint64
    var x53 uint64
    x53, x52 = bits.Mul64(x40, 0xffffffffffffffff)
    var x54 uint64
    var x55 uint64
    x55, x54 = bits.Mul64(x40, 0xffffffffffffffff)
    var x56 uint64
    var x57 uint64
    x57, x56 = bits.Mul64(x40, 0xfffffffffffffdc7)
    var x58 uint64
    var x59 uint64
    x58, x59 = bits.Add64(x57, x54, uint64(0x0))
    var x60 uint64
    var x61 uint64
    x60, x61 = bits.Add64(x55, x52, uint64(p512Uint1(x59)))
    var x62 uint64
    var x63 uint64
    x62, x63 = bits.Add64(x53, x50, uint64(p512Uint1(x61)))
    var x64 uint64
    var x65 uint64
    x64, x65 = bits.Add64(x51, x48, uint64(p512Uint1(x63)))
    var x66 uint64
    var x67 uint64
    x66, x67 = bits.Add64(x49, x46, uint64(p512Uint1(x65)))
    var x68 uint64
    var x69 uint64
    x68, x69 = bits.Add64(x47, x44, uint64(p512Uint1(x67)))
    var x70 uint64
    var x71 uint64
    x70, x71 = bits.Add64(x45, x42, uint64(p512Uint1(x69)))
    x72 := (uint64(p512Uint1(x71)) + x43)
    var x74 uint64
    _, x74 = bits.Add64(x23, x56, uint64(0x0))
    var x75 uint64
    var x76 uint64
    x75, x76 = bits.Add64(x25, x58, uint64(p512Uint1(x74)))
    var x77 uint64
    var x78 uint64
    x77, x78 = bits.Add64(x27, x60, uint64(p512Uint1(x76)))
    var x79 uint64
    var x80 uint64
    x79, x80 = bits.Add64(x29, x62, uint64(p512Uint1(x78)))
    var x81 uint64
    var x82 uint64
    x81, x82 = bits.Add64(x31, x64, uint64(p512Uint1(x80)))
    var x83 uint64
    var x84 uint64
    x83, x84 = bits.Add64(x33, x66, uint64(p512Uint1(x82)))
    var x85 uint64
    var x86 uint64
    x85, x86 = bits.Add64(x35, x68, uint64(p512Uint1(x84)))
    var x87 uint64
    var x88 uint64
    x87, x88 = bits.Add64(x37, x70, uint64(p512Uint1(x86)))
    var x89 uint64
    var x90 uint64
    x89, x90 = bits.Add64(x39, x72, uint64(p512Uint1(x88)))
    var x91 uint64
    var x92 uint64
    x92, x91 = bits.Mul64(x1, arg2[7])
    var x93 uint64
    var x94 uint64
    x94, x93 = bits.Mul64(x1, arg2[6])
    var x95 uint64
    var x96 uint64
    x96, x95 = bits.Mul64(x1, arg2[5])
    var x97 uint64
    var x98 uint64
    x98, x97 = bits.Mul64(x1, arg2[4])
    var x99 uint64
    var x100 uint64
    x100, x99 = bits.Mul64(x1, arg2[3])
    var x101 uint64
    var x102 uint64
    x102, x101 = bits.Mul64(x1, arg2[2])
    var x103 uint64
    var x104 uint64
    x104, x103 = bits.Mul64(x1, arg2[1])
    var x105 uint64
    var x106 uint64
    x106, x105 = bits.Mul64(x1, arg2[0])
    var x107 uint64
    var x108 uint64
    x107, x108 = bits.Add64(x106, x103, uint64(0x0))
    var x109 uint64
    var x110 uint64
    x109, x110 = bits.Add64(x104, x101, uint64(p512Uint1(x108)))
    var x111 uint64
    var x112 uint64
    x111, x112 = bits.Add64(x102, x99, uint64(p512Uint1(x110)))
    var x113 uint64
    var x114 uint64
    x113, x114 = bits.Add64(x100, x97, uint64(p512Uint1(x112)))
    var x115 uint64
    var x116 uint64
    x115, x116 = bits.Add64(x98, x95, uint64(p512Uint1(x114)))
    var x117 uint64
    var x118 uint64
    x117, x118 = bits.Add64(x96, x93, uint64(p512Uint1(x116)))
    var x119 uint64
    var x120 uint64
    x119, x120 = bits.Add64(x94, x91, uint64(p512Uint1(x118)))
    x121 := (uint64(p512Uint1(x120)) + x92)
    var x122 uint64
    var x123 uint64
    x122, x123 = bits.Add64(x75, x105, uint64(0x0))
    var x124 uint64
    var x125 uint64
    x124, x125 = bits.Add64(x77, x107, uint64(p512Uint1(x123)))
    var x126 uint64
    var x127 uint64
    x126, x127 = bits.Add64(x79, x109, uint64(p512Uint1(x125)))
    var x128 uint64
    var x129 uint64
    x128, x129 = bits.Add64(x81, x111, uint64(p512Uint1(x127)))
    var x130 uint64
    var x131 uint64
    x130, x131 = bits.Add64(x83, x113, uint64(p512Uint1(x129)))
    var x132 uint64
    var x133 uint64
    x132, x133 = bits.Add64(x85, x115, uint64(p512Uint1(x131)))
    var x134 uint64
    var x135 uint64
    x134, x135 = bits.Add64(x87, x117, uint64(p512Uint1(x133)))
    var x136 uint64
    var x137 uint64
    x136, x137 = bits.Add64(x89, x119, uint64(p512Uint1(x135)))
    var x138 uint64
    var x139 uint64
    x138, x139 = bits.Add64(uint64(p512Uint1(x90)), x121, uint64(p512Uint1(x137)))
    var x140 uint64
    _, x140 = bits.Mul64(x122, 0x58a1f7e6ce0f4c09)
    var x142 uint64
    var x143 uint64
    x143, x142 = bits.Mul64(x140, 0xffffffffffffffff)
    var x144 uint64
    var x145 uint64
    x145, x144 = bits.Mul64(x140, 0xffffffffffffffff)
    var x146 uint64
    var x147 uint64
    x147, x146 = bits.Mul64(x140, 0xffffffffffffffff)
    var x148 uint64
    var x149 uint64
    x149, x148 = bits.Mul64(x140, 0xffffffffffffffff)
    var x150 uint64
    var x151 uint64
    x151, x150 = bits.Mul64(x140, 0xffffffffffffffff)
    var x152 uint64
    var x153 uint64
    x153, x152 = bits.Mul64(x140, 0xffffffffffffffff)
    var x154 uint64
    var x155 uint64
    x155, x154 = bits.Mul64(x140, 0xffffffffffffffff)
    var x156 uint64
    var x157 uint64
    x157, x156 = bits.Mul64(x140, 0xfffffffffffffdc7)
    var x158 uint64
    var x159 uint64
    x158, x159 = bits.Add64(x157, x154, uint64(0x0))
    var x160 uint64
    var x161 uint64
    x160, x161 = bits.Add64(x155, x152, uint64(p512Uint1(x159)))
    var x162 uint64
    var x163 uint64
    x162, x163 = bits.Add64(x153, x150, uint64(p512Uint1(x161)))
    var x164 uint64
    var x165 uint64
    x164, x165 = bits.Add64(x151, x148, uint64(p512Uint1(x163)))
    var x166 uint64
    var x167 uint64
    x166, x167 = bits.Add64(x149, x146, uint64(p512Uint1(x165)))
    var x168 uint64
    var x169 uint64
    x168, x169 = bits.Add64(x147, x144, uint64(p512Uint1(x167)))
    var x170 uint64
    var x171 uint64
    x170, x171 = bits.Add64(x145, x142, uint64(p512Uint1(x169)))
    x172 := (uint64(p512Uint1(x171)) + x143)
    var x174 uint64
    _, x174 = bits.Add64(x122, x156, uint64(0x0))
    var x175 uint64
    var x176 uint64
    x175, x176 = bits.Add64(x124, x158, uint64(p512Uint1(x174)))
    var x177 uint64
    var x178 uint64
    x177, x178 = bits.Add64(x126, x160, uint64(p512Uint1(x176)))
    var x179 uint64
    var x180 uint64
    x179, x180 = bits.Add64(x128, x162, uint64(p512Uint1(x178)))
    var x181 uint64
    var x182 uint64
    x181, x182 = bits.Add64(x130, x164, uint64(p512Uint1(x180)))
    var x183 uint64
    var x184 uint64
    x183, x184 = bits.Add64(x132, x166, uint64(p512Uint1(x182)))
    var x185 uint64
    var x186 uint64
    x185, x186 = bits.Add64(x134, x168, uint64(p512Uint1(x184)))
    var x187 uint64
    var x188 uint64
    x187, x188 = bits.Add64(x136, x170, uint64(p512Uint1(x186)))
    var x189 uint64
    var x190 uint64
    x189, x190 = bits.Add64(x138, x172, uint64(p512Uint1(x188)))
    x191 := (uint64(p512Uint1(x190)) + uint64(p512Uint1(x139)))
    var x192 uint64
    var x193 uint64
    x193, x192 = bits.Mul64(x2, arg2[7])
    var x194 uint64
    var x195 uint64
    x195, x194 = bits.Mul64(x2, arg2[6])
    var x196 uint64
    var x197 uint64
    x197, x196 = bits.Mul64(x2, arg2[5])
    var x198 uint64
    var x199 uint64
    x199, x198 = bits.Mul64(x2, arg2[4])
    var x200 uint64
    var x201 uint64
    x201, x200 = bits.Mul64(x2, arg2[3])
    var x202 uint64
    var x203 uint64
    x203, x202 = bits.Mul64(x2, arg2[2])
    var x204 uint64
    var x205 uint64
    x205, x204 = bits.Mul64(x2, arg2[1])
    var x206 uint64
    var x207 uint64
    x207, x206 = bits.Mul64(x2, arg2[0])
    var x208 uint64
    var x209 uint64
    x208, x209 = bits.Add64(x207, x204, uint64(0x0))
    var x210 uint64
    var x211 uint64
    x210, x211 = bits.Add64(x205, x202, uint64(p512Uint1(x209)))
    var x212 uint64
    var x213 uint64
    x212, x213 = bits.Add64(x203, x200, uint64(p512Uint1(x211)))
    var x214 uint64
    var x215 uint64
    x214, x215 = bits.Add64(x201, x198, uint64(p512Uint1(x213)))
    var x216 uint64
    var x217 uint64
    x216, x217 = bits.Add64(x199, x196, uint64(p512Uint1(x215)))
    var x218 uint64
    var x219 uint64
    x218, x219 = bits.Add64(x197, x194, uint64(p512Uint1(x217)))
    var x220 uint64
    var x221 uint64
    x220, x221 = bits.Add64(x195, x192, uint64(p512Uint1(x219)))
    x222 := (uint64(p512Uint1(x221)) + x193)
    var x223 uint64
    var x224 uint64
    x223, x224 = bits.Add64(x175, x206, uint64(0x0))
    var x225 uint64
    var x226 uint64
    x225, x226 = bits.Add64(x177, x208, uint64(p512Uint1(x224)))
    var x227 uint64
    var x228 uint64
    x227, x228 = bits.Add64(x179, x210, uint64(p512Uint1(x226)))
    var x229 uint64
    var x230 uint64
    x229, x230 = bits.Add64(x181, x212, uint64(p512Uint1(x228)))
    var x231 uint64
    var x232 uint64
    x231, x232 = bits.Add64(x183, x214, uint64(p512Uint1(x230)))
    var x233 uint64
    var x234 uint64
    x233, x234 = bits.Add64(x185, x216, uint64(p512Uint1(x232)))
    var x235 uint64
    var x236 uint64
    x235, x236 = bits.Add64(x187, x218, uint64(p512Uint1(x234)))
    var x237 uint64
    var x238 uint64
    x237, x238 = bits.Add64(x189, x220, uint64(p512Uint1(x236)))
    var x239 uint64
    var x240 uint64
    x239, x240 = bits.Add64(x191, x222, uint64(p512Uint1(x238)))
    var x241 uint64
    _, x241 = bits.Mul64(x223, 0x58a1f7e6ce0f4c09)
    var x243 uint64
    var x244 uint64
    x244, x243 = bits.Mul64(x241, 0xffffffffffffffff)
    var x245 uint64
    var x246 uint64
    x246, x245 = bits.Mul64(x241, 0xffffffffffffffff)
    var x247 uint64
    var x248 uint64
    x248, x247 = bits.Mul64(x241, 0xffffffffffffffff)
    var x249 uint64
    var x250 uint64
    x250, x249 = bits.Mul64(x241, 0xffffffffffffffff)
    var x251 uint64
    var x252 uint64
    x252, x251 = bits.Mul64(x241, 0xffffffffffffffff)
    var x253 uint64
    var x254 uint64
    x254, x253 = bits.Mul64(x241, 0xffffffffffffffff)
    var x255 uint64
    var x256 uint64
    x256, x255 = bits.Mul64(x241, 0xffffffffffffffff)
    var x257 uint64
    var x258 uint64
    x258, x257 = bits.Mul64(x241, 0xfffffffffffffdc7)
    var x259 uint64
    var x260 uint64
    x259, x260 = bits.Add64(x258, x255, uint64(0x0))
    var x261 uint64
    var x262 uint64
    x261, x262 = bits.Add64(x256, x253, uint64(p512Uint1(x260)))
    var x263 uint64
    var x264 uint64
    x263, x264 = bits.Add64(x254, x251, uint64(p512Uint1(x262)))
    var x265 uint64
    var x266 uint64
    x265, x266 = bits.Add64(x252, x249, uint64(p512Uint1(x264)))
    var x267 uint64
    var x268 uint64
    x267, x268 = bits.Add64(x250, x247, uint64(p512Uint1(x266)))
    var x269 uint64
    var x270 uint64
    x269, x270 = bits.Add64(x248, x245, uint64(p512Uint1(x268)))
    var x271 uint64
    var x272 uint64
    x271, x272 = bits.Add64(x246, x243, uint64(p512Uint1(x270)))
    x273 := (uint64(p512Uint1(x272)) + x244)
    var x275 uint64
    _, x275 = bits.Add64(x223, x257, uint64(0x0))
    var x276 uint64
    var x277 uint64
    x276, x277 = bits.Add64(x225, x259, uint64(p512Uint1(x275)))
    var x278 uint64
    var x279 uint64
    x278, x279 = bits.Add64(x227, x261, uint64(p512Uint1(x277)))
    var x280 uint64
    var x281 uint64
    x280, x281 = bits.Add64(x229, x263, uint64(p512Uint1(x279)))
    var x282 uint64
    var x283 uint64
    x282, x283 = bits.Add64(x231, x265, uint64(p512Uint1(x281)))
    var x284 uint64
    var x285 uint64
    x284, x285 = bits.Add64(x233, x267, uint64(p512Uint1(x283)))
    var x286 uint64
    var x287 uint64
    x286, x287 = bits.Add64(x235, x269, uint64(p512Uint1(x285)))
    var x288 uint64
    var x289 uint64
    x288, x289 = bits.Add64(x237, x271, uint64(p512Uint1(x287)))
    var x290 uint64
    var x291 uint64
    x290, x291 = bits.Add64(x239, x273, uint64(p512Uint1(x289)))
    x292 := (uint64(p512Uint1(x291)) + uint64(p512Uint1(x240)))
    var x293 uint64
    var x294 uint64
    x294, x293 = bits.Mul64(x3, arg2[7])
    var x295 uint64
    var x296 uint64
    x296, x295 = bits.Mul64(x3, arg2[6])
    var x297 uint64
    var x298 uint64
    x298, x297 = bits.Mul64(x3, arg2[5])
    var x299 uint64
    var x300 uint64
    x300, x299 = bits.Mul64(x3, arg2[4])
    var x301 uint64
    var x302 uint64
    x302, x301 = bits.Mul64(x3, arg2[3])
    var x303 uint64
    var x304 uint64
    x304, x303 = bits.Mul64(x3, arg2[2])
    var x305 uint64
    var x306 uint64
    x306, x305 = bits.Mul64(x3, arg2[1])
    var x307 uint64
    var x308 uint64
    x308, x307 = bits.Mul64(x3, arg2[0])
    var x309 uint64
    var x310 uint64
    x309, x310 = bits.Add64(x308, x305, uint64(0x0))
    var x311 uint64
    var x312 uint64
    x311, x312 = bits.Add64(x306, x303, uint64(p512Uint1(x310)))
    var x313 uint64
    var x314 uint64
    x313, x314 = bits.Add64(x304, x301, uint64(p512Uint1(x312)))
    var x315 uint64
    var x316 uint64
    x315, x316 = bits.Add64(x302, x299, uint64(p512Uint1(x314)))
    var x317 uint64
    var x318 uint64
    x317, x318 = bits.Add64(x300, x297, uint64(p512Uint1(x316)))
    var x319 uint64
    var x320 uint64
    x319, x320 = bits.Add64(x298, x295, uint64(p512Uint1(x318)))
    var x321 uint64
    var x322 uint64
    x321, x322 = bits.Add64(x296, x293, uint64(p512Uint1(x320)))
    x323 := (uint64(p512Uint1(x322)) + x294)
    var x324 uint64
    var x325 uint64
    x324, x325 = bits.Add64(x276, x307, uint64(0x0))
    var x326 uint64
    var x327 uint64
    x326, x327 = bits.Add64(x278, x309, uint64(p512Uint1(x325)))
    var x328 uint64
    var x329 uint64
    x328, x329 = bits.Add64(x280, x311, uint64(p512Uint1(x327)))
    var x330 uint64
    var x331 uint64
    x330, x331 = bits.Add64(x282, x313, uint64(p512Uint1(x329)))
    var x332 uint64
    var x333 uint64
    x332, x333 = bits.Add64(x284, x315, uint64(p512Uint1(x331)))
    var x334 uint64
    var x335 uint64
    x334, x335 = bits.Add64(x286, x317, uint64(p512Uint1(x333)))
    var x336 uint64
    var x337 uint64
    x336, x337 = bits.Add64(x288, x319, uint64(p512Uint1(x335)))
    var x338 uint64
    var x339 uint64
    x338, x339 = bits.Add64(x290, x321, uint64(p512Uint1(x337)))
    var x340 uint64
    var x341 uint64
    x340, x341 = bits.Add64(x292, x323, uint64(p512Uint1(x339)))
    var x342 uint64
    _, x342 = bits.Mul64(x324, 0x58a1f7e6ce0f4c09)
    var x344 uint64
    var x345 uint64
    x345, x344 = bits.Mul64(x342, 0xffffffffffffffff)
    var x346 uint64
    var x347 uint64
    x347, x346 = bits.Mul64(x342, 0xffffffffffffffff)
    var x348 uint64
    var x349 uint64
    x349, x348 = bits.Mul64(x342, 0xffffffffffffffff)
    var x350 uint64
    var x351 uint64
    x351, x350 = bits.Mul64(x342, 0xffffffffffffffff)
    var x352 uint64
    var x353 uint64
    x353, x352 = bits.Mul64(x342, 0xffffffffffffffff)
    var x354 uint64
    var x355 uint64
    x355, x354 = bits.Mul64(x342, 0xffffffffffffffff)
    var x356 uint64
    var x357 uint64
    x357, x356 = bits.Mul64(x342, 0xffffffffffffffff)
    var x358 uint64
    var x359 uint64
    x359, x358 = bits.Mul64(x342, 0xfffffffffffffdc7)
    var x360 uint64
    var x361 uint64
    x360, x361 = bits.Add64(x359, x356, uint64(0x0))
    var x362 uint64
    var x363 uint64
    x362, x363 = bits.Add64(x357, x354, uint64(p512Uint1(x361)))
    var x364 uint64
    var x365 uint64
    x364, x365 = bits.Add64(x355, x352, uint64(p512Uint1(x363)))
    var x366 uint64
    var x367 uint64
    x366, x367 = bits.Add64(x353, x350, uint64(p512Uint1(x365)))
    var x368 uint64
    var x369 uint64
    x368, x369 = bits.Add64(x351, x348, uint64(p512Uint1(x367)))
    var x370 uint64
    var x371 uint64
    x370, x371 = bits.Add64(x349, x346, uint64(p512Uint1(x369)))
    var x372 uint64
    var x373 uint64
    x372, x373 = bits.Add64(x347, x344, uint64(p512Uint1(x371)))
    x374 := (uint64(p512Uint1(x373)) + x345)
    var x376 uint64
    _, x376 = bits.Add64(x324, x358, uint64(0x0))
    var x377 uint64
    var x378 uint64
    x377, x378 = bits.Add64(x326, x360, uint64(p512Uint1(x376)))
    var x379 uint64
    var x380 uint64
    x379, x380 = bits.Add64(x328, x362, uint64(p512Uint1(x378)))
    var x381 uint64
    var x382 uint64
    x381, x382 = bits.Add64(x330, x364, uint64(p512Uint1(x380)))
    var x383 uint64
    var x384 uint64
    x383, x384 = bits.Add64(x332, x366, uint64(p512Uint1(x382)))
    var x385 uint64
    var x386 uint64
    x385, x386 = bits.Add64(x334, x368, uint64(p512Uint1(x384)))
    var x387 uint64
    var x388 uint64
    x387, x388 = bits.Add64(x336, x370, uint64(p512Uint1(x386)))
    var x389 uint64
    var x390 uint64
    x389, x390 = bits.Add64(x338, x372, uint64(p512Uint1(x388)))
    var x391 uint64
    var x392 uint64
    x391, x392 = bits.Add64(x340, x374, uint64(p512Uint1(x390)))
    x393 := (uint64(p512Uint1(x392)) + uint64(p512Uint1(x341)))
    var x394 uint64
    var x395 uint64
    x395, x394 = bits.Mul64(x4, arg2[7])
    var x396 uint64
    var x397 uint64
    x397, x396 = bits.Mul64(x4, arg2[6])
    var x398 uint64
    var x399 uint64
    x399, x398 = bits.Mul64(x4, arg2[5])
    var x400 uint64
    var x401 uint64
    x401, x400 = bits.Mul64(x4, arg2[4])
    var x402 uint64
    var x403 uint64
    x403, x402 = bits.Mul64(x4, arg2[3])
    var x404 uint64
    var x405 uint64
    x405, x404 = bits.Mul64(x4, arg2[2])
    var x406 uint64
    var x407 uint64
    x407, x406 = bits.Mul64(x4, arg2[1])
    var x408 uint64
    var x409 uint64
    x409, x408 = bits.Mul64(x4, arg2[0])
    var x410 uint64
    var x411 uint64
    x410, x411 = bits.Add64(x409, x406, uint64(0x0))
    var x412 uint64
    var x413 uint64
    x412, x413 = bits.Add64(x407, x404, uint64(p512Uint1(x411)))
    var x414 uint64
    var x415 uint64
    x414, x415 = bits.Add64(x405, x402, uint64(p512Uint1(x413)))
    var x416 uint64
    var x417 uint64
    x416, x417 = bits.Add64(x403, x400, uint64(p512Uint1(x415)))
    var x418 uint64
    var x419 uint64
    x418, x419 = bits.Add64(x401, x398, uint64(p512Uint1(x417)))
    var x420 uint64
    var x421 uint64
    x420, x421 = bits.Add64(x399, x396, uint64(p512Uint1(x419)))
    var x422 uint64
    var x423 uint64
    x422, x423 = bits.Add64(x397, x394, uint64(p512Uint1(x421)))
    x424 := (uint64(p512Uint1(x423)) + x395)
    var x425 uint64
    var x426 uint64
    x425, x426 = bits.Add64(x377, x408, uint64(0x0))
    var x427 uint64
    var x428 uint64
    x427, x428 = bits.Add64(x379, x410, uint64(p512Uint1(x426)))
    var x429 uint64
    var x430 uint64
    x429, x430 = bits.Add64(x381, x412, uint64(p512Uint1(x428)))
    var x431 uint64
    var x432 uint64
    x431, x432 = bits.Add64(x383, x414, uint64(p512Uint1(x430)))
    var x433 uint64
    var x434 uint64
    x433, x434 = bits.Add64(x385, x416, uint64(p512Uint1(x432)))
    var x435 uint64
    var x436 uint64
    x435, x436 = bits.Add64(x387, x418, uint64(p512Uint1(x434)))
    var x437 uint64
    var x438 uint64
    x437, x438 = bits.Add64(x389, x420, uint64(p512Uint1(x436)))
    var x439 uint64
    var x440 uint64
    x439, x440 = bits.Add64(x391, x422, uint64(p512Uint1(x438)))
    var x441 uint64
    var x442 uint64
    x441, x442 = bits.Add64(x393, x424, uint64(p512Uint1(x440)))
    var x443 uint64
    _, x443 = bits.Mul64(x425, 0x58a1f7e6ce0f4c09)
    var x445 uint64
    var x446 uint64
    x446, x445 = bits.Mul64(x443, 0xffffffffffffffff)
    var x447 uint64
    var x448 uint64
    x448, x447 = bits.Mul64(x443, 0xffffffffffffffff)
    var x449 uint64
    var x450 uint64
    x450, x449 = bits.Mul64(x443, 0xffffffffffffffff)
    var x451 uint64
    var x452 uint64
    x452, x451 = bits.Mul64(x443, 0xffffffffffffffff)
    var x453 uint64
    var x454 uint64
    x454, x453 = bits.Mul64(x443, 0xffffffffffffffff)
    var x455 uint64
    var x456 uint64
    x456, x455 = bits.Mul64(x443, 0xffffffffffffffff)
    var x457 uint64
    var x458 uint64
    x458, x457 = bits.Mul64(x443, 0xffffffffffffffff)
    var x459 uint64
    var x460 uint64
    x460, x459 = bits.Mul64(x443, 0xfffffffffffffdc7)
    var x461 uint64
    var x462 uint64
    x461, x462 = bits.Add64(x460, x457, uint64(0x0))
    var x463 uint64
    var x464 uint64
    x463, x464 = bits.Add64(x458, x455, uint64(p512Uint1(x462)))
    var x465 uint64
    var x466 uint64
    x465, x466 = bits.Add64(x456, x453, uint64(p512Uint1(x464)))
    var x467 uint64
    var x468 uint64
    x467, x468 = bits.Add64(x454, x451, uint64(p512Uint1(x466)))
    var x469 uint64
    var x470 uint64
    x469, x470 = bits.Add64(x452, x449, uint64(p512Uint1(x468)))
    var x471 uint64
    var x472 uint64
    x471, x472 = bits.Add64(x450, x447, uint64(p512Uint1(x470)))
    var x473 uint64
    var x474 uint64
    x473, x474 = bits.Add64(x448, x445, uint64(p512Uint1(x472)))
    x475 := (uint64(p512Uint1(x474)) + x446)
    var x477 uint64
    _, x477 = bits.Add64(x425, x459, uint64(0x0))
    var x478 uint64
    var x479 uint64
    x478, x479 = bits.Add64(x427, x461, uint64(p512Uint1(x477)))
    var x480 uint64
    var x481 uint64
    x480, x481 = bits.Add64(x429, x463, uint64(p512Uint1(x479)))
    var x482 uint64
    var x483 uint64
    x482, x483 = bits.Add64(x431, x465, uint64(p512Uint1(x481)))
    var x484 uint64
    var x485 uint64
    x484, x485 = bits.Add64(x433, x467, uint64(p512Uint1(x483)))
    var x486 uint64
    var x487 uint64
    x486, x487 = bits.Add64(x435, x469, uint64(p512Uint1(x485)))
    var x488 uint64
    var x489 uint64
    x488, x489 = bits.Add64(x437, x471, uint64(p512Uint1(x487)))
    var x490 uint64
    var x491 uint64
    x490, x491 = bits.Add64(x439, x473, uint64(p512Uint1(x489)))
    var x492 uint64
    var x493 uint64
    x492, x493 = bits.Add64(x441, x475, uint64(p512Uint1(x491)))
    x494 := (uint64(p512Uint1(x493)) + uint64(p512Uint1(x442)))
    var x495 uint64
    var x496 uint64
    x496, x495 = bits.Mul64(x5, arg2[7])
    var x497 uint64
    var x498 uint64
    x498, x497 = bits.Mul64(x5, arg2[6])
    var x499 uint64
    var x500 uint64
    x500, x499 = bits.Mul64(x5, arg2[5])
    var x501 uint64
    var x502 uint64
    x502, x501 = bits.Mul64(x5, arg2[4])
    var x503 uint64
    var x504 uint64
    x504, x503 = bits.Mul64(x5, arg2[3])
    var x505 uint64
    var x506 uint64
    x506, x505 = bits.Mul64(x5, arg2[2])
    var x507 uint64
    var x508 uint64
    x508, x507 = bits.Mul64(x5, arg2[1])
    var x509 uint64
    var x510 uint64
    x510, x509 = bits.Mul64(x5, arg2[0])
    var x511 uint64
    var x512 uint64
    x511, x512 = bits.Add64(x510, x507, uint64(0x0))
    var x513 uint64
    var x514 uint64
    x513, x514 = bits.Add64(x508, x505, uint64(p512Uint1(x512)))
    var x515 uint64
    var x516 uint64
    x515, x516 = bits.Add64(x506, x503, uint64(p512Uint1(x514)))
    var x517 uint64
    var x518 uint64
    x517, x518 = bits.Add64(x504, x501, uint64(p512Uint1(x516)))
    var x519 uint64
    var x520 uint64
    x519, x520 = bits.Add64(x502, x499, uint64(p512Uint1(x518)))
    var x521 uint64
    var x522 uint64
    x521, x522 = bits.Add64(x500, x497, uint64(p512Uint1(x520)))
    var x523 uint64
    var x524 uint64
    x523, x524 = bits.Add64(x498, x495, uint64(p512Uint1(x522)))
    x525 := (uint64(p512Uint1(x524)) + x496)
    var x526 uint64
    var x527 uint64
    x526, x527 = bits.Add64(x478, x509, uint64(0x0))
    var x528 uint64
    var x529 uint64
    x528, x529 = bits.Add64(x480, x511, uint64(p512Uint1(x527)))
    var x530 uint64
    var x531 uint64
    x530, x531 = bits.Add64(x482, x513, uint64(p512Uint1(x529)))
    var x532 uint64
    var x533 uint64
    x532, x533 = bits.Add64(x484, x515, uint64(p512Uint1(x531)))
    var x534 uint64
    var x535 uint64
    x534, x535 = bits.Add64(x486, x517, uint64(p512Uint1(x533)))
    var x536 uint64
    var x537 uint64
    x536, x537 = bits.Add64(x488, x519, uint64(p512Uint1(x535)))
    var x538 uint64
    var x539 uint64
    x538, x539 = bits.Add64(x490, x521, uint64(p512Uint1(x537)))
    var x540 uint64
    var x541 uint64
    x540, x541 = bits.Add64(x492, x523, uint64(p512Uint1(x539)))
    var x542 uint64
    var x543 uint64
    x542, x543 = bits.Add64(x494, x525, uint64(p512Uint1(x541)))
    var x544 uint64
    _, x544 = bits.Mul64(x526, 0x58a1f7e6ce0f4c09)
    var x546 uint64
    var x547 uint64
    x547, x546 = bits.Mul64(x544, 0xffffffffffffffff)
    var x548 uint64
    var x549 uint64
    x549, x548 = bits.Mul64(x544, 0xffffffffffffffff)
    var x550 uint64
    var x551 uint64
    x551, x550 = bits.Mul64(x544, 0xffffffffffffffff)
    var x552 uint64
    var x553 uint64
    x553, x552 = bits.Mul64(x544, 0xffffffffffffffff)
    var x554 uint64
    var x555 uint64
    x555, x554 = bits.Mul64(x544, 0xffffffffffffffff)
    var x556 uint64
    var x557 uint64
    x557, x556 = bits.Mul64(x544, 0xffffffffffffffff)
    var x558 uint64
    var x559 uint64
    x559, x558 = bits.Mul64(x544, 0xffffffffffffffff)
    var x560 uint64
    var x561 uint64
    x561, x560 = bits.Mul64(x544, 0xfffffffffffffdc7)
    var x562 uint64
    var x563 uint64
    x562, x563 = bits.Add64(x561, x558, uint64(0x0))
    var x564 uint64
    var x565 uint64
    x564, x565 = bits.Add64(x559, x556, uint64(p512Uint1(x563)))
    var x566 uint64
    var x567 uint64
    x566, x567 = bits.Add64(x557, x554, uint64(p512Uint1(x565)))
    var x568 uint64
    var x569 uint64
    x568, x569 = bits.Add64(x555, x552, uint64(p512Uint1(x567)))
    var x570 uint64
    var x571 uint64
    x570, x571 = bits.Add64(x553, x550, uint64(p512Uint1(x569)))
    var x572 uint64
    var x573 uint64
    x572, x573 = bits.Add64(x551, x548, uint64(p512Uint1(x571)))
    var x574 uint64
    var x575 uint64
    x574, x575 = bits.Add64(x549, x546, uint64(p512Uint1(x573)))
    x576 := (uint64(p512Uint1(x575)) + x547)
    var x578 uint64
    _, x578 = bits.Add64(x526, x560, uint64(0x0))
    var x579 uint64
    var x580 uint64
    x579, x580 = bits.Add64(x528, x562, uint64(p512Uint1(x578)))
    var x581 uint64
    var x582 uint64
    x581, x582 = bits.Add64(x530, x564, uint64(p512Uint1(x580)))
    var x583 uint64
    var x584 uint64
    x583, x584 = bits.Add64(x532, x566, uint64(p512Uint1(x582)))
    var x585 uint64
    var x586 uint64
    x585, x586 = bits.Add64(x534, x568, uint64(p512Uint1(x584)))
    var x587 uint64
    var x588 uint64
    x587, x588 = bits.Add64(x536, x570, uint64(p512Uint1(x586)))
    var x589 uint64
    var x590 uint64
    x589, x590 = bits.Add64(x538, x572, uint64(p512Uint1(x588)))
    var x591 uint64
    var x592 uint64
    x591, x592 = bits.Add64(x540, x574, uint64(p512Uint1(x590)))
    var x593 uint64
    var x594 uint64
    x593, x594 = bits.Add64(x542, x576, uint64(p512Uint1(x592)))
    x595 := (uint64(p512Uint1(x594)) + uint64(p512Uint1(x543)))
    var x596 uint64
    var x597 uint64
    x597, x596 = bits.Mul64(x6, arg2[7])
    var x598 uint64
    var x599 uint64
    x599, x598 = bits.Mul64(x6, arg2[6])
    var x600 uint64
    var x601 uint64
    x601, x600 = bits.Mul64(x6, arg2[5])
    var x602 uint64
    var x603 uint64
    x603, x602 = bits.Mul64(x6, arg2[4])
    var x604 uint64
    var x605 uint64
    x605, x604 = bits.Mul64(x6, arg2[3])
    var x606 uint64
    var x607 uint64
    x607, x606 = bits.Mul64(x6, arg2[2])
    var x608 uint64
    var x609 uint64
    x609, x608 = bits.Mul64(x6, arg2[1])
    var x610 uint64
    var x611 uint64
    x611, x610 = bits.Mul64(x6, arg2[0])
    var x612 uint64
    var x613 uint64
    x612, x613 = bits.Add64(x611, x608, uint64(0x0))
    var x614 uint64
    var x615 uint64
    x614, x615 = bits.Add64(x609, x606, uint64(p512Uint1(x613)))
    var x616 uint64
    var x617 uint64
    x616, x617 = bits.Add64(x607, x604, uint64(p512Uint1(x615)))
    var x618 uint64
    var x619 uint64
    x618, x619 = bits.Add64(x605, x602, uint64(p512Uint1(x617)))
    var x620 uint64
    var x621 uint64
    x620, x621 = bits.Add64(x603, x600, uint64(p512Uint1(x619)))
    var x622 uint64
    var x623 uint64
    x622, x623 = bits.Add64(x601, x598, uint64(p512Uint1(x621)))
    var x624 uint64
    var x625 uint64
    x624, x625 = bits.Add64(x599, x596, uint64(p512Uint1(x623)))
    x626 := (uint64(p512Uint1(x625)) + x597)
    var x627 uint64
    var x628 uint64
    x627, x628 = bits.Add64(x579, x610, uint64(0x0))
    var x629 uint64
    var x630 uint64
    x629, x630 = bits.Add64(x581, x612, uint64(p512Uint1(x628)))
    var x631 uint64
    var x632 uint64
    x631, x632 = bits.Add64(x583, x614, uint64(p512Uint1(x630)))
    var x633 uint64
    var x634 uint64
    x633, x634 = bits.Add64(x585, x616, uint64(p512Uint1(x632)))
    var x635 uint64
    var x636 uint64
    x635, x636 = bits.Add64(x587, x618, uint64(p512Uint1(x634)))
    var x637 uint64
    var x638 uint64
    x637, x638 = bits.Add64(x589, x620, uint64(p512Uint1(x636)))
    var x639 uint64
    var x640 uint64
    x639, x640 = bits.Add64(x591, x622, uint64(p512Uint1(x638)))
    var x641 uint64
    var x642 uint64
    x641, x642 = bits.Add64(x593, x624, uint64(p512Uint1(x640)))
    var x643 uint64
    var x644 uint64
    x643, x644 = bits.Add64(x595, x626, uint64(p512Uint1(x642)))
    var x645 uint64
    _, x645 = bits.Mul64(x627, 0x58a1f7e6ce0f4c09)
    var x647 uint64
    var x648 uint64
    x648, x647 = bits.Mul64(x645, 0xffffffffffffffff)
    var x649 uint64
    var x650 uint64
    x650, x649 = bits.Mul64(x645, 0xffffffffffffffff)
    var x651 uint64
    var x652 uint64
    x652, x651 = bits.Mul64(x645, 0xffffffffffffffff)
    var x653 uint64
    var x654 uint64
    x654, x653 = bits.Mul64(x645, 0xffffffffffffffff)
    var x655 uint64
    var x656 uint64
    x656, x655 = bits.Mul64(x645, 0xffffffffffffffff)
    var x657 uint64
    var x658 uint64
    x658, x657 = bits.Mul64(x645, 0xffffffffffffffff)
    var x659 uint64
    var x660 uint64
    x660, x659 = bits.Mul64(x645, 0xffffffffffffffff)
    var x661 uint64
    var x662 uint64
    x662, x661 = bits.Mul64(x645, 0xfffffffffffffdc7)
    var x663 uint64
    var x664 uint64
    x663, x664 = bits.Add64(x662, x659, uint64(0x0))
    var x665 uint64
    var x666 uint64
    x665, x666 = bits.Add64(x660, x657, uint64(p512Uint1(x664)))
    var x667 uint64
    var x668 uint64
    x667, x668 = bits.Add64(x658, x655, uint64(p512Uint1(x666)))
    var x669 uint64
    var x670 uint64
    x669, x670 = bits.Add64(x656, x653, uint64(p512Uint1(x668)))
    var x671 uint64
    var x672 uint64
    x671, x672 = bits.Add64(x654, x651, uint64(p512Uint1(x670)))
    var x673 uint64
    var x674 uint64
    x673, x674 = bits.Add64(x652, x649, uint64(p512Uint1(x672)))
    var x675 uint64
    var x676 uint64
    x675, x676 = bits.Add64(x650, x647, uint64(p512Uint1(x674)))
    x677 := (uint64(p512Uint1(x676)) + x648)
    var x679 uint64
    _, x679 = bits.Add64(x627, x661, uint64(0x0))
    var x680 uint64
    var x681 uint64
    x680, x681 = bits.Add64(x629, x663, uint64(p512Uint1(x679)))
    var x682 uint64
    var x683 uint64
    x682, x683 = bits.Add64(x631, x665, uint64(p512Uint1(x681)))
    var x684 uint64
    var x685 uint64
    x684, x685 = bits.Add64(x633, x667, uint64(p512Uint1(x683)))
    var x686 uint64
    var x687 uint64
    x686, x687 = bits.Add64(x635, x669, uint64(p512Uint1(x685)))
    var x688 uint64
    var x689 uint64
    x688, x689 = bits.Add64(x637, x671, uint64(p512Uint1(x687)))
    var x690 uint64
    var x691 uint64
    x690, x691 = bits.Add64(x639, x673, uint64(p512Uint1(x689)))
    var x692 uint64
    var x693 uint64
    x692, x693 = bits.Add64(x641, x675, uint64(p512Uint1(x691)))
    var x694 uint64
    var x695 uint64
    x694, x695 = bits.Add64(x643, x677, uint64(p512Uint1(x693)))
    x696 := (uint64(p512Uint1(x695)) + uint64(p512Uint1(x644)))
    var x697 uint64
    var x698 uint64
    x698, x697 = bits.Mul64(x7, arg2[7])
    var x699 uint64
    var x700 uint64
    x700, x699 = bits.Mul64(x7, arg2[6])
    var x701 uint64
    var x702 uint64
    x702, x701 = bits.Mul64(x7, arg2[5])
    var x703 uint64
    var x704 uint64
    x704, x703 = bits.Mul64(x7, arg2[4])
    var x705 uint64
    var x706 uint64
    x706, x705 = bits.Mul64(x7, arg2[3])
    var x707 uint64
    var x708 uint64
    x708, x707 = bits.Mul64(x7, arg2[2])
    var x709 uint64
    var x710 uint64
    x710, x709 = bits.Mul64(x7, arg2[1])
    var x711 uint64
    var x712 uint64
    x712, x711 = bits.Mul64(x7, arg2[0])
    var x713 uint64
    var x714 uint64
    x713, x714 = bits.Add64(x712, x709, uint64(0x0))
    var x715 uint64
    var x716 uint64
    x715, x716 = bits.Add64(x710, x707, uint64(p512Uint1(x714)))
    var x717 uint64
    var x718 uint64
    x717, x718 = bits.Add64(x708, x705, uint64(p512Uint1(x716)))
    var x719 uint64
    var x720 uint64
    x719, x720 = bits.Add64(x706, x703, uint64(p512Uint1(x718)))
    var x721 uint64
    var x722 uint64
    x721, x722 = bits.Add64(x704, x701, uint64(p512Uint1(x720)))
    var x723 uint64
    var x724 uint64
    x723, x724 = bits.Add64(x702, x699, uint64(p512Uint1(x722)))
    var x725 uint64
    var x726 uint64
    x725, x726 = bits.Add64(x700, x697, uint64(p512Uint1(x724)))
    x727 := (uint64(p512Uint1(x726)) + x698)
    var x728 uint64
    var x729 uint64
    x728, x729 = bits.Add64(x680, x711, uint64(0x0))
    var x730 uint64
    var x731 uint64
    x730, x731 = bits.Add64(x682, x713, uint64(p512Uint1(x729)))
    var x732 uint64
    var x733 uint64
    x732, x733 = bits.Add64(x684, x715, uint64(p512Uint1(x731)))
    var x734 uint64
    var x735 uint64
    x734, x735 = bits.Add64(x686, x717, uint64(p512Uint1(x733)))
    var x736 uint64
    var x737 uint64
    x736, x737 = bits.Add64(x688, x719, uint64(p512Uint1(x735)))
    var x738 uint64
    var x739 uint64
    x738, x739 = bits.Add64(x690, x721, uint64(p512Uint1(x737)))
    var x740 uint64
    var x741 uint64
    x740, x741 = bits.Add64(x692, x723, uint64(p512Uint1(x739)))
    var x742 uint64
    var x743 uint64
    x742, x743 = bits.Add64(x694, x725, uint64(p512Uint1(x741)))
    var x744 uint64
    var x745 uint64
    x744, x745 = bits.Add64(x696, x727, uint64(p512Uint1(x743)))
    var x746 uint64
    _, x746 = bits.Mul64(x728, 0x58a1f7e6ce0f4c09)
    var x748 uint64
    var x749 uint64
    x749, x748 = bits.Mul64(x746, 0xffffffffffffffff)
    var x750 uint64
    var x751 uint64
    x751, x750 = bits.Mul64(x746, 0xffffffffffffffff)
    var x752 uint64
    var x753 uint64
    x753, x752 = bits.Mul64(x746, 0xffffffffffffffff)
    var x754 uint64
    var x755 uint64
    x755, x754 = bits.Mul64(x746, 0xffffffffffffffff)
    var x756 uint64
    var x757 uint64
    x757, x756 = bits.Mul64(x746, 0xffffffffffffffff)
    var x758 uint64
    var x759 uint64
    x759, x758 = bits.Mul64(x746, 0xffffffffffffffff)
    var x760 uint64
    var x761 uint64
    x761, x760 = bits.Mul64(x746, 0xffffffffffffffff)
    var x762 uint64
    var x763 uint64
    x763, x762 = bits.Mul64(x746, 0xfffffffffffffdc7)
    var x764 uint64
    var x765 uint64
    x764, x765 = bits.Add64(x763, x760, uint64(0x0))
    var x766 uint64
    var x767 uint64
    x766, x767 = bits.Add64(x761, x758, uint64(p512Uint1(x765)))
    var x768 uint64
    var x769 uint64
    x768, x769 = bits.Add64(x759, x756, uint64(p512Uint1(x767)))
    var x770 uint64
    var x771 uint64
    x770, x771 = bits.Add64(x757, x754, uint64(p512Uint1(x769)))
    var x772 uint64
    var x773 uint64
    x772, x773 = bits.Add64(x755, x752, uint64(p512Uint1(x771)))
    var x774 uint64
    var x775 uint64
    x774, x775 = bits.Add64(x753, x750, uint64(p512Uint1(x773)))
    var x776 uint64
    var x777 uint64
    x776, x777 = bits.Add64(x751, x748, uint64(p512Uint1(x775)))
    x778 := (uint64(p512Uint1(x777)) + x749)
    var x780 uint64
    _, x780 = bits.Add64(x728, x762, uint64(0x0))
    var x781 uint64
    var x782 uint64
    x781, x782 = bits.Add64(x730, x764, uint64(p512Uint1(x780)))
    var x783 uint64
    var x784 uint64
    x783, x784 = bits.Add64(x732, x766, uint64(p512Uint1(x782)))
    var x785 uint64
    var x786 uint64
    x785, x786 = bits.Add64(x734, x768, uint64(p512Uint1(x784)))
    var x787 uint64
    var x788 uint64
    x787, x788 = bits.Add64(x736, x770, uint64(p512Uint1(x786)))
    var x789 uint64
    var x790 uint64
    x789, x790 = bits.Add64(x738, x772, uint64(p512Uint1(x788)))
    var x791 uint64
    var x792 uint64
    x791, x792 = bits.Add64(x740, x774, uint64(p512Uint1(x790)))
    var x793 uint64
    var x794 uint64
    x793, x794 = bits.Add64(x742, x776, uint64(p512Uint1(x792)))
    var x795 uint64
    var x796 uint64
    x795, x796 = bits.Add64(x744, x778, uint64(p512Uint1(x794)))
    x797 := (uint64(p512Uint1(x796)) + uint64(p512Uint1(x745)))
    var x798 uint64
    var x799 uint64
    x798, x799 = bits.Sub64(x781, 0xfffffffffffffdc7, uint64(0x0))
    var x800 uint64
    var x801 uint64
    x800, x801 = bits.Sub64(x783, 0xffffffffffffffff, uint64(p512Uint1(x799)))
    var x802 uint64
    var x803 uint64
    x802, x803 = bits.Sub64(x785, 0xffffffffffffffff, uint64(p512Uint1(x801)))
    var x804 uint64
    var x805 uint64
    x804, x805 = bits.Sub64(x787, 0xffffffffffffffff, uint64(p512Uint1(x803)))
    var x806 uint64
    var x807 uint64
    x806, x807 = bits.Sub64(x789, 0xffffffffffffffff, uint64(p512Uint1(x805)))
    var x808 uint64
    var x809 uint64
    x808, x809 = bits.Sub64(x791, 0xffffffffffffffff, uint64(p512Uint1(x807)))
    var x810 uint64
    var x811 uint64
    x810, x811 = bits.Sub64(x793, 0xffffffffffffffff, uint64(p512Uint1(x809)))
    var x812 uint64
    var x813 uint64
    x812, x813 = bits.Sub64(x795, 0xffffffffffffffff, uint64(p512Uint1(x811)))
    var x815 uint64
    _, x815 = bits.Sub64(x797, uint64(0x0), uint64(p512Uint1(x813)))
    var x816 uint64
    p512CmovznzU64(&x816, p512Uint1(x815), x798, x781)
    var x817 uint64
    p512CmovznzU64(&x817, p512Uint1(x815), x800, x783)
    var x818 uint64
    p512CmovznzU64(&x818, p512Uint1(x815), x802, x785)
    var x819 uint64
    p512CmovznzU64(&x819, p512Uint1(x815), x804, x787)
    var x820 uint64
    p512CmovznzU64(&x820, p512Uint1(x815), x806, x789)
    var x821 uint64
    p512CmovznzU64(&x821, p512Uint1(x815), x808, x791)
    var x822 uint64
    p512CmovznzU64(&x822, p512Uint1(x815), x810, x793)
    var x823 uint64
    p512CmovznzU64(&x823, p512Uint1(x815), x812, x795)
    out1[0] = x816
    out1[1] = x817
    out1[2] = x818
    out1[3] = x819
    out1[4] = x820
    out1[5] = x821
    out1[6] = x822
    out1[7] = x823
}

// p512Square squares a field element in the Montgomery domain.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//
// Postconditions:
//
//	eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
//	0 ≤ eval out1 < m
func p512Square(out1 *p512MontgomeryDomainFieldElement, arg1 *p512MontgomeryDomainFieldElement) {
    x1 := arg1[1]
    x2 := arg1[2]
    x3 := arg1[3]
    x4 := arg1[4]
    x5 := arg1[5]
    x6 := arg1[6]
    x7 := arg1[7]
    x8 := arg1[0]
    var x9 uint64
    var x10 uint64
    x10, x9 = bits.Mul64(x8, arg1[7])
    var x11 uint64
    var x12 uint64
    x12, x11 = bits.Mul64(x8, arg1[6])
    var x13 uint64
    var x14 uint64
    x14, x13 = bits.Mul64(x8, arg1[5])
    var x15 uint64
    var x16 uint64
    x16, x15 = bits.Mul64(x8, arg1[4])
    var x17 uint64
    var x18 uint64
    x18, x17 = bits.Mul64(x8, arg1[3])
    var x19 uint64
    var x20 uint64
    x20, x19 = bits.Mul64(x8, arg1[2])
    var x21 uint64
    var x22 uint64
    x22, x21 = bits.Mul64(x8, arg1[1])
    var x23 uint64
    var x24 uint64
    x24, x23 = bits.Mul64(x8, arg1[0])
    var x25 uint64
    var x26 uint64
    x25, x26 = bits.Add64(x24, x21, uint64(0x0))
    var x27 uint64
    var x28 uint64
    x27, x28 = bits.Add64(x22, x19, uint64(p512Uint1(x26)))
    var x29 uint64
    var x30 uint64
    x29, x30 = bits.Add64(x20, x17, uint64(p512Uint1(x28)))
    var x31 uint64
    var x32 uint64
    x31, x32 = bits.Add64(x18, x15, uint64(p512Uint1(x30)))
    var x33 uint64
    var x34 uint64
    x33, x34 = bits.Add64(x16, x13, uint64(p512Uint1(x32)))
    var x35 uint64
    var x36 uint64
    x35, x36 = bits.Add64(x14, x11, uint64(p512Uint1(x34)))
    var x37 uint64
    var x38 uint64
    x37, x38 = bits.Add64(x12, x9, uint64(p512Uint1(x36)))
    x39 := (uint64(p512Uint1(x38)) + x10)
    var x40 uint64
    _, x40 = bits.Mul64(x23, 0x58a1f7e6ce0f4c09)
    var x42 uint64
    var x43 uint64
    x43, x42 = bits.Mul64(x40, 0xffffffffffffffff)
    var x44 uint64
    var x45 uint64
    x45, x44 = bits.Mul64(x40, 0xffffffffffffffff)
    var x46 uint64
    var x47 uint64
    x47, x46 = bits.Mul64(x40, 0xffffffffffffffff)
    var x48 uint64
    var x49 uint64
    x49, x48 = bits.Mul64(x40, 0xffffffffffffffff)
    var x50 uint64
    var x51 uint64
    x51, x50 = bits.Mul64(x40, 0xffffffffffffffff)
    var x52 uint64
    var x53 uint64
    x53, x52 = bits.Mul64(x40, 0xffffffffffffffff)
    var x54 uint64
    var x55 uint64
    x55, x54 = bits.Mul64(x40, 0xffffffffffffffff)
    var x56 uint64
    var x57 uint64
    x57, x56 = bits.Mul64(x40, 0xfffffffffffffdc7)
    var x58 uint64
    var x59 uint64
    x58, x59 = bits.Add64(x57, x54, uint64(0x0))
    var x60 uint64
    var x61 uint64
    x60, x61 = bits.Add64(x55, x52, uint64(p512Uint1(x59)))
    var x62 uint64
    var x63 uint64
    x62, x63 = bits.Add64(x53, x50, uint64(p512Uint1(x61)))
    var x64 uint64
    var x65 uint64
    x64, x65 = bits.Add64(x51, x48, uint64(p512Uint1(x63)))
    var x66 uint64
    var x67 uint64
    x66, x67 = bits.Add64(x49, x46, uint64(p512Uint1(x65)))
    var x68 uint64
    var x69 uint64
    x68, x69 = bits.Add64(x47, x44, uint64(p512Uint1(x67)))
    var x70 uint64
    var x71 uint64
    x70, x71 = bits.Add64(x45, x42, uint64(p512Uint1(x69)))
    x72 := (uint64(p512Uint1(x71)) + x43)
    var x74 uint64
    _, x74 = bits.Add64(x23, x56, uint64(0x0))
    var x75 uint64
    var x76 uint64
    x75, x76 = bits.Add64(x25, x58, uint64(p512Uint1(x74)))
    var x77 uint64
    var x78 uint64
    x77, x78 = bits.Add64(x27, x60, uint64(p512Uint1(x76)))
    var x79 uint64
    var x80 uint64
    x79, x80 = bits.Add64(x29, x62, uint64(p512Uint1(x78)))
    var x81 uint64
    var x82 uint64
    x81, x82 = bits.Add64(x31, x64, uint64(p512Uint1(x80)))
    var x83 uint64
    var x84 uint64
    x83, x84 = bits.Add64(x33, x66, uint64(p512Uint1(x82)))
    var x85 uint64
    var x86 uint64
    x85, x86 = bits.Add64(x35, x68, uint64(p512Uint1(x84)))
    var x87 uint64
    var x88 uint64
    x87, x88 = bits.Add64(x37, x70, uint64(p512Uint1(x86)))
    var x89 uint64
    var x90 uint64
    x89, x90 = bits.Add64(x39, x72, uint64(p512Uint1(x88)))
    var x91 uint64
    var x92 uint64
    x92, x91 = bits.Mul64(x1, arg1[7])
    var x93 uint64
    var x94 uint64
    x94, x93 = bits.Mul64(x1, arg1[6])
    var x95 uint64
    var x96 uint64
    x96, x95 = bits.Mul64(x1, arg1[5])
    var x97 uint64
    var x98 uint64
    x98, x97 = bits.Mul64(x1, arg1[4])
    var x99 uint64
    var x100 uint64
    x100, x99 = bits.Mul64(x1, arg1[3])
    var x101 uint64
    var x102 uint64
    x102, x101 = bits.Mul64(x1, arg1[2])
    var x103 uint64
    var x104 uint64
    x104, x103 = bits.Mul64(x1, arg1[1])
    var x105 uint64
    var x106 uint64
    x106, x105 = bits.Mul64(x1, arg1[0])
    var x107 uint64
    var x108 uint64
    x107, x108 = bits.Add64(x106, x103, uint64(0x0))
    var x109 uint64
    var x110 uint64
    x109, x110 = bits.Add64(x104, x101, uint64(p512Uint1(x108)))
    var x111 uint64
    var x112 uint64
    x111, x112 = bits.Add64(x102, x99, uint64(p512Uint1(x110)))
    var x113 uint64
    var x114 uint64
    x113, x114 = bits.Add64(x100, x97, uint64(p512Uint1(x112)))
    var x115 uint64
    var x116 uint64
    x115, x116 = bits.Add64(x98, x95, uint64(p512Uint1(x114)))
    var x117 uint64
    var x118 uint64
    x117, x118 = bits.Add64(x96, x93, uint64(p512Uint1(x116)))
    var x119 uint64
    var x120 uint64
    x119, x120 = bits.Add64(x94, x91, uint64(p512Uint1(x118)))
    x121 := (uint64(p512Uint1(x120)) + x92)
    var x122 uint64
    var x123 uint64
    x122, x123 = bits.Add64(x75, x105, uint64(0x0))
    var x124 uint64
    var x125 uint64
    x124, x125 = bits.Add64(x77, x107, uint64(p512Uint1(x123)))
    var x126 uint64
    var x127 uint64
    x126, x127 = bits.Add64(x79, x109, uint64(p512Uint1(x125)))
    var x128 uint64
    var x129 uint64
    x128, x129 = bits.Add64(x81, x111, uint64(p512Uint1(x127)))
    var x130 uint64
    var x131 uint64
    x130, x131 = bits.Add64(x83, x113, uint64(p512Uint1(x129)))
    var x132 uint64
    var x133 uint64
    x132, x133 = bits.Add64(x85, x115, uint64(p512Uint1(x131)))
    var x134 uint64
    var x135 uint64
    x134, x135 = bits.Add64(x87, x117, uint64(p512Uint1(x133)))
    var x136 uint64
    var x137 uint64
    x136, x137 = bits.Add64(x89, x119, uint64(p512Uint1(x135)))
    var x138 uint64
    var x139 uint64
    x138, x139 = bits.Add64(uint64(p512Uint1(x90)), x121, uint64(p512Uint1(x137)))
    var x140 uint64
    _, x140 = bits.Mul64(x122, 0x58a1f7e6ce0f4c09)
    var x142 uint64
    var x143 uint64
    x143, x142 = bits.Mul64(x140, 0xffffffffffffffff)
    var x144 uint64
    var x145 uint64
    x145, x144 = bits.Mul64(x140, 0xffffffffffffffff)
    var x146 uint64
    var x147 uint64
    x147, x146 = bits.Mul64(x140, 0xffffffffffffffff)
    var x148 uint64
    var x149 uint64
    x149, x148 = bits.Mul64(x140, 0xffffffffffffffff)
    var x150 uint64
    var x151 uint64
    x151, x150 = bits.Mul64(x140, 0xffffffffffffffff)
    var x152 uint64
    var x153 uint64
    x153, x152 = bits.Mul64(x140, 0xffffffffffffffff)
    var x154 uint64
    var x155 uint64
    x155, x154 = bits.Mul64(x140, 0xffffffffffffffff)
    var x156 uint64
    var x157 uint64
    x157, x156 = bits.Mul64(x140, 0xfffffffffffffdc7)
    var x158 uint64
    var x159 uint64
    x158, x159 = bits.Add64(x157, x154, uint64(0x0))
    var x160 uint64
    var x161 uint64
    x160, x161 = bits.Add64(x155, x152, uint64(p512Uint1(x159)))
    var x162 uint64
    var x163 uint64
    x162, x163 = bits.Add64(x153, x150, uint64(p512Uint1(x161)))
    var x164 uint64
    var x165 uint64
    x164, x165 = bits.Add64(x151, x148, uint64(p512Uint1(x163)))
    var x166 uint64
    var x167 uint64
    x166, x167 = bits.Add64(x149, x146, uint64(p512Uint1(x165)))
    var x168 uint64
    var x169 uint64
    x168, x169 = bits.Add64(x147, x144, uint64(p512Uint1(x167)))
    var x170 uint64
    var x171 uint64
    x170, x171 = bits.Add64(x145, x142, uint64(p512Uint1(x169)))
    x172 := (uint64(p512Uint1(x171)) + x143)
    var x174 uint64
    _, x174 = bits.Add64(x122, x156, uint64(0x0))
    var x175 uint64
    var x176 uint64
    x175, x176 = bits.Add64(x124, x158, uint64(p512Uint1(x174)))
    var x177 uint64
    var x178 uint64
    x177, x178 = bits.Add64(x126, x160, uint64(p512Uint1(x176)))
    var x179 uint64
    var x180 uint64
    x179, x180 = bits.Add64(x128, x162, uint64(p512Uint1(x178)))
    var x181 uint64
    var x182 uint64
    x181, x182 = bits.Add64(x130, x164, uint64(p512Uint1(x180)))
    var x183 uint64
    var x184 uint64
    x183, x184 = bits.Add64(x132, x166, uint64(p512Uint1(x182)))
    var x185 uint64
    var x186 uint64
    x185, x186 = bits.Add64(x134, x168, uint64(p512Uint1(x184)))
    var x187 uint64
    var x188 uint64
    x187, x188 = bits.Add64(x136, x170, uint64(p512Uint1(x186)))
    var x189 uint64
    var x190 uint64
    x189, x190 = bits.Add64(x138, x172, uint64(p512Uint1(x188)))
    x191 := (uint64(p512Uint1(x190)) + uint64(p512Uint1(x139)))
    var x192 uint64
    var x193 uint64
    x193, x192 = bits.Mul64(x2, arg1[7])
    var x194 uint64
    var x195 uint64
    x195, x194 = bits.Mul64(x2, arg1[6])
    var x196 uint64
    var x197 uint64
    x197, x196 = bits.Mul64(x2, arg1[5])
    var x198 uint64
    var x199 uint64
    x199, x198 = bits.Mul64(x2, arg1[4])
    var x200 uint64
    var x201 uint64
    x201, x200 = bits.Mul64(x2, arg1[3])
    var x202 uint64
    var x203 uint64
    x203, x202 = bits.Mul64(x2, arg1[2])
    var x204 uint64
    var x205 uint64
    x205, x204 = bits.Mul64(x2, arg1[1])
    var x206 uint64
    var x207 uint64
    x207, x206 = bits.Mul64(x2, arg1[0])
    var x208 uint64
    var x209 uint64
    x208, x209 = bits.Add64(x207, x204, uint64(0x0))
    var x210 uint64
    var x211 uint64
    x210, x211 = bits.Add64(x205, x202, uint64(p512Uint1(x209)))
    var x212 uint64
    var x213 uint64
    x212, x213 = bits.Add64(x203, x200, uint64(p512Uint1(x211)))
    var x214 uint64
    var x215 uint64
    x214, x215 = bits.Add64(x201, x198, uint64(p512Uint1(x213)))
    var x216 uint64
    var x217 uint64
    x216, x217 = bits.Add64(x199, x196, uint64(p512Uint1(x215)))
    var x218 uint64
    var x219 uint64
    x218, x219 = bits.Add64(x197, x194, uint64(p512Uint1(x217)))
    var x220 uint64
    var x221 uint64
    x220, x221 = bits.Add64(x195, x192, uint64(p512Uint1(x219)))
    x222 := (uint64(p512Uint1(x221)) + x193)
    var x223 uint64
    var x224 uint64
    x223, x224 = bits.Add64(x175, x206, uint64(0x0))
    var x225 uint64
    var x226 uint64
    x225, x226 = bits.Add64(x177, x208, uint64(p512Uint1(x224)))
    var x227 uint64
    var x228 uint64
    x227, x228 = bits.Add64(x179, x210, uint64(p512Uint1(x226)))
    var x229 uint64
    var x230 uint64
    x229, x230 = bits.Add64(x181, x212, uint64(p512Uint1(x228)))
    var x231 uint64
    var x232 uint64
    x231, x232 = bits.Add64(x183, x214, uint64(p512Uint1(x230)))
    var x233 uint64
    var x234 uint64
    x233, x234 = bits.Add64(x185, x216, uint64(p512Uint1(x232)))
    var x235 uint64
    var x236 uint64
    x235, x236 = bits.Add64(x187, x218, uint64(p512Uint1(x234)))
    var x237 uint64
    var x238 uint64
    x237, x238 = bits.Add64(x189, x220, uint64(p512Uint1(x236)))
    var x239 uint64
    var x240 uint64
    x239, x240 = bits.Add64(x191, x222, uint64(p512Uint1(x238)))
    var x241 uint64
    _, x241 = bits.Mul64(x223, 0x58a1f7e6ce0f4c09)
    var x243 uint64
    var x244 uint64
    x244, x243 = bits.Mul64(x241, 0xffffffffffffffff)
    var x245 uint64
    var x246 uint64
    x246, x245 = bits.Mul64(x241, 0xffffffffffffffff)
    var x247 uint64
    var x248 uint64
    x248, x247 = bits.Mul64(x241, 0xffffffffffffffff)
    var x249 uint64
    var x250 uint64
    x250, x249 = bits.Mul64(x241, 0xffffffffffffffff)
    var x251 uint64
    var x252 uint64
    x252, x251 = bits.Mul64(x241, 0xffffffffffffffff)
    var x253 uint64
    var x254 uint64
    x254, x253 = bits.Mul64(x241, 0xffffffffffffffff)
    var x255 uint64
    var x256 uint64
    x256, x255 = bits.Mul64(x241, 0xffffffffffffffff)
    var x257 uint64
    var x258 uint64
    x258, x257 = bits.Mul64(x241, 0xfffffffffffffdc7)
    var x259 uint64
    var x260 uint64
    x259, x260 = bits.Add64(x258, x255, uint64(0x0))
    var x261 uint64
    var x262 uint64
    x261, x262 = bits.Add64(x256, x253, uint64(p512Uint1(x260)))
    var x263 uint64
    var x264 uint64
    x263, x264 = bits.Add64(x254, x251, uint64(p512Uint1(x262)))
    var x265 uint64
    var x266 uint64
    x265, x266 = bits.Add64(x252, x249, uint64(p512Uint1(x264)))
    var x267 uint64
    var x268 uint64
    x267, x268 = bits.Add64(x250, x247, uint64(p512Uint1(x266)))
    var x269 uint64
    var x270 uint64
    x269, x270 = bits.Add64(x248, x245, uint64(p512Uint1(x268)))
    var x271 uint64
    var x272 uint64
    x271, x272 = bits.Add64(x246, x243, uint64(p512Uint1(x270)))
    x273 := (uint64(p512Uint1(x272)) + x244)
    var x275 uint64
    _, x275 = bits.Add64(x223, x257, uint64(0x0))
    var x276 uint64
    var x277 uint64
    x276, x277 = bits.Add64(x225, x259, uint64(p512Uint1(x275)))
    var x278 uint64
    var x279 uint64
    x278, x279 = bits.Add64(x227, x261, uint64(p512Uint1(x277)))
    var x280 uint64
    var x281 uint64
    x280, x281 = bits.Add64(x229, x263, uint64(p512Uint1(x279)))
    var x282 uint64
    var x283 uint64
    x282, x283 = bits.Add64(x231, x265, uint64(p512Uint1(x281)))
    var x284 uint64
    var x285 uint64
    x284, x285 = bits.Add64(x233, x267, uint64(p512Uint1(x283)))
    var x286 uint64
    var x287 uint64
    x286, x287 = bits.Add64(x235, x269, uint64(p512Uint1(x285)))
    var x288 uint64
    var x289 uint64
    x288, x289 = bits.Add64(x237, x271, uint64(p512Uint1(x287)))
    var x290 uint64
    var x291 uint64
    x290, x291 = bits.Add64(x239, x273, uint64(p512Uint1(x289)))
    x292 := (uint64(p512Uint1(x291)) + uint64(p512Uint1(x240)))
    var x293 uint64
    var x294 uint64
    x294, x293 = bits.Mul64(x3, arg1[7])
    var x295 uint64
    var x296 uint64
    x296, x295 = bits.Mul64(x3, arg1[6])
    var x297 uint64
    var x298 uint64
    x298, x297 = bits.Mul64(x3, arg1[5])
    var x299 uint64
    var x300 uint64
    x300, x299 = bits.Mul64(x3, arg1[4])
    var x301 uint64
    var x302 uint64
    x302, x301 = bits.Mul64(x3, arg1[3])
    var x303 uint64
    var x304 uint64
    x304, x303 = bits.Mul64(x3, arg1[2])
    var x305 uint64
    var x306 uint64
    x306, x305 = bits.Mul64(x3, arg1[1])
    var x307 uint64
    var x308 uint64
    x308, x307 = bits.Mul64(x3, arg1[0])
    var x309 uint64
    var x310 uint64
    x309, x310 = bits.Add64(x308, x305, uint64(0x0))
    var x311 uint64
    var x312 uint64
    x311, x312 = bits.Add64(x306, x303, uint64(p512Uint1(x310)))
    var x313 uint64
    var x314 uint64
    x313, x314 = bits.Add64(x304, x301, uint64(p512Uint1(x312)))
    var x315 uint64
    var x316 uint64
    x315, x316 = bits.Add64(x302, x299, uint64(p512Uint1(x314)))
    var x317 uint64
    var x318 uint64
    x317, x318 = bits.Add64(x300, x297, uint64(p512Uint1(x316)))
    var x319 uint64
    var x320 uint64
    x319, x320 = bits.Add64(x298, x295, uint64(p512Uint1(x318)))
    var x321 uint64
    var x322 uint64
    x321, x322 = bits.Add64(x296, x293, uint64(p512Uint1(x320)))
    x323 := (uint64(p512Uint1(x322)) + x294)
    var x324 uint64
    var x325 uint64
    x324, x325 = bits.Add64(x276, x307, uint64(0x0))
    var x326 uint64
    var x327 uint64
    x326, x327 = bits.Add64(x278, x309, uint64(p512Uint1(x325)))
    var x328 uint64
    var x329 uint64
    x328, x329 = bits.Add64(x280, x311, uint64(p512Uint1(x327)))
    var x330 uint64
    var x331 uint64
    x330, x331 = bits.Add64(x282, x313, uint64(p512Uint1(x329)))
    var x332 uint64
    var x333 uint64
    x332, x333 = bits.Add64(x284, x315, uint64(p512Uint1(x331)))
    var x334 uint64
    var x335 uint64
    x334, x335 = bits.Add64(x286, x317, uint64(p512Uint1(x333)))
    var x336 uint64
    var x337 uint64
    x336, x337 = bits.Add64(x288, x319, uint64(p512Uint1(x335)))
    var x338 uint64
    var x339 uint64
    x338, x339 = bits.Add64(x290, x321, uint64(p512Uint1(x337)))
    var x340 uint64
    var x341 uint64
    x340, x341 = bits.Add64(x292, x323, uint64(p512Uint1(x339)))
    var x342 uint64
    _, x342 = bits.Mul64(x324, 0x58a1f7e6ce0f4c09)
    var x344 uint64
    var x345 uint64
    x345, x344 = bits.Mul64(x342, 0xffffffffffffffff)
    var x346 uint64
    var x347 uint64
    x347, x346 = bits.Mul64(x342, 0xffffffffffffffff)
    var x348 uint64
    var x349 uint64
    x349, x348 = bits.Mul64(x342, 0xffffffffffffffff)
    var x350 uint64
    var x351 uint64
    x351, x350 = bits.Mul64(x342, 0xffffffffffffffff)
    var x352 uint64
    var x353 uint64
    x353, x352 = bits.Mul64(x342, 0xffffffffffffffff)
    var x354 uint64
    var x355 uint64
    x355, x354 = bits.Mul64(x342, 0xffffffffffffffff)
    var x356 uint64
    var x357 uint64
    x357, x356 = bits.Mul64(x342, 0xffffffffffffffff)
    var x358 uint64
    var x359 uint64
    x359, x358 = bits.Mul64(x342, 0xfffffffffffffdc7)
    var x360 uint64
    var x361 uint64
    x360, x361 = bits.Add64(x359, x356, uint64(0x0))
    var x362 uint64
    var x363 uint64
    x362, x363 = bits.Add64(x357, x354, uint64(p512Uint1(x361)))
    var x364 uint64
    var x365 uint64
    x364, x365 = bits.Add64(x355, x352, uint64(p512Uint1(x363)))
    var x366 uint64
    var x367 uint64
    x366, x367 = bits.Add64(x353, x350, uint64(p512Uint1(x365)))
    var x368 uint64
    var x369 uint64
    x368, x369 = bits.Add64(x351, x348, uint64(p512Uint1(x367)))
    var x370 uint64
    var x371 uint64
    x370, x371 = bits.Add64(x349, x346, uint64(p512Uint1(x369)))
    var x372 uint64
    var x373 uint64
    x372, x373 = bits.Add64(x347, x344, uint64(p512Uint1(x371)))
    x374 := (uint64(p512Uint1(x373)) + x345)
    var x376 uint64
    _, x376 = bits.Add64(x324, x358, uint64(0x0))
    var x377 uint64
    var x378 uint64
    x377, x378 = bits.Add64(x326, x360, uint64(p512Uint1(x376)))
    var x379 uint64
    var x380 uint64
    x379, x380 = bits.Add64(x328, x362, uint64(p512Uint1(x378)))
    var x381 uint64
    var x382 uint64
    x381, x382 = bits.Add64(x330, x364, uint64(p512Uint1(x380)))
    var x383 uint64
    var x384 uint64
    x383, x384 = bits.Add64(x332, x366, uint64(p512Uint1(x382)))
    var x385 uint64
    var x386 uint64
    x385, x386 = bits.Add64(x334, x368, uint64(p512Uint1(x384)))
    var x387 uint64
    var x388 uint64
    x387, x388 = bits.Add64(x336, x370, uint64(p512Uint1(x386)))
    var x389 uint64
    var x390 uint64
    x389, x390 = bits.Add64(x338, x372, uint64(p512Uint1(x388)))
    var x391 uint64
    var x392 uint64
    x391, x392 = bits.Add64(x340, x374, uint64(p512Uint1(x390)))
    x393 := (uint64(p512Uint1(x392)) + uint64(p512Uint1(x341)))
    var x394 uint64
    var x395 uint64
    x395, x394 = bits.Mul64(x4, arg1[7])
    var x396 uint64
    var x397 uint64
    x397, x396 = bits.Mul64(x4, arg1[6])
    var x398 uint64
    var x399 uint64
    x399, x398 = bits.Mul64(x4, arg1[5])
    var x400 uint64
    var x401 uint64
    x401, x400 = bits.Mul64(x4, arg1[4])
    var x402 uint64
    var x403 uint64
    x403, x402 = bits.Mul64(x4, arg1[3])
    var x404 uint64
    var x405 uint64
    x405, x404 = bits.Mul64(x4, arg1[2])
    var x406 uint64
    var x407 uint64
    x407, x406 = bits.Mul64(x4, arg1[1])
    var x408 uint64
    var x409 uint64
    x409, x408 = bits.Mul64(x4, arg1[0])
    var x410 uint64
    var x411 uint64
    x410, x411 = bits.Add64(x409, x406, uint64(0x0))
    var x412 uint64
    var x413 uint64
    x412, x413 = bits.Add64(x407, x404, uint64(p512Uint1(x411)))
    var x414 uint64
    var x415 uint64
    x414, x415 = bits.Add64(x405, x402, uint64(p512Uint1(x413)))
    var x416 uint64
    var x417 uint64
    x416, x417 = bits.Add64(x403, x400, uint64(p512Uint1(x415)))
    var x418 uint64
    var x419 uint64
    x418, x419 = bits.Add64(x401, x398, uint64(p512Uint1(x417)))
    var x420 uint64
    var x421 uint64
    x420, x421 = bits.Add64(x399, x396, uint64(p512Uint1(x419)))
    var x422 uint64
    var x423 uint64
    x422, x423 = bits.Add64(x397, x394, uint64(p512Uint1(x421)))
    x424 := (uint64(p512Uint1(x423)) + x395)
    var x425 uint64
    var x426 uint64
    x425, x426 = bits.Add64(x377, x408, uint64(0x0))
    var x427 uint64
    var x428 uint64
    x427, x428 = bits.Add64(x379, x410, uint64(p512Uint1(x426)))
    var x429 uint64
    var x430 uint64
    x429, x430 = bits.Add64(x381, x412, uint64(p512Uint1(x428)))
    var x431 uint64
    var x432 uint64
    x431, x432 = bits.Add64(x383, x414, uint64(p512Uint1(x430)))
    var x433 uint64
    var x434 uint64
    x433, x434 = bits.Add64(x385, x416, uint64(p512Uint1(x432)))
    var x435 uint64
    var x436 uint64
    x435, x436 = bits.Add64(x387, x418, uint64(p512Uint1(x434)))
    var x437 uint64
    var x438 uint64
    x437, x438 = bits.Add64(x389, x420, uint64(p512Uint1(x436)))
    var x439 uint64
    var x440 uint64
    x439, x440 = bits.Add64(x391, x422, uint64(p512Uint1(x438)))
    var x441 uint64
    var x442 uint64
    x441, x442 = bits.Add64(x393, x424, uint64(p512Uint1(x440)))
    var x443 uint64
    _, x443 = bits.Mul64(x425, 0x58a1f7e6ce0f4c09)
    var x445 uint64
    var x446 uint64
    x446, x445 = bits.Mul64(x443, 0xffffffffffffffff)
    var x447 uint64
    var x448 uint64
    x448, x447 = bits.Mul64(x443, 0xffffffffffffffff)
    var x449 uint64
    var x450 uint64
    x450, x449 = bits.Mul64(x443, 0xffffffffffffffff)
    var x451 uint64
    var x452 uint64
    x452, x451 = bits.Mul64(x443, 0xffffffffffffffff)
    var x453 uint64
    var x454 uint64
    x454, x453 = bits.Mul64(x443, 0xffffffffffffffff)
    var x455 uint64
    var x456 uint64
    x456, x455 = bits.Mul64(x443, 0xffffffffffffffff)
    var x457 uint64
    var x458 uint64
    x458, x457 = bits.Mul64(x443, 0xffffffffffffffff)
    var x459 uint64
    var x460 uint64
    x460, x459 = bits.Mul64(x443, 0xfffffffffffffdc7)
    var x461 uint64
    var x462 uint64
    x461, x462 = bits.Add64(x460, x457, uint64(0x0))
    var x463 uint64
    var x464 uint64
    x463, x464 = bits.Add64(x458, x455, uint64(p512Uint1(x462)))
    var x465 uint64
    var x466 uint64
    x465, x466 = bits.Add64(x456, x453, uint64(p512Uint1(x464)))
    var x467 uint64
    var x468 uint64
    x467, x468 = bits.Add64(x454, x451, uint64(p512Uint1(x466)))
    var x469 uint64
    var x470 uint64
    x469, x470 = bits.Add64(x452, x449, uint64(p512Uint1(x468)))
    var x471 uint64
    var x472 uint64
    x471, x472 = bits.Add64(x450, x447, uint64(p512Uint1(x470)))
    var x473 uint64
    var x474 uint64
    x473, x474 = bits.Add64(x448, x445, uint64(p512Uint1(x472)))
    x475 := (uint64(p512Uint1(x474)) + x446)
    var x477 uint64
    _, x477 = bits.Add64(x425, x459, uint64(0x0))
    var x478 uint64
    var x479 uint64
    x478, x479 = bits.Add64(x427, x461, uint64(p512Uint1(x477)))
    var x480 uint64
    var x481 uint64
    x480, x481 = bits.Add64(x429, x463, uint64(p512Uint1(x479)))
    var x482 uint64
    var x483 uint64
    x482, x483 = bits.Add64(x431, x465, uint64(p512Uint1(x481)))
    var x484 uint64
    var x485 uint64
    x484, x485 = bits.Add64(x433, x467, uint64(p512Uint1(x483)))
    var x486 uint64
    var x487 uint64
    x486, x487 = bits.Add64(x435, x469, uint64(p512Uint1(x485)))
    var x488 uint64
    var x489 uint64
    x488, x489 = bits.Add64(x437, x471, uint64(p512Uint1(x487)))
    var x490 uint64
    var x491 uint64
    x490, x491 = bits.Add64(x439, x473, uint64(p512Uint1(x489)))
    var x492 uint64
    var x493 uint64
    x492, x493 = bits.Add64(x441, x475, uint64(p512Uint1(x491)))
    x494 := (uint64(p512Uint1(x493)) + uint64(p512Uint1(x442)))
    var x495 uint64
    var x496 uint64
    x496, x495 = bits.Mul64(x5, arg1[7])
    var x497 uint64
    var x498 uint64
    x498, x497 = bits.Mul64(x5, arg1[6])
    var x499 uint64
    var x500 uint64
    x500, x499 = bits.Mul64(x5, arg1[5])
    var x501 uint64
    var x502 uint64
    x502, x501 = bits.Mul64(x5, arg1[4])
    var x503 uint64
    var x504 uint64
    x504, x503 = bits.Mul64(x5, arg1[3])
    var x505 uint64
    var x506 uint64
    x506, x505 = bits.Mul64(x5, arg1[2])
    var x507 uint64
    var x508 uint64
    x508, x507 = bits.Mul64(x5, arg1[1])
    var x509 uint64
    var x510 uint64
    x510, x509 = bits.Mul64(x5, arg1[0])
    var x511 uint64
    var x512 uint64
    x511, x512 = bits.Add64(x510, x507, uint64(0x0))
    var x513 uint64
    var x514 uint64
    x513, x514 = bits.Add64(x508, x505, uint64(p512Uint1(x512)))
    var x515 uint64
    var x516 uint64
    x515, x516 = bits.Add64(x506, x503, uint64(p512Uint1(x514)))
    var x517 uint64
    var x518 uint64
    x517, x518 = bits.Add64(x504, x501, uint64(p512Uint1(x516)))
    var x519 uint64
    var x520 uint64
    x519, x520 = bits.Add64(x502, x499, uint64(p512Uint1(x518)))
    var x521 uint64
    var x522 uint64
    x521, x522 = bits.Add64(x500, x497, uint64(p512Uint1(x520)))
    var x523 uint64
    var x524 uint64
    x523, x524 = bits.Add64(x498, x495, uint64(p512Uint1(x522)))
    x525 := (uint64(p512Uint1(x524)) + x496)
    var x526 uint64
    var x527 uint64
    x526, x527 = bits.Add64(x478, x509, uint64(0x0))
    var x528 uint64
    var x529 uint64
    x528, x529 = bits.Add64(x480, x511, uint64(p512Uint1(x527)))
    var x530 uint64
    var x531 uint64
    x530, x531 = bits.Add64(x482, x513, uint64(p512Uint1(x529)))
    var x532 uint64
    var x533 uint64
    x532, x533 = bits.Add64(x484, x515, uint64(p512Uint1(x531)))
    var x534 uint64
    var x535 uint64
    x534, x535 = bits.Add64(x486, x517, uint64(p512Uint1(x533)))
    var x536 uint64
    var x537 uint64
    x536, x537 = bits.Add64(x488, x519, uint64(p512Uint1(x535)))
    var x538 uint64
    var x539 uint64
    x538, x539 = bits.Add64(x490, x521, uint64(p512Uint1(x537)))
    var x540 uint64
    var x541 uint64
    x540, x541 = bits.Add64(x492, x523, uint64(p512Uint1(x539)))
    var x542 uint64
    var x543 uint64
    x542, x543 = bits.Add64(x494, x525, uint64(p512Uint1(x541)))
    var x544 uint64
    _, x544 = bits.Mul64(x526, 0x58a1f7e6ce0f4c09)
    var x546 uint64
    var x547 uint64
    x547, x546 = bits.Mul64(x544, 0xffffffffffffffff)
    var x548 uint64
    var x549 uint64
    x549, x548 = bits.Mul64(x544, 0xffffffffffffffff)
    var x550 uint64
    var x551 uint64
    x551, x550 = bits.Mul64(x544, 0xffffffffffffffff)
    var x552 uint64
    var x553 uint64
    x553, x552 = bits.Mul64(x544, 0xffffffffffffffff)
    var x554 uint64
    var x555 uint64
    x555, x554 = bits.Mul64(x544, 0xffffffffffffffff)
    var x556 uint64
    var x557 uint64
    x557, x556 = bits.Mul64(x544, 0xffffffffffffffff)
    var x558 uint64
    var x559 uint64
    x559, x558 = bits.Mul64(x544, 0xffffffffffffffff)
    var x560 uint64
    var x561 uint64
    x561, x560 = bits.Mul64(x544, 0xfffffffffffffdc7)
    var x562 uint64
    var x563 uint64
    x562, x563 = bits.Add64(x561, x558, uint64(0x0))
    var x564 uint64
    var x565 uint64
    x564, x565 = bits.Add64(x559, x556, uint64(p512Uint1(x563)))
    var x566 uint64
    var x567 uint64
    x566, x567 = bits.Add64(x557, x554, uint64(p512Uint1(x565)))
    var x568 uint64
    var x569 uint64
    x568, x569 = bits.Add64(x555, x552, uint64(p512Uint1(x567)))
    var x570 uint64
    var x571 uint64
    x570, x571 = bits.Add64(x553, x550, uint64(p512Uint1(x569)))
    var x572 uint64
    var x573 uint64
    x572, x573 = bits.Add64(x551, x548, uint64(p512Uint1(x571)))
    var x574 uint64
    var x575 uint64
    x574, x575 = bits.Add64(x549, x546, uint64(p512Uint1(x573)))
    x576 := (uint64(p512Uint1(x575)) + x547)
    var x578 uint64
    _, x578 = bits.Add64(x526, x560, uint64(0x0))
    var x579 uint64
    var x580 uint64
    x579, x580 = bits.Add64(x528, x562, uint64(p512Uint1(x578)))
    var x581 uint64
    var x582 uint64
    x581, x582 = bits.Add64(x530, x564, uint64(p512Uint1(x580)))
    var x583 uint64
    var x584 uint64
    x583, x584 = bits.Add64(x532, x566, uint64(p512Uint1(x582)))
    var x585 uint64
    var x586 uint64
    x585, x586 = bits.Add64(x534, x568, uint64(p512Uint1(x584)))
    var x587 uint64
    var x588 uint64
    x587, x588 = bits.Add64(x536, x570, uint64(p512Uint1(x586)))
    var x589 uint64
    var x590 uint64
    x589, x590 = bits.Add64(x538, x572, uint64(p512Uint1(x588)))
    var x591 uint64
    var x592 uint64
    x591, x592 = bits.Add64(x540, x574, uint64(p512Uint1(x590)))
    var x593 uint64
    var x594 uint64
    x593, x594 = bits.Add64(x542, x576, uint64(p512Uint1(x592)))
    x595 := (uint64(p512Uint1(x594)) + uint64(p512Uint1(x543)))
    var x596 uint64
    var x597 uint64
    x597, x596 = bits.Mul64(x6, arg1[7])
    var x598 uint64
    var x599 uint64
    x599, x598 = bits.Mul64(x6, arg1[6])
    var x600 uint64
    var x601 uint64
    x601, x600 = bits.Mul64(x6, arg1[5])
    var x602 uint64
    var x603 uint64
    x603, x602 = bits.Mul64(x6, arg1[4])
    var x604 uint64
    var x605 uint64
    x605, x604 = bits.Mul64(x6, arg1[3])
    var x606 uint64
    var x607 uint64
    x607, x606 = bits.Mul64(x6, arg1[2])
    var x608 uint64
    var x609 uint64
    x609, x608 = bits.Mul64(x6, arg1[1])
    var x610 uint64
    var x611 uint64
    x611, x610 = bits.Mul64(x6, arg1[0])
    var x612 uint64
    var x613 uint64
    x612, x613 = bits.Add64(x611, x608, uint64(0x0))
    var x614 uint64
    var x615 uint64
    x614, x615 = bits.Add64(x609, x606, uint64(p512Uint1(x613)))
    var x616 uint64
    var x617 uint64
    x616, x617 = bits.Add64(x607, x604, uint64(p512Uint1(x615)))
    var x618 uint64
    var x619 uint64
    x618, x619 = bits.Add64(x605, x602, uint64(p512Uint1(x617)))
    var x620 uint64
    var x621 uint64
    x620, x621 = bits.Add64(x603, x600, uint64(p512Uint1(x619)))
    var x622 uint64
    var x623 uint64
    x622, x623 = bits.Add64(x601, x598, uint64(p512Uint1(x621)))
    var x624 uint64
    var x625 uint64
    x624, x625 = bits.Add64(x599, x596, uint64(p512Uint1(x623)))
    x626 := (uint64(p512Uint1(x625)) + x597)
    var x627 uint64
    var x628 uint64
    x627, x628 = bits.Add64(x579, x610, uint64(0x0))
    var x629 uint64
    var x630 uint64
    x629, x630 = bits.Add64(x581, x612, uint64(p512Uint1(x628)))
    var x631 uint64
    var x632 uint64
    x631, x632 = bits.Add64(x583, x614, uint64(p512Uint1(x630)))
    var x633 uint64
    var x634 uint64
    x633, x634 = bits.Add64(x585, x616, uint64(p512Uint1(x632)))
    var x635 uint64
    var x636 uint64
    x635, x636 = bits.Add64(x587, x618, uint64(p512Uint1(x634)))
    var x637 uint64
    var x638 uint64
    x637, x638 = bits.Add64(x589, x620, uint64(p512Uint1(x636)))
    var x639 uint64
    var x640 uint64
    x639, x640 = bits.Add64(x591, x622, uint64(p512Uint1(x638)))
    var x641 uint64
    var x642 uint64
    x641, x642 = bits.Add64(x593, x624, uint64(p512Uint1(x640)))
    var x643 uint64
    var x644 uint64
    x643, x644 = bits.Add64(x595, x626, uint64(p512Uint1(x642)))
    var x645 uint64
    _, x645 = bits.Mul64(x627, 0x58a1f7e6ce0f4c09)
    var x647 uint64
    var x648 uint64
    x648, x647 = bits.Mul64(x645, 0xffffffffffffffff)
    var x649 uint64
    var x650 uint64
    x650, x649 = bits.Mul64(x645, 0xffffffffffffffff)
    var x651 uint64
    var x652 uint64
    x652, x651 = bits.Mul64(x645, 0xffffffffffffffff)
    var x653 uint64
    var x654 uint64
    x654, x653 = bits.Mul64(x645, 0xffffffffffffffff)
    var x655 uint64
    var x656 uint64
    x656, x655 = bits.Mul64(x645, 0xffffffffffffffff)
    var x657 uint64
    var x658 uint64
    x658, x657 = bits.Mul64(x645, 0xffffffffffffffff)
    var x659 uint64
    var x660 uint64
    x660, x659 = bits.Mul64(x645, 0xffffffffffffffff)
    var x661 uint64
    var x662 uint64
    x662, x661 = bits.Mul64(x645, 0xfffffffffffffdc7)
    var x663 uint64
    var x664 uint64
    x663, x664 = bits.Add64(x662, x659, uint64(0x0))
    var x665 uint64
    var x666 uint64
    x665, x666 = bits.Add64(x660, x657, uint64(p512Uint1(x664)))
    var x667 uint64
    var x668 uint64
    x667, x668 = bits.Add64(x658, x655, uint64(p512Uint1(x666)))
    var x669 uint64
    var x670 uint64
    x669, x670 = bits.Add64(x656, x653, uint64(p512Uint1(x668)))
    var x671 uint64
    var x672 uint64
    x671, x672 = bits.Add64(x654, x651, uint64(p512Uint1(x670)))
    var x673 uint64
    var x674 uint64
    x673, x674 = bits.Add64(x652, x649, uint64(p512Uint1(x672)))
    var x675 uint64
    var x676 uint64
    x675, x676 = bits.Add64(x650, x647, uint64(p512Uint1(x674)))
    x677 := (uint64(p512Uint1(x676)) + x648)
    var x679 uint64
    _, x679 = bits.Add64(x627, x661, uint64(0x0))
    var x680 uint64
    var x681 uint64
    x680, x681 = bits.Add64(x629, x663, uint64(p512Uint1(x679)))
    var x682 uint64
    var x683 uint64
    x682, x683 = bits.Add64(x631, x665, uint64(p512Uint1(x681)))
    var x684 uint64
    var x685 uint64
    x684, x685 = bits.Add64(x633, x667, uint64(p512Uint1(x683)))
    var x686 uint64
    var x687 uint64
    x686, x687 = bits.Add64(x635, x669, uint64(p512Uint1(x685)))
    var x688 uint64
    var x689 uint64
    x688, x689 = bits.Add64(x637, x671, uint64(p512Uint1(x687)))
    var x690 uint64
    var x691 uint64
    x690, x691 = bits.Add64(x639, x673, uint64(p512Uint1(x689)))
    var x692 uint64
    var x693 uint64
    x692, x693 = bits.Add64(x641, x675, uint64(p512Uint1(x691)))
    var x694 uint64
    var x695 uint64
    x694, x695 = bits.Add64(x643, x677, uint64(p512Uint1(x693)))
    x696 := (uint64(p512Uint1(x695)) + uint64(p512Uint1(x644)))
    var x697 uint64
    var x698 uint64
    x698, x697 = bits.Mul64(x7, arg1[7])
    var x699 uint64
    var x700 uint64
    x700, x699 = bits.Mul64(x7, arg1[6])
    var x701 uint64
    var x702 uint64
    x702, x701 = bits.Mul64(x7, arg1[5])
    var x703 uint64
    var x704 uint64
    x704, x703 = bits.Mul64(x7, arg1[4])
    var x705 uint64
    var x706 uint64
    x706, x705 = bits.Mul64(x7, arg1[3])
    var x707 uint64
    var x708 uint64
    x708, x707 = bits.Mul64(x7, arg1[2])
    var x709 uint64
    var x710 uint64
    x710, x709 = bits.Mul64(x7, arg1[1])
    var x711 uint64
    var x712 uint64
    x712, x711 = bits.Mul64(x7, arg1[0])
    var x713 uint64
    var x714 uint64
    x713, x714 = bits.Add64(x712, x709, uint64(0x0))
    var x715 uint64
    var x716 uint64
    x715, x716 = bits.Add64(x710, x707, uint64(p512Uint1(x714)))
    var x717 uint64
    var x718 uint64
    x717, x718 = bits.Add64(x708, x705, uint64(p512Uint1(x716)))
    var x719 uint64
    var x720 uint64
    x719, x720 = bits.Add64(x706, x703, uint64(p512Uint1(x718)))
    var x721 uint64
    var x722 uint64
    x721, x722 = bits.Add64(x704, x701, uint64(p512Uint1(x720)))
    var x723 uint64
    var x724 uint64
    x723, x724 = bits.Add64(x702, x699, uint64(p512Uint1(x722)))
    var x725 uint64
    var x726 uint64
    x725, x726 = bits.Add64(x700, x697, uint64(p512Uint1(x724)))
    x727 := (uint64(p512Uint1(x726)) + x698)
    var x728 uint64
    var x729 uint64
    x728, x729 = bits.Add64(x680, x711, uint64(0x0))
    var x730 uint64
    var x731 uint64
    x730, x731 = bits.Add64(x682, x713, uint64(p512Uint1(x729)))
    var x732 uint64
    var x733 uint64
    x732, x733 = bits.Add64(x684, x715, uint64(p512Uint1(x731)))
    var x734 uint64
    var x735 uint64
    x734, x735 = bits.Add64(x686, x717, uint64(p512Uint1(x733)))
    var x736 uint64
    var x737 uint64
    x736, x737 = bits.Add64(x688, x719, uint64(p512Uint1(x735)))
    var x738 uint64
    var x739 uint64
    x738, x739 = bits.Add64(x690, x721, uint64(p512Uint1(x737)))
    var x740 uint64
    var x741 uint64
    x740, x741 = bits.Add64(x692, x723, uint64(p512Uint1(x739)))
    var x742 uint64
    var x743 uint64
    x742, x743 = bits.Add64(x694, x725, uint64(p512Uint1(x741)))
    var x744 uint64
    var x745 uint64
    x744, x745 = bits.Add64(x696, x727, uint64(p512Uint1(x743)))
    var x746 uint64
    _, x746 = bits.Mul64(x728, 0x58a1f7e6ce0f4c09)
    var x748 uint64
    var x749 uint64
    x749, x748 = bits.Mul64(x746, 0xffffffffffffffff)
    var x750 uint64
    var x751 uint64
    x751, x750 = bits.Mul64(x746, 0xffffffffffffffff)
    var x752 uint64
    var x753 uint64
    x753, x752 = bits.Mul64(x746, 0xffffffffffffffff)
    var x754 uint64
    var x755 uint64
    x755, x754 = bits.Mul64(x746, 0xffffffffffffffff)
    var x756 uint64
    var x757 uint64
    x757, x756 = bits.Mul64(x746, 0xffffffffffffffff)
    var x758 uint64
    var x759 uint64
    x759, x758 = bits.Mul64(x746, 0xffffffffffffffff)
    var x760 uint64
    var x761 uint64
    x761, x760 = bits.Mul64(x746, 0xffffffffffffffff)
    var x762 uint64
    var x763 uint64
    x763, x762 = bits.Mul64(x746, 0xfffffffffffffdc7)
    var x764 uint64
    var x765 uint64
    x764, x765 = bits.Add64(x763, x760, uint64(0x0))
    var x766 uint64
    var x767 uint64
    x766, x767 = bits.Add64(x761, x758, uint64(p512Uint1(x765)))
    var x768 uint64
    var x769 uint64
    x768, x769 = bits.Add64(x759, x756, uint64(p512Uint1(x767)))
    var x770 uint64
    var x771 uint64
    x770, x771 = bits.Add64(x757, x754, uint64(p512Uint1(x769)))
    var x772 uint64
    var x773 uint64
    x772, x773 = bits.Add64(x755, x752, uint64(p512Uint1(x771)))
    var x774 uint64
    var x775 uint64
    x774, x775 = bits.Add64(x753, x750, uint64(p512Uint1(x773)))
    var x776 uint64
    var x777 uint64
    x776, x777 = bits.Add64(x751, x748, uint64(p512Uint1(x775)))
    x778 := (uint64(p512Uint1(x777)) + x749)
    var x780 uint64
    _, x780 = bits.Add64(x728, x762, uint64(0x0))
    var x781 uint64
    var x782 uint64
    x781, x782 = bits.Add64(x730, x764, uint64(p512Uint1(x780)))
    var x783 uint64
    var x784 uint64
    x783, x784 = bits.Add64(x732, x766, uint64(p512Uint1(x782)))
    var x785 uint64
    var x786 uint64
    x785, x786 = bits.Add64(x734, x768, uint64(p512Uint1(x784)))
    var x787 uint64
    var x788 uint64
    x787, x788 = bits.Add64(x736, x770, uint64(p512Uint1(x786)))
    var x789 uint64
    var x790 uint64
    x789, x790 = bits.Add64(x738, x772, uint64(p512Uint1(x788)))
    var x791 uint64
    var x792 uint64
    x791, x792 = bits.Add64(x740, x774, uint64(p512Uint1(x790)))
    var x793 uint64
    var x794 uint64
    x793, x794 = bits.Add64(x742, x776, uint64(p512Uint1(x792)))
    var x795 uint64
    var x796 uint64
    x795, x796 = bits.Add64(x744, x778, uint64(p512Uint1(x794)))
    x797 := (uint64(p512Uint1(x796)) + uint64(p512Uint1(x745)))
    var x798 uint64
    var x799 uint64
    x798, x799 = bits.Sub64(x781, 0xfffffffffffffdc7, uint64(0x0))
    var x800 uint64
    var x801 uint64
    x800, x801 = bits.Sub64(x783, 0xffffffffffffffff, uint64(p512Uint1(x799)))
    var x802 uint64
    var x803 uint64
    x802, x803 = bits.Sub64(x785, 0xffffffffffffffff, uint64(p512Uint1(x801)))
    var x804 uint64
    var x805 uint64
    x804, x805 = bits.Sub64(x787, 0xffffffffffffffff, uint64(p512Uint1(x803)))
    var x806 uint64
    var x807 uint64
    x806, x807 = bits.Sub64(x789, 0xffffffffffffffff, uint64(p512Uint1(x805)))
    var x808 uint64
    var x809 uint64
    x808, x809 = bits.Sub64(x791, 0xffffffffffffffff, uint64(p512Uint1(x807)))
    var x810 uint64
    var x811 uint64
    x810, x811 = bits.Sub64(x793, 0xffffffffffffffff, uint64(p512Uint1(x809)))
    var x812 uint64
    var x813 uint64
    x812, x813 = bits.Sub64(x795, 0xffffffffffffffff, uint64(p512Uint1(x811)))
    var x815 uint64
    _, x815 = bits.Sub64(x797, uint64(0x0), uint64(p512Uint1(x813)))
    var x816 uint64
    p512CmovznzU64(&x816, p512Uint1(x815), x798, x781)
    var x817 uint64
    p512CmovznzU64(&x817, p512Uint1(x815), x800, x783)
    var x818 uint64
    p512CmovznzU64(&x818, p512Uint1(x815), x802, x785)
    var x819 uint64
    p512CmovznzU64(&x819, p512Uint1(x815), x804, x787)
    var x820 uint64
    p512CmovznzU64(&x820, p512Uint1(x815), x806, x789)
    var x821 uint64
    p512CmovznzU64(&x821, p512Uint1(x815), x808, x791)
    var x822 uint64
    p512CmovznzU64(&x822, p512Uint1(x815), x810, x793)
    var x823 uint64
    p512CmovznzU64(&x823, p512Uint1(x815), x812, x795)
    out1[0] = x816
    out1[1] = x817
    out1[2] = x818
    out1[3] = x819
    out1[4] = x820
    out1[5] = x821
    out1[6] = x822
    out1[7] = x823
}

// p512Add adds two field elements in the Montgomery domain.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//	0 ≤ eval arg2 < m
//
// Postconditions:
//
//	eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
//	0 ≤ eval out1 < m
func p512Add(out1 *p512MontgomeryDomainFieldElement, arg1 *p512MontgomeryDomainFieldElement, arg2 *p512MontgomeryDomainFieldElement) {
    var x1 uint64
    var x2 uint64
    x1, x2 = bits.Add64(arg1[0], arg2[0], uint64(0x0))
    var x3 uint64
    var x4 uint64
    x3, x4 = bits.Add64(arg1[1], arg2[1], uint64(p512Uint1(x2)))
    var x5 uint64
    var x6 uint64
    x5, x6 = bits.Add64(arg1[2], arg2[2], uint64(p512Uint1(x4)))
    var x7 uint64
    var x8 uint64
    x7, x8 = bits.Add64(arg1[3], arg2[3], uint64(p512Uint1(x6)))
    var x9 uint64
    var x10 uint64
    x9, x10 = bits.Add64(arg1[4], arg2[4], uint64(p512Uint1(x8)))
    var x11 uint64
    var x12 uint64
    x11, x12 = bits.Add64(arg1[5], arg2[5], uint64(p512Uint1(x10)))
    var x13 uint64
    var x14 uint64
    x13, x14 = bits.Add64(arg1[6], arg2[6], uint64(p512Uint1(x12)))
    var x15 uint64
    var x16 uint64
    x15, x16 = bits.Add64(arg1[7], arg2[7], uint64(p512Uint1(x14)))
    var x17 uint64
    var x18 uint64
    x17, x18 = bits.Sub64(x1, 0xfffffffffffffdc7, uint64(0x0))
    var x19 uint64
    var x20 uint64
    x19, x20 = bits.Sub64(x3, 0xffffffffffffffff, uint64(p512Uint1(x18)))
    var x21 uint64
    var x22 uint64
    x21, x22 = bits.Sub64(x5, 0xffffffffffffffff, uint64(p512Uint1(x20)))
    var x23 uint64
    var x24 uint64
    x23, x24 = bits.Sub64(x7, 0xffffffffffffffff, uint64(p512Uint1(x22)))
    var x25 uint64
    var x26 uint64
    x25, x26 = bits.Sub64(x9, 0xffffffffffffffff, uint64(p512Uint1(x24)))
    var x27 uint64
    var x28 uint64
    x27, x28 = bits.Sub64(x11, 0xffffffffffffffff, uint64(p512Uint1(x26)))
    var x29 uint64
    var x30 uint64
    x29, x30 = bits.Sub64(x13, 0xffffffffffffffff, uint64(p512Uint1(x28)))
    var x31 uint64
    var x32 uint64
    x31, x32 = bits.Sub64(x15, 0xffffffffffffffff, uint64(p512Uint1(x30)))
    var x34 uint64
    _, x34 = bits.Sub64(uint64(p512Uint1(x16)), uint64(0x0), uint64(p512Uint1(x32)))
    var x35 uint64
    p512CmovznzU64(&x35, p512Uint1(x34), x17, x1)
    var x36 uint64
    p512CmovznzU64(&x36, p512Uint1(x34), x19, x3)
    var x37 uint64
    p512CmovznzU64(&x37, p512Uint1(x34), x21, x5)
    var x38 uint64
    p512CmovznzU64(&x38, p512Uint1(x34), x23, x7)
    var x39 uint64
    p512CmovznzU64(&x39, p512Uint1(x34), x25, x9)
    var x40 uint64
    p512CmovznzU64(&x40, p512Uint1(x34), x27, x11)
    var x41 uint64
    p512CmovznzU64(&x41, p512Uint1(x34), x29, x13)
    var x42 uint64
    p512CmovznzU64(&x42, p512Uint1(x34), x31, x15)
    out1[0] = x35
    out1[1] = x36
    out1[2] = x37
    out1[3] = x38
    out1[4] = x39
    out1[5] = x40
    out1[6] = x41
    out1[7] = x42
}

// p512Sub subtracts two field elements in the Montgomery domain.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//	0 ≤ eval arg2 < m
//
// Postconditions:
//
//	eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
//	0 ≤ eval out1 < m
func p512Sub(out1 *p512MontgomeryDomainFieldElement, arg1 *p512MontgomeryDomainFieldElement, arg2 *p512MontgomeryDomainFieldElement) {
    var x1 uint64
    var x2 uint64
    x1, x2 = bits.Sub64(arg1[0], arg2[0], uint64(0x0))
    var x3 uint64
    var x4 uint64
    x3, x4 = bits.Sub64(arg1[1], arg2[1], uint64(p512Uint1(x2)))
    var x5 uint64
    var x6 uint64
    x5, x6 = bits.Sub64(arg1[2], arg2[2], uint64(p512Uint1(x4)))
    var x7 uint64
    var x8 uint64
    x7, x8 = bits.Sub64(arg1[3], arg2[3], uint64(p512Uint1(x6)))
    var x9 uint64
    var x10 uint64
    x9, x10 = bits.Sub64(arg1[4], arg2[4], uint64(p512Uint1(x8)))
    var x11 uint64
    var x12 uint64
    x11, x12 = bits.Sub64(arg1[5], arg2[5], uint64(p512Uint1(x10)))
    var x13 uint64
    var x14 uint64
    x13, x14 = bits.Sub64(arg1[6], arg2[6], uint64(p512Uint1(x12)))
    var x15 uint64
    var x16 uint64
    x15, x16 = bits.Sub64(arg1[7], arg2[7], uint64(p512Uint1(x14)))
    var x17 uint64
    p512CmovznzU64(&x17, p512Uint1(x16), uint64(0x0), 0xffffffffffffffff)
    var x18 uint64
    var x19 uint64
    x18, x19 = bits.Add64(x1, (x17 & 0xfffffffffffffdc7), uint64(0x0))
    var x20 uint64
    var x21 uint64
    x20, x21 = bits.Add64(x3, x17, uint64(p512Uint1(x19)))
    var x22 uint64
    var x23 uint64
    x22, x23 = bits.Add64(x5, x17, uint64(p512Uint1(x21)))
    var x24 uint64
    var x25 uint64
    x24, x25 = bits.Add64(x7, x17, uint64(p512Uint1(x23)))
    var x26 uint64
    var x27 uint64
    x26, x27 = bits.Add64(x9, x17, uint64(p512Uint1(x25)))
    var x28 uint64
    var x29 uint64
    x28, x29 = bits.Add64(x11, x17, uint64(p512Uint1(x27)))
    var x30 uint64
    var x31 uint64
    x30, x31 = bits.Add64(x13, x17, uint64(p512Uint1(x29)))
    var x32 uint64
    x32, _ = bits.Add64(x15, x17, uint64(p512Uint1(x31)))
    out1[0] = x18
    out1[1] = x20
    out1[2] = x22
    out1[3] = x24
    out1[4] = x26
    out1[5] = x28
    out1[6] = x30
    out1[7] = x32
}

// p512SetOne returns the field element one in the Montgomery domain.
//
// Postconditions:
//
//	eval (from_montgomery out1) mod m = 1 mod m
//	0 ≤ eval out1 < m
func p512SetOne(out1 *p512MontgomeryDomainFieldElement) {
    out1[0] = 0x239
    out1[1] = uint64(0x0)
    out1[2] = uint64(0x0)
    out1[3] = uint64(0x0)
    out1[4] = uint64(0x0)
    out1[5] = uint64(0x0)
    out1[6] = uint64(0x0)
    out1[7] = uint64(0x0)
}

// p512FromMontgomery translates a field element out of the Montgomery domain.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//
// Postconditions:
//
//	eval out1 mod m = (eval arg1 * ((2^64)⁻¹ mod m)^8) mod m
//	0 ≤ eval out1 < m
func p512FromMontgomery(out1 *p512NonMontgomeryDomainFieldElement, arg1 *p512MontgomeryDomainFieldElement) {
    x1 := arg1[0]
    var x2 uint64
    _, x2 = bits.Mul64(x1, 0x58a1f7e6ce0f4c09)
    var x4 uint64
    var x5 uint64
    x5, x4 = bits.Mul64(x2, 0xffffffffffffffff)
    var x6 uint64
    var x7 uint64
    x7, x6 = bits.Mul64(x2, 0xffffffffffffffff)
    var x8 uint64
    var x9 uint64
    x9, x8 = bits.Mul64(x2, 0xffffffffffffffff)
    var x10 uint64
    var x11 uint64
    x11, x10 = bits.Mul64(x2, 0xffffffffffffffff)
    var x12 uint64
    var x13 uint64
    x13, x12 = bits.Mul64(x2, 0xffffffffffffffff)
    var x14 uint64
    var x15 uint64
    x15, x14 = bits.Mul64(x2, 0xffffffffffffffff)
    var x16 uint64
    var x17 uint64
    x17, x16 = bits.Mul64(x2, 0xffffffffffffffff)
    var x18 uint64
    var x19 uint64
    x19, x18 = bits.Mul64(x2, 0xfffffffffffffdc7)
    var x20 uint64
    var x21 uint64
    x20, x21 = bits.Add64(x19, x16, uint64(0x0))
    var x22 uint64
    var x23 uint64
    x22, x23 = bits.Add64(x17, x14, uint64(p512Uint1(x21)))
    var x24 uint64
    var x25 uint64
    x24, x25 = bits.Add64(x15, x12, uint64(p512Uint1(x23)))
    var x26 uint64
    var x27 uint64
    x26, x27 = bits.Add64(x13, x10, uint64(p512Uint1(x25)))
    var x28 uint64
    var x29 uint64
    x28, x29 = bits.Add64(x11, x8, uint64(p512Uint1(x27)))
    var x30 uint64
    var x31 uint64
    x30, x31 = bits.Add64(x9, x6, uint64(p512Uint1(x29)))
    var x32 uint64
    var x33 uint64
    x32, x33 = bits.Add64(x7, x4, uint64(p512Uint1(x31)))
    var x35 uint64
    _, x35 = bits.Add64(x1, x18, uint64(0x0))
    var x36 uint64
    var x37 uint64
    x36, x37 = bits.Add64(uint64(0x0), x20, uint64(p512Uint1(x35)))
    var x38 uint64
    var x39 uint64
    x38, x39 = bits.Add64(uint64(0x0), x22, uint64(p512Uint1(x37)))
    var x40 uint64
    var x41 uint64
    x40, x41 = bits.Add64(uint64(0x0), x24, uint64(p512Uint1(x39)))
    var x42 uint64
    var x43 uint64
    x42, x43 = bits.Add64(uint64(0x0), x26, uint64(p512Uint1(x41)))
    var x44 uint64
    var x45 uint64
    x44, x45 = bits.Add64(uint64(0x0), x28, uint64(p512Uint1(x43)))
    var x46 uint64
    var x47 uint64
    x46, x47 = bits.Add64(uint64(0x0), x30, uint64(p512Uint1(x45)))
    var x48 uint64
    var x49 uint64
    x48, x49 = bits.Add64(uint64(0x0), x32, uint64(p512Uint1(x47)))
    var x50 uint64
    var x51 uint64
    x50, x51 = bits.Add64(uint64(0x0), (uint64(p512Uint1(x33)) + x5), uint64(p512Uint1(x49)))
    var x52 uint64
    var x53 uint64
    x52, x53 = bits.Add64(x36, arg1[1], uint64(0x0))
    var x54 uint64
    var x55 uint64
    x54, x55 = bits.Add64(x38, uint64(0x0), uint64(p512Uint1(x53)))
    var x56 uint64
    var x57 uint64
    x56, x57 = bits.Add64(x40, uint64(0x0), uint64(p512Uint1(x55)))
    var x58 uint64
    var x59 uint64
    x58, x59 = bits.Add64(x42, uint64(0x0), uint64(p512Uint1(x57)))
    var x60 uint64
    var x61 uint64
    x60, x61 = bits.Add64(x44, uint64(0x0), uint64(p512Uint1(x59)))
    var x62 uint64
    var x63 uint64
    x62, x63 = bits.Add64(x46, uint64(0x0), uint64(p512Uint1(x61)))
    var x64 uint64
    var x65 uint64
    x64, x65 = bits.Add64(x48, uint64(0x0), uint64(p512Uint1(x63)))
    var x66 uint64
    var x67 uint64
    x66, x67 = bits.Add64(x50, uint64(0x0), uint64(p512Uint1(x65)))
    var x68 uint64
    _, x68 = bits.Mul64(x52, 0x58a1f7e6ce0f4c09)
    var x70 uint64
    var x71 uint64
    x71, x70 = bits.Mul64(x68, 0xffffffffffffffff)
    var x72 uint64
    var x73 uint64
    x73, x72 = bits.Mul64(x68, 0xffffffffffffffff)
    var x74 uint64
    var x75 uint64
    x75, x74 = bits.Mul64(x68, 0xffffffffffffffff)
    var x76 uint64
    var x77 uint64
    x77, x76 = bits.Mul64(x68, 0xffffffffffffffff)
    var x78 uint64
    var x79 uint64
    x79, x78 = bits.Mul64(x68, 0xffffffffffffffff)
    var x80 uint64
    var x81 uint64
    x81, x80 = bits.Mul64(x68, 0xffffffffffffffff)
    var x82 uint64
    var x83 uint64
    x83, x82 = bits.Mul64(x68, 0xffffffffffffffff)
    var x84 uint64
    var x85 uint64
    x85, x84 = bits.Mul64(x68, 0xfffffffffffffdc7)
    var x86 uint64
    var x87 uint64
    x86, x87 = bits.Add64(x85, x82, uint64(0x0))
    var x88 uint64
    var x89 uint64
    x88, x89 = bits.Add64(x83, x80, uint64(p512Uint1(x87)))
    var x90 uint64
    var x91 uint64
    x90, x91 = bits.Add64(x81, x78, uint64(p512Uint1(x89)))
    var x92 uint64
    var x93 uint64
    x92, x93 = bits.Add64(x79, x76, uint64(p512Uint1(x91)))
    var x94 uint64
    var x95 uint64
    x94, x95 = bits.Add64(x77, x74, uint64(p512Uint1(x93)))
    var x96 uint64
    var x97 uint64
    x96, x97 = bits.Add64(x75, x72, uint64(p512Uint1(x95)))
    var x98 uint64
    var x99 uint64
    x98, x99 = bits.Add64(x73, x70, uint64(p512Uint1(x97)))
    var x101 uint64
    _, x101 = bits.Add64(x52, x84, uint64(0x0))
    var x102 uint64
    var x103 uint64
    x102, x103 = bits.Add64(x54, x86, uint64(p512Uint1(x101)))
    var x104 uint64
    var x105 uint64
    x104, x105 = bits.Add64(x56, x88, uint64(p512Uint1(x103)))
    var x106 uint64
    var x107 uint64
    x106, x107 = bits.Add64(x58, x90, uint64(p512Uint1(x105)))
    var x108 uint64
    var x109 uint64
    x108, x109 = bits.Add64(x60, x92, uint64(p512Uint1(x107)))
    var x110 uint64
    var x111 uint64
    x110, x111 = bits.Add64(x62, x94, uint64(p512Uint1(x109)))
    var x112 uint64
    var x113 uint64
    x112, x113 = bits.Add64(x64, x96, uint64(p512Uint1(x111)))
    var x114 uint64
    var x115 uint64
    x114, x115 = bits.Add64(x66, x98, uint64(p512Uint1(x113)))
    var x116 uint64
    var x117 uint64
    x116, x117 = bits.Add64((uint64(p512Uint1(x67)) + uint64(p512Uint1(x51))), (uint64(p512Uint1(x99)) + x71), uint64(p512Uint1(x115)))
    var x118 uint64
    var x119 uint64
    x118, x119 = bits.Add64(x102, arg1[2], uint64(0x0))
    var x120 uint64
    var x121 uint64
    x120, x121 = bits.Add64(x104, uint64(0x0), uint64(p512Uint1(x119)))
    var x122 uint64
    var x123 uint64
    x122, x123 = bits.Add64(x106, uint64(0x0), uint64(p512Uint1(x121)))
    var x124 uint64
    var x125 uint64
    x124, x125 = bits.Add64(x108, uint64(0x0), uint64(p512Uint1(x123)))
    var x126 uint64
    var x127 uint64
    x126, x127 = bits.Add64(x110, uint64(0x0), uint64(p512Uint1(x125)))
    var x128 uint64
    var x129 uint64
    x128, x129 = bits.Add64(x112, uint64(0x0), uint64(p512Uint1(x127)))
    var x130 uint64
    var x131 uint64
    x130, x131 = bits.Add64(x114, uint64(0x0), uint64(p512Uint1(x129)))
    var x132 uint64
    var x133 uint64
    x132, x133 = bits.Add64(x116, uint64(0x0), uint64(p512Uint1(x131)))
    var x134 uint64
    _, x134 = bits.Mul64(x118, 0x58a1f7e6ce0f4c09)
    var x136 uint64
    var x137 uint64
    x137, x136 = bits.Mul64(x134, 0xffffffffffffffff)
    var x138 uint64
    var x139 uint64
    x139, x138 = bits.Mul64(x134, 0xffffffffffffffff)
    var x140 uint64
    var x141 uint64
    x141, x140 = bits.Mul64(x134, 0xffffffffffffffff)
    var x142 uint64
    var x143 uint64
    x143, x142 = bits.Mul64(x134, 0xffffffffffffffff)
    var x144 uint64
    var x145 uint64
    x145, x144 = bits.Mul64(x134, 0xffffffffffffffff)
    var x146 uint64
    var x147 uint64
    x147, x146 = bits.Mul64(x134, 0xffffffffffffffff)
    var x148 uint64
    var x149 uint64
    x149, x148 = bits.Mul64(x134, 0xffffffffffffffff)
    var x150 uint64
    var x151 uint64
    x151, x150 = bits.Mul64(x134, 0xfffffffffffffdc7)
    var x152 uint64
    var x153 uint64
    x152, x153 = bits.Add64(x151, x148, uint64(0x0))
    var x154 uint64
    var x155 uint64
    x154, x155 = bits.Add64(x149, x146, uint64(p512Uint1(x153)))
    var x156 uint64
    var x157 uint64
    x156, x157 = bits.Add64(x147, x144, uint64(p512Uint1(x155)))
    var x158 uint64
    var x159 uint64
    x158, x159 = bits.Add64(x145, x142, uint64(p512Uint1(x157)))
    var x160 uint64
    var x161 uint64
    x160, x161 = bits.Add64(x143, x140, uint64(p512Uint1(x159)))
    var x162 uint64
    var x163 uint64
    x162, x163 = bits.Add64(x141, x138, uint64(p512Uint1(x161)))
    var x164 uint64
    var x165 uint64
    x164, x165 = bits.Add64(x139, x136, uint64(p512Uint1(x163)))
    var x167 uint64
    _, x167 = bits.Add64(x118, x150, uint64(0x0))
    var x168 uint64
    var x169 uint64
    x168, x169 = bits.Add64(x120, x152, uint64(p512Uint1(x167)))
    var x170 uint64
    var x171 uint64
    x170, x171 = bits.Add64(x122, x154, uint64(p512Uint1(x169)))
    var x172 uint64
    var x173 uint64
    x172, x173 = bits.Add64(x124, x156, uint64(p512Uint1(x171)))
    var x174 uint64
    var x175 uint64
    x174, x175 = bits.Add64(x126, x158, uint64(p512Uint1(x173)))
    var x176 uint64
    var x177 uint64
    x176, x177 = bits.Add64(x128, x160, uint64(p512Uint1(x175)))
    var x178 uint64
    var x179 uint64
    x178, x179 = bits.Add64(x130, x162, uint64(p512Uint1(x177)))
    var x180 uint64
    var x181 uint64
    x180, x181 = bits.Add64(x132, x164, uint64(p512Uint1(x179)))
    var x182 uint64
    var x183 uint64
    x182, x183 = bits.Add64((uint64(p512Uint1(x133)) + uint64(p512Uint1(x117))), (uint64(p512Uint1(x165)) + x137), uint64(p512Uint1(x181)))
    var x184 uint64
    var x185 uint64
    x184, x185 = bits.Add64(x168, arg1[3], uint64(0x0))
    var x186 uint64
    var x187 uint64
    x186, x187 = bits.Add64(x170, uint64(0x0), uint64(p512Uint1(x185)))
    var x188 uint64
    var x189 uint64
    x188, x189 = bits.Add64(x172, uint64(0x0), uint64(p512Uint1(x187)))
    var x190 uint64
    var x191 uint64
    x190, x191 = bits.Add64(x174, uint64(0x0), uint64(p512Uint1(x189)))
    var x192 uint64
    var x193 uint64
    x192, x193 = bits.Add64(x176, uint64(0x0), uint64(p512Uint1(x191)))
    var x194 uint64
    var x195 uint64
    x194, x195 = bits.Add64(x178, uint64(0x0), uint64(p512Uint1(x193)))
    var x196 uint64
    var x197 uint64
    x196, x197 = bits.Add64(x180, uint64(0x0), uint64(p512Uint1(x195)))
    var x198 uint64
    var x199 uint64
    x198, x199 = bits.Add64(x182, uint64(0x0), uint64(p512Uint1(x197)))
    var x200 uint64
    _, x200 = bits.Mul64(x184, 0x58a1f7e6ce0f4c09)
    var x202 uint64
    var x203 uint64
    x203, x202 = bits.Mul64(x200, 0xffffffffffffffff)
    var x204 uint64
    var x205 uint64
    x205, x204 = bits.Mul64(x200, 0xffffffffffffffff)
    var x206 uint64
    var x207 uint64
    x207, x206 = bits.Mul64(x200, 0xffffffffffffffff)
    var x208 uint64
    var x209 uint64
    x209, x208 = bits.Mul64(x200, 0xffffffffffffffff)
    var x210 uint64
    var x211 uint64
    x211, x210 = bits.Mul64(x200, 0xffffffffffffffff)
    var x212 uint64
    var x213 uint64
    x213, x212 = bits.Mul64(x200, 0xffffffffffffffff)
    var x214 uint64
    var x215 uint64
    x215, x214 = bits.Mul64(x200, 0xffffffffffffffff)
    var x216 uint64
    var x217 uint64
    x217, x216 = bits.Mul64(x200, 0xfffffffffffffdc7)
    var x218 uint64
    var x219 uint64
    x218, x219 = bits.Add64(x217, x214, uint64(0x0))
    var x220 uint64
    var x221 uint64
    x220, x221 = bits.Add64(x215, x212, uint64(p512Uint1(x219)))
    var x222 uint64
    var x223 uint64
    x222, x223 = bits.Add64(x213, x210, uint64(p512Uint1(x221)))
    var x224 uint64
    var x225 uint64
    x224, x225 = bits.Add64(x211, x208, uint64(p512Uint1(x223)))
    var x226 uint64
    var x227 uint64
    x226, x227 = bits.Add64(x209, x206, uint64(p512Uint1(x225)))
    var x228 uint64
    var x229 uint64
    x228, x229 = bits.Add64(x207, x204, uint64(p512Uint1(x227)))
    var x230 uint64
    var x231 uint64
    x230, x231 = bits.Add64(x205, x202, uint64(p512Uint1(x229)))
    var x233 uint64
    _, x233 = bits.Add64(x184, x216, uint64(0x0))
    var x234 uint64
    var x235 uint64
    x234, x235 = bits.Add64(x186, x218, uint64(p512Uint1(x233)))
    var x236 uint64
    var x237 uint64
    x236, x237 = bits.Add64(x188, x220, uint64(p512Uint1(x235)))
    var x238 uint64
    var x239 uint64
    x238, x239 = bits.Add64(x190, x222, uint64(p512Uint1(x237)))
    var x240 uint64
    var x241 uint64
    x240, x241 = bits.Add64(x192, x224, uint64(p512Uint1(x239)))
    var x242 uint64
    var x243 uint64
    x242, x243 = bits.Add64(x194, x226, uint64(p512Uint1(x241)))
    var x244 uint64
    var x245 uint64
    x244, x245 = bits.Add64(x196, x228, uint64(p512Uint1(x243)))
    var x246 uint64
    var x247 uint64
    x246, x247 = bits.Add64(x198, x230, uint64(p512Uint1(x245)))
    var x248 uint64
    var x249 uint64
    x248, x249 = bits.Add64((uint64(p512Uint1(x199)) + uint64(p512Uint1(x183))), (uint64(p512Uint1(x231)) + x203), uint64(p512Uint1(x247)))
    var x250 uint64
    var x251 uint64
    x250, x251 = bits.Add64(x234, arg1[4], uint64(0x0))
    var x252 uint64
    var x253 uint64
    x252, x253 = bits.Add64(x236, uint64(0x0), uint64(p512Uint1(x251)))
    var x254 uint64
    var x255 uint64
    x254, x255 = bits.Add64(x238, uint64(0x0), uint64(p512Uint1(x253)))
    var x256 uint64
    var x257 uint64
    x256, x257 = bits.Add64(x240, uint64(0x0), uint64(p512Uint1(x255)))
    var x258 uint64
    var x259 uint64
    x258, x259 = bits.Add64(x242, uint64(0x0), uint64(p512Uint1(x257)))
    var x260 uint64
    var x261 uint64
    x260, x261 = bits.Add64(x244, uint64(0x0), uint64(p512Uint1(x259)))
    var x262 uint64
    var x263 uint64
    x262, x263 = bits.Add64(x246, uint64(0x0), uint64(p512Uint1(x261)))
    var x264 uint64
    var x265 uint64
    x264, x265 = bits.Add64(x248, uint64(0x0), uint64(p512Uint1(x263)))
    var x266 uint64
    _, x266 = bits.Mul64(x250, 0x58a1f7e6ce0f4c09)
    var x268 uint64
    var x269 uint64
    x269, x268 = bits.Mul64(x266, 0xffffffffffffffff)
    var x270 uint64
    var x271 uint64
    x271, x270 = bits.Mul64(x266, 0xffffffffffffffff)
    var x272 uint64
    var x273 uint64
    x273, x272 = bits.Mul64(x266, 0xffffffffffffffff)
    var x274 uint64
    var x275 uint64
    x275, x274 = bits.Mul64(x266, 0xffffffffffffffff)
    var x276 uint64
    var x277 uint64
    x277, x276 = bits.Mul64(x266, 0xffffffffffffffff)
    var x278 uint64
    var x279 uint64
    x279, x278 = bits.Mul64(x266, 0xffffffffffffffff)
    var x280 uint64
    var x281 uint64
    x281, x280 = bits.Mul64(x266, 0xffffffffffffffff)
    var x282 uint64
    var x283 uint64
    x283, x282 = bits.Mul64(x266, 0xfffffffffffffdc7)
    var x284 uint64
    var x285 uint64
    x284, x285 = bits.Add64(x283, x280, uint64(0x0))
    var x286 uint64
    var x287 uint64
    x286, x287 = bits.Add64(x281, x278, uint64(p512Uint1(x285)))
    var x288 uint64
    var x289 uint64
    x288, x289 = bits.Add64(x279, x276, uint64(p512Uint1(x287)))
    var x290 uint64
    var x291 uint64
    x290, x291 = bits.Add64(x277, x274, uint64(p512Uint1(x289)))
    var x292 uint64
    var x293 uint64
    x292, x293 = bits.Add64(x275, x272, uint64(p512Uint1(x291)))
    var x294 uint64
    var x295 uint64
    x294, x295 = bits.Add64(x273, x270, uint64(p512Uint1(x293)))
    var x296 uint64
    var x297 uint64
    x296, x297 = bits.Add64(x271, x268, uint64(p512Uint1(x295)))
    var x299 uint64
    _, x299 = bits.Add64(x250, x282, uint64(0x0))
    var x300 uint64
    var x301 uint64
    x300, x301 = bits.Add64(x252, x284, uint64(p512Uint1(x299)))
    var x302 uint64
    var x303 uint64
    x302, x303 = bits.Add64(x254, x286, uint64(p512Uint1(x301)))
    var x304 uint64
    var x305 uint64
    x304, x305 = bits.Add64(x256, x288, uint64(p512Uint1(x303)))
    var x306 uint64
    var x307 uint64
    x306, x307 = bits.Add64(x258, x290, uint64(p512Uint1(x305)))
    var x308 uint64
    var x309 uint64
    x308, x309 = bits.Add64(x260, x292, uint64(p512Uint1(x307)))
    var x310 uint64
    var x311 uint64
    x310, x311 = bits.Add64(x262, x294, uint64(p512Uint1(x309)))
    var x312 uint64
    var x313 uint64
    x312, x313 = bits.Add64(x264, x296, uint64(p512Uint1(x311)))
    var x314 uint64
    var x315 uint64
    x314, x315 = bits.Add64((uint64(p512Uint1(x265)) + uint64(p512Uint1(x249))), (uint64(p512Uint1(x297)) + x269), uint64(p512Uint1(x313)))
    var x316 uint64
    var x317 uint64
    x316, x317 = bits.Add64(x300, arg1[5], uint64(0x0))
    var x318 uint64
    var x319 uint64
    x318, x319 = bits.Add64(x302, uint64(0x0), uint64(p512Uint1(x317)))
    var x320 uint64
    var x321 uint64
    x320, x321 = bits.Add64(x304, uint64(0x0), uint64(p512Uint1(x319)))
    var x322 uint64
    var x323 uint64
    x322, x323 = bits.Add64(x306, uint64(0x0), uint64(p512Uint1(x321)))
    var x324 uint64
    var x325 uint64
    x324, x325 = bits.Add64(x308, uint64(0x0), uint64(p512Uint1(x323)))
    var x326 uint64
    var x327 uint64
    x326, x327 = bits.Add64(x310, uint64(0x0), uint64(p512Uint1(x325)))
    var x328 uint64
    var x329 uint64
    x328, x329 = bits.Add64(x312, uint64(0x0), uint64(p512Uint1(x327)))
    var x330 uint64
    var x331 uint64
    x330, x331 = bits.Add64(x314, uint64(0x0), uint64(p512Uint1(x329)))
    var x332 uint64
    _, x332 = bits.Mul64(x316, 0x58a1f7e6ce0f4c09)
    var x334 uint64
    var x335 uint64
    x335, x334 = bits.Mul64(x332, 0xffffffffffffffff)
    var x336 uint64
    var x337 uint64
    x337, x336 = bits.Mul64(x332, 0xffffffffffffffff)
    var x338 uint64
    var x339 uint64
    x339, x338 = bits.Mul64(x332, 0xffffffffffffffff)
    var x340 uint64
    var x341 uint64
    x341, x340 = bits.Mul64(x332, 0xffffffffffffffff)
    var x342 uint64
    var x343 uint64
    x343, x342 = bits.Mul64(x332, 0xffffffffffffffff)
    var x344 uint64
    var x345 uint64
    x345, x344 = bits.Mul64(x332, 0xffffffffffffffff)
    var x346 uint64
    var x347 uint64
    x347, x346 = bits.Mul64(x332, 0xffffffffffffffff)
    var x348 uint64
    var x349 uint64
    x349, x348 = bits.Mul64(x332, 0xfffffffffffffdc7)
    var x350 uint64
    var x351 uint64
    x350, x351 = bits.Add64(x349, x346, uint64(0x0))
    var x352 uint64
    var x353 uint64
    x352, x353 = bits.Add64(x347, x344, uint64(p512Uint1(x351)))
    var x354 uint64
    var x355 uint64
    x354, x355 = bits.Add64(x345, x342, uint64(p512Uint1(x353)))
    var x356 uint64
    var x357 uint64
    x356, x357 = bits.Add64(x343, x340, uint64(p512Uint1(x355)))
    var x358 uint64
    var x359 uint64
    x358, x359 = bits.Add64(x341, x338, uint64(p512Uint1(x357)))
    var x360 uint64
    var x361 uint64
    x360, x361 = bits.Add64(x339, x336, uint64(p512Uint1(x359)))
    var x362 uint64
    var x363 uint64
    x362, x363 = bits.Add64(x337, x334, uint64(p512Uint1(x361)))
    var x365 uint64
    _, x365 = bits.Add64(x316, x348, uint64(0x0))
    var x366 uint64
    var x367 uint64
    x366, x367 = bits.Add64(x318, x350, uint64(p512Uint1(x365)))
    var x368 uint64
    var x369 uint64
    x368, x369 = bits.Add64(x320, x352, uint64(p512Uint1(x367)))
    var x370 uint64
    var x371 uint64
    x370, x371 = bits.Add64(x322, x354, uint64(p512Uint1(x369)))
    var x372 uint64
    var x373 uint64
    x372, x373 = bits.Add64(x324, x356, uint64(p512Uint1(x371)))
    var x374 uint64
    var x375 uint64
    x374, x375 = bits.Add64(x326, x358, uint64(p512Uint1(x373)))
    var x376 uint64
    var x377 uint64
    x376, x377 = bits.Add64(x328, x360, uint64(p512Uint1(x375)))
    var x378 uint64
    var x379 uint64
    x378, x379 = bits.Add64(x330, x362, uint64(p512Uint1(x377)))
    var x380 uint64
    var x381 uint64
    x380, x381 = bits.Add64((uint64(p512Uint1(x331)) + uint64(p512Uint1(x315))), (uint64(p512Uint1(x363)) + x335), uint64(p512Uint1(x379)))
    var x382 uint64
    var x383 uint64
    x382, x383 = bits.Add64(x366, arg1[6], uint64(0x0))
    var x384 uint64
    var x385 uint64
    x384, x385 = bits.Add64(x368, uint64(0x0), uint64(p512Uint1(x383)))
    var x386 uint64
    var x387 uint64
    x386, x387 = bits.Add64(x370, uint64(0x0), uint64(p512Uint1(x385)))
    var x388 uint64
    var x389 uint64
    x388, x389 = bits.Add64(x372, uint64(0x0), uint64(p512Uint1(x387)))
    var x390 uint64
    var x391 uint64
    x390, x391 = bits.Add64(x374, uint64(0x0), uint64(p512Uint1(x389)))
    var x392 uint64
    var x393 uint64
    x392, x393 = bits.Add64(x376, uint64(0x0), uint64(p512Uint1(x391)))
    var x394 uint64
    var x395 uint64
    x394, x395 = bits.Add64(x378, uint64(0x0), uint64(p512Uint1(x393)))
    var x396 uint64
    var x397 uint64
    x396, x397 = bits.Add64(x380, uint64(0x0), uint64(p512Uint1(x395)))
    var x398 uint64
    _, x398 = bits.Mul64(x382, 0x58a1f7e6ce0f4c09)
    var x400 uint64
    var x401 uint64
    x401, x400 = bits.Mul64(x398, 0xffffffffffffffff)
    var x402 uint64
    var x403 uint64
    x403, x402 = bits.Mul64(x398, 0xffffffffffffffff)
    var x404 uint64
    var x405 uint64
    x405, x404 = bits.Mul64(x398, 0xffffffffffffffff)
    var x406 uint64
    var x407 uint64
    x407, x406 = bits.Mul64(x398, 0xffffffffffffffff)
    var x408 uint64
    var x409 uint64
    x409, x408 = bits.Mul64(x398, 0xffffffffffffffff)
    var x410 uint64
    var x411 uint64
    x411, x410 = bits.Mul64(x398, 0xffffffffffffffff)
    var x412 uint64
    var x413 uint64
    x413, x412 = bits.Mul64(x398, 0xffffffffffffffff)
    var x414 uint64
    var x415 uint64
    x415, x414 = bits.Mul64(x398, 0xfffffffffffffdc7)
    var x416 uint64
    var x417 uint64
    x416, x417 = bits.Add64(x415, x412, uint64(0x0))
    var x418 uint64
    var x419 uint64
    x418, x419 = bits.Add64(x413, x410, uint64(p512Uint1(x417)))
    var x420 uint64
    var x421 uint64
    x420, x421 = bits.Add64(x411, x408, uint64(p512Uint1(x419)))
    var x422 uint64
    var x423 uint64
    x422, x423 = bits.Add64(x409, x406, uint64(p512Uint1(x421)))
    var x424 uint64
    var x425 uint64
    x424, x425 = bits.Add64(x407, x404, uint64(p512Uint1(x423)))
    var x426 uint64
    var x427 uint64
    x426, x427 = bits.Add64(x405, x402, uint64(p512Uint1(x425)))
    var x428 uint64
    var x429 uint64
    x428, x429 = bits.Add64(x403, x400, uint64(p512Uint1(x427)))
    var x431 uint64
    _, x431 = bits.Add64(x382, x414, uint64(0x0))
    var x432 uint64
    var x433 uint64
    x432, x433 = bits.Add64(x384, x416, uint64(p512Uint1(x431)))
    var x434 uint64
    var x435 uint64
    x434, x435 = bits.Add64(x386, x418, uint64(p512Uint1(x433)))
    var x436 uint64
    var x437 uint64
    x436, x437 = bits.Add64(x388, x420, uint64(p512Uint1(x435)))
    var x438 uint64
    var x439 uint64
    x438, x439 = bits.Add64(x390, x422, uint64(p512Uint1(x437)))
    var x440 uint64
    var x441 uint64
    x440, x441 = bits.Add64(x392, x424, uint64(p512Uint1(x439)))
    var x442 uint64
    var x443 uint64
    x442, x443 = bits.Add64(x394, x426, uint64(p512Uint1(x441)))
    var x444 uint64
    var x445 uint64
    x444, x445 = bits.Add64(x396, x428, uint64(p512Uint1(x443)))
    var x446 uint64
    var x447 uint64
    x446, x447 = bits.Add64((uint64(p512Uint1(x397)) + uint64(p512Uint1(x381))), (uint64(p512Uint1(x429)) + x401), uint64(p512Uint1(x445)))
    var x448 uint64
    var x449 uint64
    x448, x449 = bits.Add64(x432, arg1[7], uint64(0x0))
    var x450 uint64
    var x451 uint64
    x450, x451 = bits.Add64(x434, uint64(0x0), uint64(p512Uint1(x449)))
    var x452 uint64
    var x453 uint64
    x452, x453 = bits.Add64(x436, uint64(0x0), uint64(p512Uint1(x451)))
    var x454 uint64
    var x455 uint64
    x454, x455 = bits.Add64(x438, uint64(0x0), uint64(p512Uint1(x453)))
    var x456 uint64
    var x457 uint64
    x456, x457 = bits.Add64(x440, uint64(0x0), uint64(p512Uint1(x455)))
    var x458 uint64
    var x459 uint64
    x458, x459 = bits.Add64(x442, uint64(0x0), uint64(p512Uint1(x457)))
    var x460 uint64
    var x461 uint64
    x460, x461 = bits.Add64(x444, uint64(0x0), uint64(p512Uint1(x459)))
    var x462 uint64
    var x463 uint64
    x462, x463 = bits.Add64(x446, uint64(0x0), uint64(p512Uint1(x461)))
    var x464 uint64
    _, x464 = bits.Mul64(x448, 0x58a1f7e6ce0f4c09)
    var x466 uint64
    var x467 uint64
    x467, x466 = bits.Mul64(x464, 0xffffffffffffffff)
    var x468 uint64
    var x469 uint64
    x469, x468 = bits.Mul64(x464, 0xffffffffffffffff)
    var x470 uint64
    var x471 uint64
    x471, x470 = bits.Mul64(x464, 0xffffffffffffffff)
    var x472 uint64
    var x473 uint64
    x473, x472 = bits.Mul64(x464, 0xffffffffffffffff)
    var x474 uint64
    var x475 uint64
    x475, x474 = bits.Mul64(x464, 0xffffffffffffffff)
    var x476 uint64
    var x477 uint64
    x477, x476 = bits.Mul64(x464, 0xffffffffffffffff)
    var x478 uint64
    var x479 uint64
    x479, x478 = bits.Mul64(x464, 0xffffffffffffffff)
    var x480 uint64
    var x481 uint64
    x481, x480 = bits.Mul64(x464, 0xfffffffffffffdc7)
    var x482 uint64
    var x483 uint64
    x482, x483 = bits.Add64(x481, x478, uint64(0x0))
    var x484 uint64
    var x485 uint64
    x484, x485 = bits.Add64(x479, x476, uint64(p512Uint1(x483)))
    var x486 uint64
    var x487 uint64
    x486, x487 = bits.Add64(x477, x474, uint64(p512Uint1(x485)))
    var x488 uint64
    var x489 uint64
    x488, x489 = bits.Add64(x475, x472, uint64(p512Uint1(x487)))
    var x490 uint64
    var x491 uint64
    x490, x491 = bits.Add64(x473, x470, uint64(p512Uint1(x489)))
    var x492 uint64
    var x493 uint64
    x492, x493 = bits.Add64(x471, x468, uint64(p512Uint1(x491)))
    var x494 uint64
    var x495 uint64
    x494, x495 = bits.Add64(x469, x466, uint64(p512Uint1(x493)))
    var x497 uint64
    _, x497 = bits.Add64(x448, x480, uint64(0x0))
    var x498 uint64
    var x499 uint64
    x498, x499 = bits.Add64(x450, x482, uint64(p512Uint1(x497)))
    var x500 uint64
    var x501 uint64
    x500, x501 = bits.Add64(x452, x484, uint64(p512Uint1(x499)))
    var x502 uint64
    var x503 uint64
    x502, x503 = bits.Add64(x454, x486, uint64(p512Uint1(x501)))
    var x504 uint64
    var x505 uint64
    x504, x505 = bits.Add64(x456, x488, uint64(p512Uint1(x503)))
    var x506 uint64
    var x507 uint64
    x506, x507 = bits.Add64(x458, x490, uint64(p512Uint1(x505)))
    var x508 uint64
    var x509 uint64
    x508, x509 = bits.Add64(x460, x492, uint64(p512Uint1(x507)))
    var x510 uint64
    var x511 uint64
    x510, x511 = bits.Add64(x462, x494, uint64(p512Uint1(x509)))
    var x512 uint64
    var x513 uint64
    x512, x513 = bits.Add64((uint64(p512Uint1(x463)) + uint64(p512Uint1(x447))), (uint64(p512Uint1(x495)) + x467), uint64(p512Uint1(x511)))
    var x514 uint64
    var x515 uint64
    x514, x515 = bits.Sub64(x498, 0xfffffffffffffdc7, uint64(0x0))
    var x516 uint64
    var x517 uint64
    x516, x517 = bits.Sub64(x500, 0xffffffffffffffff, uint64(p512Uint1(x515)))
    var x518 uint64
    var x519 uint64
    x518, x519 = bits.Sub64(x502, 0xffffffffffffffff, uint64(p512Uint1(x517)))
    var x520 uint64
    var x521 uint64
    x520, x521 = bits.Sub64(x504, 0xffffffffffffffff, uint64(p512Uint1(x519)))
    var x522 uint64
    var x523 uint64
    x522, x523 = bits.Sub64(x506, 0xffffffffffffffff, uint64(p512Uint1(x521)))
    var x524 uint64
    var x525 uint64
    x524, x525 = bits.Sub64(x508, 0xffffffffffffffff, uint64(p512Uint1(x523)))
    var x526 uint64
    var x527 uint64
    x526, x527 = bits.Sub64(x510, 0xffffffffffffffff, uint64(p512Uint1(x525)))
    var x528 uint64
    var x529 uint64
    x528, x529 = bits.Sub64(x512, 0xffffffffffffffff, uint64(p512Uint1(x527)))
    var x531 uint64
    _, x531 = bits.Sub64(uint64(p512Uint1(x513)), uint64(0x0), uint64(p512Uint1(x529)))
    var x532 uint64
    p512CmovznzU64(&x532, p512Uint1(x531), x514, x498)
    var x533 uint64
    p512CmovznzU64(&x533, p512Uint1(x531), x516, x500)
    var x534 uint64
    p512CmovznzU64(&x534, p512Uint1(x531), x518, x502)
    var x535 uint64
    p512CmovznzU64(&x535, p512Uint1(x531), x520, x504)
    var x536 uint64
    p512CmovznzU64(&x536, p512Uint1(x531), x522, x506)
    var x537 uint64
    p512CmovznzU64(&x537, p512Uint1(x531), x524, x508)
    var x538 uint64
    p512CmovznzU64(&x538, p512Uint1(x531), x526, x510)
    var x539 uint64
    p512CmovznzU64(&x539, p512Uint1(x531), x528, x512)
    out1[0] = x532
    out1[1] = x533
    out1[2] = x534
    out1[3] = x535
    out1[4] = x536
    out1[5] = x537
    out1[6] = x538
    out1[7] = x539
}

// p512ToMontgomery translates a field element into the Montgomery domain.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//
// Postconditions:
//
//	eval (from_montgomery out1) mod m = eval arg1 mod m
//	0 ≤ eval out1 < m
func p512ToMontgomery(out1 *p512MontgomeryDomainFieldElement, arg1 *p512NonMontgomeryDomainFieldElement) {
    var x1 uint64
    var x2 uint64
    x2, x1 = bits.Mul64(arg1[0], 0x4f0b1)
    var x3 uint64
    _, x3 = bits.Mul64(x1, 0x58a1f7e6ce0f4c09)
    var x5 uint64
    var x6 uint64
    x6, x5 = bits.Mul64(x3, 0xffffffffffffffff)
    var x7 uint64
    var x8 uint64
    x8, x7 = bits.Mul64(x3, 0xffffffffffffffff)
    var x9 uint64
    var x10 uint64
    x10, x9 = bits.Mul64(x3, 0xffffffffffffffff)
    var x11 uint64
    var x12 uint64
    x12, x11 = bits.Mul64(x3, 0xffffffffffffffff)
    var x13 uint64
    var x14 uint64
    x14, x13 = bits.Mul64(x3, 0xffffffffffffffff)
    var x15 uint64
    var x16 uint64
    x16, x15 = bits.Mul64(x3, 0xffffffffffffffff)
    var x17 uint64
    var x18 uint64
    x18, x17 = bits.Mul64(x3, 0xffffffffffffffff)
    var x19 uint64
    var x20 uint64
    x20, x19 = bits.Mul64(x3, 0xfffffffffffffdc7)
    var x21 uint64
    var x22 uint64
    x21, x22 = bits.Add64(x20, x17, uint64(0x0))
    var x23 uint64
    var x24 uint64
    x23, x24 = bits.Add64(x18, x15, uint64(p512Uint1(x22)))
    var x25 uint64
    var x26 uint64
    x25, x26 = bits.Add64(x16, x13, uint64(p512Uint1(x24)))
    var x27 uint64
    var x28 uint64
    x27, x28 = bits.Add64(x14, x11, uint64(p512Uint1(x26)))
    var x29 uint64
    var x30 uint64
    x29, x30 = bits.Add64(x12, x9, uint64(p512Uint1(x28)))
    var x31 uint64
    var x32 uint64
    x31, x32 = bits.Add64(x10, x7, uint64(p512Uint1(x30)))
    var x33 uint64
    var x34 uint64
    x33, x34 = bits.Add64(x8, x5, uint64(p512Uint1(x32)))
    var x36 uint64
    _, x36 = bits.Add64(x1, x19, uint64(0x0))
    var x37 uint64
    var x38 uint64
    x37, x38 = bits.Add64(x2, x21, uint64(p512Uint1(x36)))
    var x39 uint64
    var x40 uint64
    x39, x40 = bits.Add64(uint64(0x0), x23, uint64(p512Uint1(x38)))
    var x41 uint64
    var x42 uint64
    x41, x42 = bits.Add64(uint64(0x0), x25, uint64(p512Uint1(x40)))
    var x43 uint64
    var x44 uint64
    x43, x44 = bits.Add64(uint64(0x0), x27, uint64(p512Uint1(x42)))
    var x45 uint64
    var x46 uint64
    x45, x46 = bits.Add64(uint64(0x0), x29, uint64(p512Uint1(x44)))
    var x47 uint64
    var x48 uint64
    x47, x48 = bits.Add64(uint64(0x0), x31, uint64(p512Uint1(x46)))
    var x49 uint64
    var x50 uint64
    x49, x50 = bits.Add64(uint64(0x0), x33, uint64(p512Uint1(x48)))
    var x51 uint64
    var x52 uint64
    x51, x52 = bits.Add64(uint64(0x0), (uint64(p512Uint1(x34)) + x6), uint64(p512Uint1(x50)))
    var x53 uint64
    var x54 uint64
    x54, x53 = bits.Mul64(arg1[1], 0x4f0b1)
    var x55 uint64
    var x56 uint64
    x55, x56 = bits.Add64(x37, x53, uint64(0x0))
    var x57 uint64
    var x58 uint64
    x57, x58 = bits.Add64(x39, x54, uint64(p512Uint1(x56)))
    var x59 uint64
    var x60 uint64
    x59, x60 = bits.Add64(x41, uint64(0x0), uint64(p512Uint1(x58)))
    var x61 uint64
    var x62 uint64
    x61, x62 = bits.Add64(x43, uint64(0x0), uint64(p512Uint1(x60)))
    var x63 uint64
    var x64 uint64
    x63, x64 = bits.Add64(x45, uint64(0x0), uint64(p512Uint1(x62)))
    var x65 uint64
    var x66 uint64
    x65, x66 = bits.Add64(x47, uint64(0x0), uint64(p512Uint1(x64)))
    var x67 uint64
    var x68 uint64
    x67, x68 = bits.Add64(x49, uint64(0x0), uint64(p512Uint1(x66)))
    var x69 uint64
    var x70 uint64
    x69, x70 = bits.Add64(x51, uint64(0x0), uint64(p512Uint1(x68)))
    var x71 uint64
    _, x71 = bits.Mul64(x55, 0x58a1f7e6ce0f4c09)
    var x73 uint64
    var x74 uint64
    x74, x73 = bits.Mul64(x71, 0xffffffffffffffff)
    var x75 uint64
    var x76 uint64
    x76, x75 = bits.Mul64(x71, 0xffffffffffffffff)
    var x77 uint64
    var x78 uint64
    x78, x77 = bits.Mul64(x71, 0xffffffffffffffff)
    var x79 uint64
    var x80 uint64
    x80, x79 = bits.Mul64(x71, 0xffffffffffffffff)
    var x81 uint64
    var x82 uint64
    x82, x81 = bits.Mul64(x71, 0xffffffffffffffff)
    var x83 uint64
    var x84 uint64
    x84, x83 = bits.Mul64(x71, 0xffffffffffffffff)
    var x85 uint64
    var x86 uint64
    x86, x85 = bits.Mul64(x71, 0xffffffffffffffff)
    var x87 uint64
    var x88 uint64
    x88, x87 = bits.Mul64(x71, 0xfffffffffffffdc7)
    var x89 uint64
    var x90 uint64
    x89, x90 = bits.Add64(x88, x85, uint64(0x0))
    var x91 uint64
    var x92 uint64
    x91, x92 = bits.Add64(x86, x83, uint64(p512Uint1(x90)))
    var x93 uint64
    var x94 uint64
    x93, x94 = bits.Add64(x84, x81, uint64(p512Uint1(x92)))
    var x95 uint64
    var x96 uint64
    x95, x96 = bits.Add64(x82, x79, uint64(p512Uint1(x94)))
    var x97 uint64
    var x98 uint64
    x97, x98 = bits.Add64(x80, x77, uint64(p512Uint1(x96)))
    var x99 uint64
    var x100 uint64
    x99, x100 = bits.Add64(x78, x75, uint64(p512Uint1(x98)))
    var x101 uint64
    var x102 uint64
    x101, x102 = bits.Add64(x76, x73, uint64(p512Uint1(x100)))
    var x104 uint64
    _, x104 = bits.Add64(x55, x87, uint64(0x0))
    var x105 uint64
    var x106 uint64
    x105, x106 = bits.Add64(x57, x89, uint64(p512Uint1(x104)))
    var x107 uint64
    var x108 uint64
    x107, x108 = bits.Add64(x59, x91, uint64(p512Uint1(x106)))
    var x109 uint64
    var x110 uint64
    x109, x110 = bits.Add64(x61, x93, uint64(p512Uint1(x108)))
    var x111 uint64
    var x112 uint64
    x111, x112 = bits.Add64(x63, x95, uint64(p512Uint1(x110)))
    var x113 uint64
    var x114 uint64
    x113, x114 = bits.Add64(x65, x97, uint64(p512Uint1(x112)))
    var x115 uint64
    var x116 uint64
    x115, x116 = bits.Add64(x67, x99, uint64(p512Uint1(x114)))
    var x117 uint64
    var x118 uint64
    x117, x118 = bits.Add64(x69, x101, uint64(p512Uint1(x116)))
    var x119 uint64
    var x120 uint64
    x119, x120 = bits.Add64((uint64(p512Uint1(x70)) + uint64(p512Uint1(x52))), (uint64(p512Uint1(x102)) + x74), uint64(p512Uint1(x118)))
    var x121 uint64
    var x122 uint64
    x122, x121 = bits.Mul64(arg1[2], 0x4f0b1)
    var x123 uint64
    var x124 uint64
    x123, x124 = bits.Add64(x105, x121, uint64(0x0))
    var x125 uint64
    var x126 uint64
    x125, x126 = bits.Add64(x107, x122, uint64(p512Uint1(x124)))
    var x127 uint64
    var x128 uint64
    x127, x128 = bits.Add64(x109, uint64(0x0), uint64(p512Uint1(x126)))
    var x129 uint64
    var x130 uint64
    x129, x130 = bits.Add64(x111, uint64(0x0), uint64(p512Uint1(x128)))
    var x131 uint64
    var x132 uint64
    x131, x132 = bits.Add64(x113, uint64(0x0), uint64(p512Uint1(x130)))
    var x133 uint64
    var x134 uint64
    x133, x134 = bits.Add64(x115, uint64(0x0), uint64(p512Uint1(x132)))
    var x135 uint64
    var x136 uint64
    x135, x136 = bits.Add64(x117, uint64(0x0), uint64(p512Uint1(x134)))
    var x137 uint64
    var x138 uint64
    x137, x138 = bits.Add64(x119, uint64(0x0), uint64(p512Uint1(x136)))
    var x139 uint64
    _, x139 = bits.Mul64(x123, 0x58a1f7e6ce0f4c09)
    var x141 uint64
    var x142 uint64
    x142, x141 = bits.Mul64(x139, 0xffffffffffffffff)
    var x143 uint64
    var x144 uint64
    x144, x143 = bits.Mul64(x139, 0xffffffffffffffff)
    var x145 uint64
    var x146 uint64
    x146, x145 = bits.Mul64(x139, 0xffffffffffffffff)
    var x147 uint64
    var x148 uint64
    x148, x147 = bits.Mul64(x139, 0xffffffffffffffff)
    var x149 uint64
    var x150 uint64
    x150, x149 = bits.Mul64(x139, 0xffffffffffffffff)
    var x151 uint64
    var x152 uint64
    x152, x151 = bits.Mul64(x139, 0xffffffffffffffff)
    var x153 uint64
    var x154 uint64
    x154, x153 = bits.Mul64(x139, 0xffffffffffffffff)
    var x155 uint64
    var x156 uint64
    x156, x155 = bits.Mul64(x139, 0xfffffffffffffdc7)
    var x157 uint64
    var x158 uint64
    x157, x158 = bits.Add64(x156, x153, uint64(0x0))
    var x159 uint64
    var x160 uint64
    x159, x160 = bits.Add64(x154, x151, uint64(p512Uint1(x158)))
    var x161 uint64
    var x162 uint64
    x161, x162 = bits.Add64(x152, x149, uint64(p512Uint1(x160)))
    var x163 uint64
    var x164 uint64
    x163, x164 = bits.Add64(x150, x147, uint64(p512Uint1(x162)))
    var x165 uint64
    var x166 uint64
    x165, x166 = bits.Add64(x148, x145, uint64(p512Uint1(x164)))
    var x167 uint64
    var x168 uint64
    x167, x168 = bits.Add64(x146, x143, uint64(p512Uint1(x166)))
    var x169 uint64
    var x170 uint64
    x169, x170 = bits.Add64(x144, x141, uint64(p512Uint1(x168)))
    var x172 uint64
    _, x172 = bits.Add64(x123, x155, uint64(0x0))
    var x173 uint64
    var x174 uint64
    x173, x174 = bits.Add64(x125, x157, uint64(p512Uint1(x172)))
    var x175 uint64
    var x176 uint64
    x175, x176 = bits.Add64(x127, x159, uint64(p512Uint1(x174)))
    var x177 uint64
    var x178 uint64
    x177, x178 = bits.Add64(x129, x161, uint64(p512Uint1(x176)))
    var x179 uint64
    var x180 uint64
    x179, x180 = bits.Add64(x131, x163, uint64(p512Uint1(x178)))
    var x181 uint64
    var x182 uint64
    x181, x182 = bits.Add64(x133, x165, uint64(p512Uint1(x180)))
    var x183 uint64
    var x184 uint64
    x183, x184 = bits.Add64(x135, x167, uint64(p512Uint1(x182)))
    var x185 uint64
    var x186 uint64
    x185, x186 = bits.Add64(x137, x169, uint64(p512Uint1(x184)))
    var x187 uint64
    var x188 uint64
    x187, x188 = bits.Add64((uint64(p512Uint1(x138)) + uint64(p512Uint1(x120))), (uint64(p512Uint1(x170)) + x142), uint64(p512Uint1(x186)))
    var x189 uint64
    var x190 uint64
    x190, x189 = bits.Mul64(arg1[3], 0x4f0b1)
    var x191 uint64
    var x192 uint64
    x191, x192 = bits.Add64(x173, x189, uint64(0x0))
    var x193 uint64
    var x194 uint64
    x193, x194 = bits.Add64(x175, x190, uint64(p512Uint1(x192)))
    var x195 uint64
    var x196 uint64
    x195, x196 = bits.Add64(x177, uint64(0x0), uint64(p512Uint1(x194)))
    var x197 uint64
    var x198 uint64
    x197, x198 = bits.Add64(x179, uint64(0x0), uint64(p512Uint1(x196)))
    var x199 uint64
    var x200 uint64
    x199, x200 = bits.Add64(x181, uint64(0x0), uint64(p512Uint1(x198)))
    var x201 uint64
    var x202 uint64
    x201, x202 = bits.Add64(x183, uint64(0x0), uint64(p512Uint1(x200)))
    var x203 uint64
    var x204 uint64
    x203, x204 = bits.Add64(x185, uint64(0x0), uint64(p512Uint1(x202)))
    var x205 uint64
    var x206 uint64
    x205, x206 = bits.Add64(x187, uint64(0x0), uint64(p512Uint1(x204)))
    var x207 uint64
    _, x207 = bits.Mul64(x191, 0x58a1f7e6ce0f4c09)
    var x209 uint64
    var x210 uint64
    x210, x209 = bits.Mul64(x207, 0xffffffffffffffff)
    var x211 uint64
    var x212 uint64
    x212, x211 = bits.Mul64(x207, 0xffffffffffffffff)
    var x213 uint64
    var x214 uint64
    x214, x213 = bits.Mul64(x207, 0xffffffffffffffff)
    var x215 uint64
    var x216 uint64
    x216, x215 = bits.Mul64(x207, 0xffffffffffffffff)
    var x217 uint64
    var x218 uint64
    x218, x217 = bits.Mul64(x207, 0xffffffffffffffff)
    var x219 uint64
    var x220 uint64
    x220, x219 = bits.Mul64(x207, 0xffffffffffffffff)
    var x221 uint64
    var x222 uint64
    x222, x221 = bits.Mul64(x207, 0xffffffffffffffff)
    var x223 uint64
    var x224 uint64
    x224, x223 = bits.Mul64(x207, 0xfffffffffffffdc7)
    var x225 uint64
    var x226 uint64
    x225, x226 = bits.Add64(x224, x221, uint64(0x0))
    var x227 uint64
    var x228 uint64
    x227, x228 = bits.Add64(x222, x219, uint64(p512Uint1(x226)))
    var x229 uint64
    var x230 uint64
    x229, x230 = bits.Add64(x220, x217, uint64(p512Uint1(x228)))
    var x231 uint64
    var x232 uint64
    x231, x232 = bits.Add64(x218, x215, uint64(p512Uint1(x230)))
    var x233 uint64
    var x234 uint64
    x233, x234 = bits.Add64(x216, x213, uint64(p512Uint1(x232)))
    var x235 uint64
    var x236 uint64
    x235, x236 = bits.Add64(x214, x211, uint64(p512Uint1(x234)))
    var x237 uint64
    var x238 uint64
    x237, x238 = bits.Add64(x212, x209, uint64(p512Uint1(x236)))
    var x240 uint64
    _, x240 = bits.Add64(x191, x223, uint64(0x0))
    var x241 uint64
    var x242 uint64
    x241, x242 = bits.Add64(x193, x225, uint64(p512Uint1(x240)))
    var x243 uint64
    var x244 uint64
    x243, x244 = bits.Add64(x195, x227, uint64(p512Uint1(x242)))
    var x245 uint64
    var x246 uint64
    x245, x246 = bits.Add64(x197, x229, uint64(p512Uint1(x244)))
    var x247 uint64
    var x248 uint64
    x247, x248 = bits.Add64(x199, x231, uint64(p512Uint1(x246)))
    var x249 uint64
    var x250 uint64
    x249, x250 = bits.Add64(x201, x233, uint64(p512Uint1(x248)))
    var x251 uint64
    var x252 uint64
    x251, x252 = bits.Add64(x203, x235, uint64(p512Uint1(x250)))
    var x253 uint64
    var x254 uint64
    x253, x254 = bits.Add64(x205, x237, uint64(p512Uint1(x252)))
    var x255 uint64
    var x256 uint64
    x255, x256 = bits.Add64((uint64(p512Uint1(x206)) + uint64(p512Uint1(x188))), (uint64(p512Uint1(x238)) + x210), uint64(p512Uint1(x254)))
    var x257 uint64
    var x258 uint64
    x258, x257 = bits.Mul64(arg1[4], 0x4f0b1)
    var x259 uint64
    var x260 uint64
    x259, x260 = bits.Add64(x241, x257, uint64(0x0))
    var x261 uint64
    var x262 uint64
    x261, x262 = bits.Add64(x243, x258, uint64(p512Uint1(x260)))
    var x263 uint64
    var x264 uint64
    x263, x264 = bits.Add64(x245, uint64(0x0), uint64(p512Uint1(x262)))
    var x265 uint64
    var x266 uint64
    x265, x266 = bits.Add64(x247, uint64(0x0), uint64(p512Uint1(x264)))
    var x267 uint64
    var x268 uint64
    x267, x268 = bits.Add64(x249, uint64(0x0), uint64(p512Uint1(x266)))
    var x269 uint64
    var x270 uint64
    x269, x270 = bits.Add64(x251, uint64(0x0), uint64(p512Uint1(x268)))
    var x271 uint64
    var x272 uint64
    x271, x272 = bits.Add64(x253, uint64(0x0), uint64(p512Uint1(x270)))
    var x273 uint64
    var x274 uint64
    x273, x274 = bits.Add64(x255, uint64(0x0), uint64(p512Uint1(x272)))
    var x275 uint64
    _, x275 = bits.Mul64(x259, 0x58a1f7e6ce0f4c09)
    var x277 uint64
    var x278 uint64
    x278, x277 = bits.Mul64(x275, 0xffffffffffffffff)
    var x279 uint64
    var x280 uint64
    x280, x279 = bits.Mul64(x275, 0xffffffffffffffff)
    var x281 uint64
    var x282 uint64
    x282, x281 = bits.Mul64(x275, 0xffffffffffffffff)
    var x283 uint64
    var x284 uint64
    x284, x283 = bits.Mul64(x275, 0xffffffffffffffff)
    var x285 uint64
    var x286 uint64
    x286, x285 = bits.Mul64(x275, 0xffffffffffffffff)
    var x287 uint64
    var x288 uint64
    x288, x287 = bits.Mul64(x275, 0xffffffffffffffff)
    var x289 uint64
    var x290 uint64
    x290, x289 = bits.Mul64(x275, 0xffffffffffffffff)
    var x291 uint64
    var x292 uint64
    x292, x291 = bits.Mul64(x275, 0xfffffffffffffdc7)
    var x293 uint64
    var x294 uint64
    x293, x294 = bits.Add64(x292, x289, uint64(0x0))
    var x295 uint64
    var x296 uint64
    x295, x296 = bits.Add64(x290, x287, uint64(p512Uint1(x294)))
    var x297 uint64
    var x298 uint64
    x297, x298 = bits.Add64(x288, x285, uint64(p512Uint1(x296)))
    var x299 uint64
    var x300 uint64
    x299, x300 = bits.Add64(x286, x283, uint64(p512Uint1(x298)))
    var x301 uint64
    var x302 uint64
    x301, x302 = bits.Add64(x284, x281, uint64(p512Uint1(x300)))
    var x303 uint64
    var x304 uint64
    x303, x304 = bits.Add64(x282, x279, uint64(p512Uint1(x302)))
    var x305 uint64
    var x306 uint64
    x305, x306 = bits.Add64(x280, x277, uint64(p512Uint1(x304)))
    var x308 uint64
    _, x308 = bits.Add64(x259, x291, uint64(0x0))
    var x309 uint64
    var x310 uint64
    x309, x310 = bits.Add64(x261, x293, uint64(p512Uint1(x308)))
    var x311 uint64
    var x312 uint64
    x311, x312 = bits.Add64(x263, x295, uint64(p512Uint1(x310)))
    var x313 uint64
    var x314 uint64
    x313, x314 = bits.Add64(x265, x297, uint64(p512Uint1(x312)))
    var x315 uint64
    var x316 uint64
    x315, x316 = bits.Add64(x267, x299, uint64(p512Uint1(x314)))
    var x317 uint64
    var x318 uint64
    x317, x318 = bits.Add64(x269, x301, uint64(p512Uint1(x316)))
    var x319 uint64
    var x320 uint64
    x319, x320 = bits.Add64(x271, x303, uint64(p512Uint1(x318)))
    var x321 uint64
    var x322 uint64
    x321, x322 = bits.Add64(x273, x305, uint64(p512Uint1(x320)))
    var x323 uint64
    var x324 uint64
    x323, x324 = bits.Add64((uint64(p512Uint1(x274)) + uint64(p512Uint1(x256))), (uint64(p512Uint1(x306)) + x278), uint64(p512Uint1(x322)))
    var x325 uint64
    var x326 uint64
    x326, x325 = bits.Mul64(arg1[5], 0x4f0b1)
    var x327 uint64
    var x328 uint64
    x327, x328 = bits.Add64(x309, x325, uint64(0x0))
    var x329 uint64
    var x330 uint64
    x329, x330 = bits.Add64(x311, x326, uint64(p512Uint1(x328)))
    var x331 uint64
    var x332 uint64
    x331, x332 = bits.Add64(x313, uint64(0x0), uint64(p512Uint1(x330)))
    var x333 uint64
    var x334 uint64
    x333, x334 = bits.Add64(x315, uint64(0x0), uint64(p512Uint1(x332)))
    var x335 uint64
    var x336 uint64
    x335, x336 = bits.Add64(x317, uint64(0x0), uint64(p512Uint1(x334)))
    var x337 uint64
    var x338 uint64
    x337, x338 = bits.Add64(x319, uint64(0x0), uint64(p512Uint1(x336)))
    var x339 uint64
    var x340 uint64
    x339, x340 = bits.Add64(x321, uint64(0x0), uint64(p512Uint1(x338)))
    var x341 uint64
    var x342 uint64
    x341, x342 = bits.Add64(x323, uint64(0x0), uint64(p512Uint1(x340)))
    var x343 uint64
    _, x343 = bits.Mul64(x327, 0x58a1f7e6ce0f4c09)
    var x345 uint64
    var x346 uint64
    x346, x345 = bits.Mul64(x343, 0xffffffffffffffff)
    var x347 uint64
    var x348 uint64
    x348, x347 = bits.Mul64(x343, 0xffffffffffffffff)
    var x349 uint64
    var x350 uint64
    x350, x349 = bits.Mul64(x343, 0xffffffffffffffff)
    var x351 uint64
    var x352 uint64
    x352, x351 = bits.Mul64(x343, 0xffffffffffffffff)
    var x353 uint64
    var x354 uint64
    x354, x353 = bits.Mul64(x343, 0xffffffffffffffff)
    var x355 uint64
    var x356 uint64
    x356, x355 = bits.Mul64(x343, 0xffffffffffffffff)
    var x357 uint64
    var x358 uint64
    x358, x357 = bits.Mul64(x343, 0xffffffffffffffff)
    var x359 uint64
    var x360 uint64
    x360, x359 = bits.Mul64(x343, 0xfffffffffffffdc7)
    var x361 uint64
    var x362 uint64
    x361, x362 = bits.Add64(x360, x357, uint64(0x0))
    var x363 uint64
    var x364 uint64
    x363, x364 = bits.Add64(x358, x355, uint64(p512Uint1(x362)))
    var x365 uint64
    var x366 uint64
    x365, x366 = bits.Add64(x356, x353, uint64(p512Uint1(x364)))
    var x367 uint64
    var x368 uint64
    x367, x368 = bits.Add64(x354, x351, uint64(p512Uint1(x366)))
    var x369 uint64
    var x370 uint64
    x369, x370 = bits.Add64(x352, x349, uint64(p512Uint1(x368)))
    var x371 uint64
    var x372 uint64
    x371, x372 = bits.Add64(x350, x347, uint64(p512Uint1(x370)))
    var x373 uint64
    var x374 uint64
    x373, x374 = bits.Add64(x348, x345, uint64(p512Uint1(x372)))
    var x376 uint64
    _, x376 = bits.Add64(x327, x359, uint64(0x0))
    var x377 uint64
    var x378 uint64
    x377, x378 = bits.Add64(x329, x361, uint64(p512Uint1(x376)))
    var x379 uint64
    var x380 uint64
    x379, x380 = bits.Add64(x331, x363, uint64(p512Uint1(x378)))
    var x381 uint64
    var x382 uint64
    x381, x382 = bits.Add64(x333, x365, uint64(p512Uint1(x380)))
    var x383 uint64
    var x384 uint64
    x383, x384 = bits.Add64(x335, x367, uint64(p512Uint1(x382)))
    var x385 uint64
    var x386 uint64
    x385, x386 = bits.Add64(x337, x369, uint64(p512Uint1(x384)))
    var x387 uint64
    var x388 uint64
    x387, x388 = bits.Add64(x339, x371, uint64(p512Uint1(x386)))
    var x389 uint64
    var x390 uint64
    x389, x390 = bits.Add64(x341, x373, uint64(p512Uint1(x388)))
    var x391 uint64
    var x392 uint64
    x391, x392 = bits.Add64((uint64(p512Uint1(x342)) + uint64(p512Uint1(x324))), (uint64(p512Uint1(x374)) + x346), uint64(p512Uint1(x390)))
    var x393 uint64
    var x394 uint64
    x394, x393 = bits.Mul64(arg1[6], 0x4f0b1)
    var x395 uint64
    var x396 uint64
    x395, x396 = bits.Add64(x377, x393, uint64(0x0))
    var x397 uint64
    var x398 uint64
    x397, x398 = bits.Add64(x379, x394, uint64(p512Uint1(x396)))
    var x399 uint64
    var x400 uint64
    x399, x400 = bits.Add64(x381, uint64(0x0), uint64(p512Uint1(x398)))
    var x401 uint64
    var x402 uint64
    x401, x402 = bits.Add64(x383, uint64(0x0), uint64(p512Uint1(x400)))
    var x403 uint64
    var x404 uint64
    x403, x404 = bits.Add64(x385, uint64(0x0), uint64(p512Uint1(x402)))
    var x405 uint64
    var x406 uint64
    x405, x406 = bits.Add64(x387, uint64(0x0), uint64(p512Uint1(x404)))
    var x407 uint64
    var x408 uint64
    x407, x408 = bits.Add64(x389, uint64(0x0), uint64(p512Uint1(x406)))
    var x409 uint64
    var x410 uint64
    x409, x410 = bits.Add64(x391, uint64(0x0), uint64(p512Uint1(x408)))
    var x411 uint64
    _, x411 = bits.Mul64(x395, 0x58a1f7e6ce0f4c09)
    var x413 uint64
    var x414 uint64
    x414, x413 = bits.Mul64(x411, 0xffffffffffffffff)
    var x415 uint64
    var x416 uint64
    x416, x415 = bits.Mul64(x411, 0xffffffffffffffff)
    var x417 uint64
    var x418 uint64
    x418, x417 = bits.Mul64(x411, 0xffffffffffffffff)
    var x419 uint64
    var x420 uint64
    x420, x419 = bits.Mul64(x411, 0xffffffffffffffff)
    var x421 uint64
    var x422 uint64
    x422, x421 = bits.Mul64(x411, 0xffffffffffffffff)
    var x423 uint64
    var x424 uint64
    x424, x423 = bits.Mul64(x411, 0xffffffffffffffff)
    var x425 uint64
    var x426 uint64
    x426, x425 = bits.Mul64(x411, 0xffffffffffffffff)
    var x427 uint64
    var x428 uint64
    x428, x427 = bits.Mul64(x411, 0xfffffffffffffdc7)
    var x429 uint64
    var x430 uint64
    x429, x430 = bits.Add64(x428, x425, uint64(0x0))
    var x431 uint64
    var x432 uint64
    x431, x432 = bits.Add64(x426, x423, uint64(p512Uint1(x430)))
    var x433 uint64
    var x434 uint64
    x433, x434 = bits.Add64(x424, x421, uint64(p512Uint1(x432)))
    var x435 uint64
    var x436 uint64
    x435, x436 = bits.Add64(x422, x419, uint64(p512Uint1(x434)))
    var x437 uint64
    var x438 uint64
    x437, x438 = bits.Add64(x420, x417, uint64(p512Uint1(x436)))
    var x439 uint64
    var x440 uint64
    x439, x440 = bits.Add64(x418, x415, uint64(p512Uint1(x438)))
    var x441 uint64
    var x442 uint64
    x441, x442 = bits.Add64(x416, x413, uint64(p512Uint1(x440)))
    var x444 uint64
    _, x444 = bits.Add64(x395, x427, uint64(0x0))
    var x445 uint64
    var x446 uint64
    x445, x446 = bits.Add64(x397, x429, uint64(p512Uint1(x444)))
    var x447 uint64
    var x448 uint64
    x447, x448 = bits.Add64(x399, x431, uint64(p512Uint1(x446)))
    var x449 uint64
    var x450 uint64
    x449, x450 = bits.Add64(x401, x433, uint64(p512Uint1(x448)))
    var x451 uint64
    var x452 uint64
    x451, x452 = bits.Add64(x403, x435, uint64(p512Uint1(x450)))
    var x453 uint64
    var x454 uint64
    x453, x454 = bits.Add64(x405, x437, uint64(p512Uint1(x452)))
    var x455 uint64
    var x456 uint64
    x455, x456 = bits.Add64(x407, x439, uint64(p512Uint1(x454)))
    var x457 uint64
    var x458 uint64
    x457, x458 = bits.Add64(x409, x441, uint64(p512Uint1(x456)))
    var x459 uint64
    var x460 uint64
    x459, x460 = bits.Add64((uint64(p512Uint1(x410)) + uint64(p512Uint1(x392))), (uint64(p512Uint1(x442)) + x414), uint64(p512Uint1(x458)))
    var x461 uint64
    var x462 uint64
    x462, x461 = bits.Mul64(arg1[7], 0x4f0b1)
    var x463 uint64
    var x464 uint64
    x463, x464 = bits.Add64(x445, x461, uint64(0x0))
    var x465 uint64
    var x466 uint64
    x465, x466 = bits.Add64(x447, x462, uint64(p512Uint1(x464)))
    var x467 uint64
    var x468 uint64
    x467, x468 = bits.Add64(x449, uint64(0x0), uint64(p512Uint1(x466)))
    var x469 uint64
    var x470 uint64
    x469, x470 = bits.Add64(x451, uint64(0x0), uint64(p512Uint1(x468)))
    var x471 uint64
    var x472 uint64
    x471, x472 = bits.Add64(x453, uint64(0x0), uint64(p512Uint1(x470)))
    var x473 uint64
    var x474 uint64
    x473, x474 = bits.Add64(x455, uint64(0x0), uint64(p512Uint1(x472)))
    var x475 uint64
    var x476 uint64
    x475, x476 = bits.Add64(x457, uint64(0x0), uint64(p512Uint1(x474)))
    var x477 uint64
    var x478 uint64
    x477, x478 = bits.Add64(x459, uint64(0x0), uint64(p512Uint1(x476)))
    var x479 uint64
    _, x479 = bits.Mul64(x463, 0x58a1f7e6ce0f4c09)
    var x481 uint64
    var x482 uint64
    x482, x481 = bits.Mul64(x479, 0xffffffffffffffff)
    var x483 uint64
    var x484 uint64
    x484, x483 = bits.Mul64(x479, 0xffffffffffffffff)
    var x485 uint64
    var x486 uint64
    x486, x485 = bits.Mul64(x479, 0xffffffffffffffff)
    var x487 uint64
    var x488 uint64
    x488, x487 = bits.Mul64(x479, 0xffffffffffffffff)
    var x489 uint64
    var x490 uint64
    x490, x489 = bits.Mul64(x479, 0xffffffffffffffff)
    var x491 uint64
    var x492 uint64
    x492, x491 = bits.Mul64(x479, 0xffffffffffffffff)
    var x493 uint64
    var x494 uint64
    x494, x493 = bits.Mul64(x479, 0xffffffffffffffff)
    var x495 uint64
    var x496 uint64
    x496, x495 = bits.Mul64(x479, 0xfffffffffffffdc7)
    var x497 uint64
    var x498 uint64
    x497, x498 = bits.Add64(x496, x493, uint64(0x0))
    var x499 uint64
    var x500 uint64
    x499, x500 = bits.Add64(x494, x491, uint64(p512Uint1(x498)))
    var x501 uint64
    var x502 uint64
    x501, x502 = bits.Add64(x492, x489, uint64(p512Uint1(x500)))
    var x503 uint64
    var x504 uint64
    x503, x504 = bits.Add64(x490, x487, uint64(p512Uint1(x502)))
    var x505 uint64
    var x506 uint64
    x505, x506 = bits.Add64(x488, x485, uint64(p512Uint1(x504)))
    var x507 uint64
    var x508 uint64
    x507, x508 = bits.Add64(x486, x483, uint64(p512Uint1(x506)))
    var x509 uint64
    var x510 uint64
    x509, x510 = bits.Add64(x484, x481, uint64(p512Uint1(x508)))
    var x512 uint64
    _, x512 = bits.Add64(x463, x495, uint64(0x0))
    var x513 uint64
    var x514 uint64
    x513, x514 = bits.Add64(x465, x497, uint64(p512Uint1(x512)))
    var x515 uint64
    var x516 uint64
    x515, x516 = bits.Add64(x467, x499, uint64(p512Uint1(x514)))
    var x517 uint64
    var x518 uint64
    x517, x518 = bits.Add64(x469, x501, uint64(p512Uint1(x516)))
    var x519 uint64
    var x520 uint64
    x519, x520 = bits.Add64(x471, x503, uint64(p512Uint1(x518)))
    var x521 uint64
    var x522 uint64
    x521, x522 = bits.Add64(x473, x505, uint64(p512Uint1(x520)))
    var x523 uint64
    var x524 uint64
    x523, x524 = bits.Add64(x475, x507, uint64(p512Uint1(x522)))
    var x525 uint64
    var x526 uint64
    x525, x526 = bits.Add64(x477, x509, uint64(p512Uint1(x524)))
    var x527 uint64
    var x528 uint64
    x527, x528 = bits.Add64((uint64(p512Uint1(x478)) + uint64(p512Uint1(x460))), (uint64(p512Uint1(x510)) + x482), uint64(p512Uint1(x526)))
    var x529 uint64
    var x530 uint64
    x529, x530 = bits.Sub64(x513, 0xfffffffffffffdc7, uint64(0x0))
    var x531 uint64
    var x532 uint64
    x531, x532 = bits.Sub64(x515, 0xffffffffffffffff, uint64(p512Uint1(x530)))
    var x533 uint64
    var x534 uint64
    x533, x534 = bits.Sub64(x517, 0xffffffffffffffff, uint64(p512Uint1(x532)))
    var x535 uint64
    var x536 uint64
    x535, x536 = bits.Sub64(x519, 0xffffffffffffffff, uint64(p512Uint1(x534)))
    var x537 uint64
    var x538 uint64
    x537, x538 = bits.Sub64(x521, 0xffffffffffffffff, uint64(p512Uint1(x536)))
    var x539 uint64
    var x540 uint64
    x539, x540 = bits.Sub64(x523, 0xffffffffffffffff, uint64(p512Uint1(x538)))
    var x541 uint64
    var x542 uint64
    x541, x542 = bits.Sub64(x525, 0xffffffffffffffff, uint64(p512Uint1(x540)))
    var x543 uint64
    var x544 uint64
    x543, x544 = bits.Sub64(x527, 0xffffffffffffffff, uint64(p512Uint1(x542)))
    var x546 uint64
    _, x546 = bits.Sub64(uint64(p512Uint1(x528)), uint64(0x0), uint64(p512Uint1(x544)))
    var x547 uint64
    p512CmovznzU64(&x547, p512Uint1(x546), x529, x513)
    var x548 uint64
    p512CmovznzU64(&x548, p512Uint1(x546), x531, x515)
    var x549 uint64
    p512CmovznzU64(&x549, p512Uint1(x546), x533, x517)
    var x550 uint64
    p512CmovznzU64(&x550, p512Uint1(x546), x535, x519)
    var x551 uint64
    p512CmovznzU64(&x551, p512Uint1(x546), x537, x521)
    var x552 uint64
    p512CmovznzU64(&x552, p512Uint1(x546), x539, x523)
    var x553 uint64
    p512CmovznzU64(&x553, p512Uint1(x546), x541, x525)
    var x554 uint64
    p512CmovznzU64(&x554, p512Uint1(x546), x543, x527)
    out1[0] = x547
    out1[1] = x548
    out1[2] = x549
    out1[3] = x550
    out1[4] = x551
    out1[5] = x552
    out1[6] = x553
    out1[7] = x554
}

// p512Selectznz is a multi-limb conditional select.
//
// Postconditions:
//
//	out1 = (if arg1 = 0 then arg2 else arg3)
//
// Input Bounds:
//
//	arg1: [0x0 ~> 0x1]
//	arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
//	arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
//
// Output Bounds:
//
//	out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
func p512Selectznz(out1 *[8]uint64, arg1 p512Uint1, arg2 *[8]uint64, arg3 *[8]uint64) {
    var x1 uint64
    p512CmovznzU64(&x1, arg1, arg2[0], arg3[0])
    var x2 uint64
    p512CmovznzU64(&x2, arg1, arg2[1], arg3[1])
    var x3 uint64
    p512CmovznzU64(&x3, arg1, arg2[2], arg3[2])
    var x4 uint64
    p512CmovznzU64(&x4, arg1, arg2[3], arg3[3])
    var x5 uint64
    p512CmovznzU64(&x5, arg1, arg2[4], arg3[4])
    var x6 uint64
    p512CmovznzU64(&x6, arg1, arg2[5], arg3[5])
    var x7 uint64
    p512CmovznzU64(&x7, arg1, arg2[6], arg3[6])
    var x8 uint64
    p512CmovznzU64(&x8, arg1, arg2[7], arg3[7])
    out1[0] = x1
    out1[1] = x2
    out1[2] = x3
    out1[3] = x4
    out1[4] = x5
    out1[5] = x6
    out1[6] = x7
    out1[7] = x8
}

// p512ToBytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
//
// Preconditions:
//
//	0 ≤ eval arg1 < m
//
// Postconditions:
//
//	out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..63]
//
// Input Bounds:
//
//	arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
//
// Output Bounds:
//
//	out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
func p512ToBytes(out1 *[64]uint8, arg1 *[8]uint64) {
    x1 := arg1[7]
    x2 := arg1[6]
    x3 := arg1[5]
    x4 := arg1[4]
    x5 := arg1[3]
    x6 := arg1[2]
    x7 := arg1[1]
    x8 := arg1[0]
    x9 := (uint8(x8) & 0xff)
    x10 := (x8 >> 8)
    x11 := (uint8(x10) & 0xff)
    x12 := (x10 >> 8)
    x13 := (uint8(x12) & 0xff)
    x14 := (x12 >> 8)
    x15 := (uint8(x14) & 0xff)
    x16 := (x14 >> 8)
    x17 := (uint8(x16) & 0xff)
    x18 := (x16 >> 8)
    x19 := (uint8(x18) & 0xff)
    x20 := (x18 >> 8)
    x21 := (uint8(x20) & 0xff)
    x22 := uint8((x20 >> 8))
    x23 := (uint8(x7) & 0xff)
    x24 := (x7 >> 8)
    x25 := (uint8(x24) & 0xff)
    x26 := (x24 >> 8)
    x27 := (uint8(x26) & 0xff)
    x28 := (x26 >> 8)
    x29 := (uint8(x28) & 0xff)
    x30 := (x28 >> 8)
    x31 := (uint8(x30) & 0xff)
    x32 := (x30 >> 8)
    x33 := (uint8(x32) & 0xff)
    x34 := (x32 >> 8)
    x35 := (uint8(x34) & 0xff)
    x36 := uint8((x34 >> 8))
    x37 := (uint8(x6) & 0xff)
    x38 := (x6 >> 8)
    x39 := (uint8(x38) & 0xff)
    x40 := (x38 >> 8)
    x41 := (uint8(x40) & 0xff)
    x42 := (x40 >> 8)
    x43 := (uint8(x42) & 0xff)
    x44 := (x42 >> 8)
    x45 := (uint8(x44) & 0xff)
    x46 := (x44 >> 8)
    x47 := (uint8(x46) & 0xff)
    x48 := (x46 >> 8)
    x49 := (uint8(x48) & 0xff)
    x50 := uint8((x48 >> 8))
    x51 := (uint8(x5) & 0xff)
    x52 := (x5 >> 8)
    x53 := (uint8(x52) & 0xff)
    x54 := (x52 >> 8)
    x55 := (uint8(x54) & 0xff)
    x56 := (x54 >> 8)
    x57 := (uint8(x56) & 0xff)
    x58 := (x56 >> 8)
    x59 := (uint8(x58) & 0xff)
    x60 := (x58 >> 8)
    x61 := (uint8(x60) & 0xff)
    x62 := (x60 >> 8)
    x63 := (uint8(x62) & 0xff)
    x64 := uint8((x62 >> 8))
    x65 := (uint8(x4) & 0xff)
    x66 := (x4 >> 8)
    x67 := (uint8(x66) & 0xff)
    x68 := (x66 >> 8)
    x69 := (uint8(x68) & 0xff)
    x70 := (x68 >> 8)
    x71 := (uint8(x70) & 0xff)
    x72 := (x70 >> 8)
    x73 := (uint8(x72) & 0xff)
    x74 := (x72 >> 8)
    x75 := (uint8(x74) & 0xff)
    x76 := (x74 >> 8)
    x77 := (uint8(x76) & 0xff)
    x78 := uint8((x76 >> 8))
    x79 := (uint8(x3) & 0xff)
    x80 := (x3 >> 8)
    x81 := (uint8(x80) & 0xff)
    x82 := (x80 >> 8)
    x83 := (uint8(x82) & 0xff)
    x84 := (x82 >> 8)
    x85 := (uint8(x84) & 0xff)
    x86 := (x84 >> 8)
    x87 := (uint8(x86) & 0xff)
    x88 := (x86 >> 8)
    x89 := (uint8(x88) & 0xff)
    x90 := (x88 >> 8)
    x91 := (uint8(x90) & 0xff)
    x92 := uint8((x90 >> 8))
    x93 := (uint8(x2) & 0xff)
    x94 := (x2 >> 8)
    x95 := (uint8(x94) & 0xff)
    x96 := (x94 >> 8)
    x97 := (uint8(x96) & 0xff)
    x98 := (x96 >> 8)
    x99 := (uint8(x98) & 0xff)
    x100 := (x98 >> 8)
    x101 := (uint8(x100) & 0xff)
    x102 := (x100 >> 8)
    x103 := (uint8(x102) & 0xff)
    x104 := (x102 >> 8)
    x105 := (uint8(x104) & 0xff)
    x106 := uint8((x104 >> 8))
    x107 := (uint8(x1) & 0xff)
    x108 := (x1 >> 8)
    x109 := (uint8(x108) & 0xff)
    x110 := (x108 >> 8)
    x111 := (uint8(x110) & 0xff)
    x112 := (x110 >> 8)
    x113 := (uint8(x112) & 0xff)
    x114 := (x112 >> 8)
    x115 := (uint8(x114) & 0xff)
    x116 := (x114 >> 8)
    x117 := (uint8(x116) & 0xff)
    x118 := (x116 >> 8)
    x119 := (uint8(x118) & 0xff)
    x120 := uint8((x118 >> 8))
    out1[0] = x9
    out1[1] = x11
    out1[2] = x13
    out1[3] = x15
    out1[4] = x17
    out1[5] = x19
    out1[6] = x21
    out1[7] = x22
    out1[8] = x23
    out1[9] = x25
    out1[10] = x27
    out1[11] = x29
    out1[12] = x31
    out1[13] = x33
    out1[14] = x35
    out1[15] = x36
    out1[16] = x37
    out1[17] = x39
    out1[18] = x41
    out1[19] = x43
    out1[20] = x45
    out1[21] = x47
    out1[22] = x49
    out1[23] = x50
    out1[24] = x51
    out1[25] = x53
    out1[26] = x55
    out1[27] = x57
    out1[28] = x59
    out1[29] = x61
    out1[30] = x63
    out1[31] = x64
    out1[32] = x65
    out1[33] = x67
    out1[34] = x69
    out1[35] = x71
    out1[36] = x73
    out1[37] = x75
    out1[38] = x77
    out1[39] = x78
    out1[40] = x79
    out1[41] = x81
    out1[42] = x83
    out1[43] = x85
    out1[44] = x87
    out1[45] = x89
    out1[46] = x91
    out1[47] = x92
    out1[48] = x93
    out1[49] = x95
    out1[50] = x97
    out1[51] = x99
    out1[52] = x101
    out1[53] = x103
    out1[54] = x105
    out1[55] = x106
    out1[56] = x107
    out1[57] = x109
    out1[58] = x111
    out1[59] = x113
    out1[60] = x115
    out1[61] = x117
    out1[62] = x119
    out1[63] = x120
}

// p512FromBytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
//
// Preconditions:
//
//	0 ≤ bytes_eval arg1 < m
//
// Postconditions:
//
//	eval out1 mod m = bytes_eval arg1 mod m
//	0 ≤ eval out1 < m
//
// Input Bounds:
//
//	arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
//
// Output Bounds:
//
//	out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
func p512FromBytes(out1 *[8]uint64, arg1 *[64]uint8) {
    x1 := (uint64(arg1[63]) << 56)
    x2 := (uint64(arg1[62]) << 48)
    x3 := (uint64(arg1[61]) << 40)
    x4 := (uint64(arg1[60]) << 32)
    x5 := (uint64(arg1[59]) << 24)
    x6 := (uint64(arg1[58]) << 16)
    x7 := (uint64(arg1[57]) << 8)
    x8 := arg1[56]
    x9 := (uint64(arg1[55]) << 56)
    x10 := (uint64(arg1[54]) << 48)
    x11 := (uint64(arg1[53]) << 40)
    x12 := (uint64(arg1[52]) << 32)
    x13 := (uint64(arg1[51]) << 24)
    x14 := (uint64(arg1[50]) << 16)
    x15 := (uint64(arg1[49]) << 8)
    x16 := arg1[48]
    x17 := (uint64(arg1[47]) << 56)
    x18 := (uint64(arg1[46]) << 48)
    x19 := (uint64(arg1[45]) << 40)
    x20 := (uint64(arg1[44]) << 32)
    x21 := (uint64(arg1[43]) << 24)
    x22 := (uint64(arg1[42]) << 16)
    x23 := (uint64(arg1[41]) << 8)
    x24 := arg1[40]
    x25 := (uint64(arg1[39]) << 56)
    x26 := (uint64(arg1[38]) << 48)
    x27 := (uint64(arg1[37]) << 40)
    x28 := (uint64(arg1[36]) << 32)
    x29 := (uint64(arg1[35]) << 24)
    x30 := (uint64(arg1[34]) << 16)
    x31 := (uint64(arg1[33]) << 8)
    x32 := arg1[32]
    x33 := (uint64(arg1[31]) << 56)
    x34 := (uint64(arg1[30]) << 48)
    x35 := (uint64(arg1[29]) << 40)
    x36 := (uint64(arg1[28]) << 32)
    x37 := (uint64(arg1[27]) << 24)
    x38 := (uint64(arg1[26]) << 16)
    x39 := (uint64(arg1[25]) << 8)
    x40 := arg1[24]
    x41 := (uint64(arg1[23]) << 56)
    x42 := (uint64(arg1[22]) << 48)
    x43 := (uint64(arg1[21]) << 40)
    x44 := (uint64(arg1[20]) << 32)
    x45 := (uint64(arg1[19]) << 24)
    x46 := (uint64(arg1[18]) << 16)
    x47 := (uint64(arg1[17]) << 8)
    x48 := arg1[16]
    x49 := (uint64(arg1[15]) << 56)
    x50 := (uint64(arg1[14]) << 48)
    x51 := (uint64(arg1[13]) << 40)
    x52 := (uint64(arg1[12]) << 32)
    x53 := (uint64(arg1[11]) << 24)
    x54 := (uint64(arg1[10]) << 16)
    x55 := (uint64(arg1[9]) << 8)
    x56 := arg1[8]
    x57 := (uint64(arg1[7]) << 56)
    x58 := (uint64(arg1[6]) << 48)
    x59 := (uint64(arg1[5]) << 40)
    x60 := (uint64(arg1[4]) << 32)
    x61 := (uint64(arg1[3]) << 24)
    x62 := (uint64(arg1[2]) << 16)
    x63 := (uint64(arg1[1]) << 8)
    x64 := arg1[0]
    x65 := (x63 + uint64(x64))
    x66 := (x62 + x65)
    x67 := (x61 + x66)
    x68 := (x60 + x67)
    x69 := (x59 + x68)
    x70 := (x58 + x69)
    x71 := (x57 + x70)
    x72 := (x55 + uint64(x56))
    x73 := (x54 + x72)
    x74 := (x53 + x73)
    x75 := (x52 + x74)
    x76 := (x51 + x75)
    x77 := (x50 + x76)
    x78 := (x49 + x77)
    x79 := (x47 + uint64(x48))
    x80 := (x46 + x79)
    x81 := (x45 + x80)
    x82 := (x44 + x81)
    x83 := (x43 + x82)
    x84 := (x42 + x83)
    x85 := (x41 + x84)
    x86 := (x39 + uint64(x40))
    x87 := (x38 + x86)
    x88 := (x37 + x87)
    x89 := (x36 + x88)
    x90 := (x35 + x89)
    x91 := (x34 + x90)
    x92 := (x33 + x91)
    x93 := (x31 + uint64(x32))
    x94 := (x30 + x93)
    x95 := (x29 + x94)
    x96 := (x28 + x95)
    x97 := (x27 + x96)
    x98 := (x26 + x97)
    x99 := (x25 + x98)
    x100 := (x23 + uint64(x24))
    x101 := (x22 + x100)
    x102 := (x21 + x101)
    x103 := (x20 + x102)
    x104 := (x19 + x103)
    x105 := (x18 + x104)
    x106 := (x17 + x105)
    x107 := (x15 + uint64(x16))
    x108 := (x14 + x107)
    x109 := (x13 + x108)
    x110 := (x12 + x109)
    x111 := (x11 + x110)
    x112 := (x10 + x111)
    x113 := (x9 + x112)
    x114 := (x7 + uint64(x8))
    x115 := (x6 + x114)
    x116 := (x5 + x115)
    x117 := (x4 + x116)
    x118 := (x3 + x117)
    x119 := (x2 + x118)
    x120 := (x1 + x119)
    out1[0] = x71
    out1[1] = x78
    out1[2] = x85
    out1[3] = x92
    out1[4] = x99
    out1[5] = x106
    out1[6] = x113
    out1[7] = x120
}
